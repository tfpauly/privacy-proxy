{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-01-28T00:18:16.665377+00:00",
  "repo": "tfpauly/privacy-proxy",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    },
    {
      "name": "Initial Version",
      "description": "",
      "color": "bfd4f2"
    },
    {
      "name": "Future Version",
      "description": "",
      "color": "6153EF"
    },
    {
      "name": "Private Access Tokens",
      "description": "",
      "color": "0052cc"
    },
    {
      "name": "Geo Hint",
      "description": "",
      "color": "E05385"
    },
    {
      "name": "editorial",
      "description": "",
      "color": "E52A7A"
    },
    {
      "name": "DNS Proxy Status",
      "description": "",
      "color": "d4c5f9"
    },
    {
      "name": "Proxy PvDs",
      "description": "",
      "color": "0B9463"
    },
    {
      "name": "Discuss",
      "description": "",
      "color": "B60205"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "MDU6SXNzdWU4MDY1NjM4MTQ=",
      "title": "Allow privacy token to support either 2048 or 4096 RSA keys",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/1",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We should support different versions here.",
      "createdAt": "2021-02-11T16:47:52Z",
      "updatedAt": "2021-02-23T20:33:12Z",
      "closedAt": "2021-02-23T19:20:50Z",
      "comments": [
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "Our recommendation for RSA is to keep 4096-bit keys. We can take a look at how to address performance concerns but I don't think reducing the security parameter size is the best option.",
          "createdAt": "2021-02-11T16:55:18Z",
          "updatedAt": "2021-02-11T16:55:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I support this relaxation. The actual long-term threat here only applies in very unrealistic or improbable scenarios. That said, having the version determine the key length is nice. ",
          "createdAt": "2021-02-18T23:15:58Z",
          "updatedAt": "2021-02-18T23:15:58Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Is it worth then defining both a v1 (4096-bit key) and a v2 (same but 2048-bit key) within this draft, with some security considerations talking about the trade-offs?  (Or swapping the ordering of v1/v2?)",
          "createdAt": "2021-02-23T20:29:18Z",
          "updatedAt": "2021-02-23T20:29:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Is it worth then defining both a v1 (4096-bit key) and a v2 (same but 2048-bit key) within this draft, with some security considerations talking about the trade-offs? (Or swapping the ordering of v1/v2?)\r\n\r\nIt probably wouldn't hurt, yeah. Clients that are willing to accept 2048-bit keys could choose to do so. ",
          "createdAt": "2021-02-23T20:33:12Z",
          "updatedAt": "2021-02-23T20:33:12Z"
        }
      ]
    },
    {
      "number": 2,
      "id": "MDU6SXNzdWU4MTEzNjI2NDI=",
      "title": "Expand key_id to 8 bytes",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/2",
      "state": "CLOSED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "With key_id now being a hash of the public key, it would be preferable to switch the size of key_id to 8 bytes.  The chance of collisions with a  32-bit key_id with frequent rotations means that the key generation will need to track past keys to explicitly avoid collisions.  With a 64-bit key_id, accidental collisions is much more likely to be a non-issue.\r\n\r\n",
      "createdAt": "2021-02-18T18:42:52Z",
      "updatedAt": "2021-03-25T15:58:45Z",
      "closedAt": "2021-03-25T15:58:45Z",
      "comments": [
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "(We should also define the encoding of the public key being hashed)",
          "createdAt": "2021-02-18T18:54:05Z",
          "updatedAt": "2021-02-18T18:54:05Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> We should also define the encoding of the public key being hashed\r\n\r\nThe public key is a DER-encoded SubjectPublicKeyInfo, which is fairly standard. 8 bytes seems fine here.",
          "createdAt": "2021-02-18T23:14:22Z",
          "updatedAt": "2021-02-18T23:14:22Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think this is done?",
          "createdAt": "2021-03-25T15:58:45Z",
          "updatedAt": "2021-03-25T15:58:45Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "MDU6SXNzdWU4MTM4MDM2MTc=",
      "title": "Strongly reference RSA blind in the Privacy Token Structure section",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/4",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Add comment in section 2 highlighting that the message must be encoded as described in [RSASIG] for the creation of this signature; otherwise without the appropriate encoding this scheme is not robust",
      "createdAt": "2021-02-22T19:39:55Z",
      "updatedAt": "2021-10-02T03:59:54Z",
      "closedAt": "2021-10-02T03:59:54Z",
      "comments": []
    },
    {
      "number": 13,
      "id": "MDU6SXNzdWU5ODU4MDU2MDE=",
      "title": "Should we require multiple issuers per redeemer?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/13",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We don't want to encourage cases where a specific issuer can block a mediator wholesale, such as one company preferring you to use its mediator instead of another mediator. To mitigate against this, we could require that there are always multiple issuers supported by a redeemer.\r\n\r\nThe complexity this raises is that the issuers would have different state held for rate limiting.",
      "createdAt": "2021-09-01T23:04:51Z",
      "updatedAt": "2021-09-28T00:56:51Z",
      "closedAt": "2021-09-28T00:56:51Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "It seems like with multiple issuers for the same origin, the mediator will need to be bound to a single issuer or keeping its own state about what issuers a certain client has talked to, otherwise clients could easily multiply the tokens they are supposed to get under a single origin policy by all the available issuers the origin/redeemer supports. Cross-company cross-issuer rate limiting seems like it would require a lot of consistency infrastructure to avoid having a decent gap when clients could effectively double-issue tokens.",
          "createdAt": "2021-09-07T02:57:03Z",
          "updatedAt": "2021-09-07T02:57:03Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Agreed. The other approach here would be to detect/prevent Issuers from blocking specific Mediators just because they want to prefer a Mediator that they have more control over or can collude with.",
          "createdAt": "2021-09-23T16:56:20Z",
          "updatedAt": "2021-09-23T16:56:20Z"
        }
      ]
    },
    {
      "number": 14,
      "id": "MDU6SXNzdWU5ODU4MDY0OTI=",
      "title": "Clarify that Private Access Tokens are bound to origins",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/14",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "We should be clear that token keys are per-origin, and not used for different origins within a site",
      "createdAt": "2021-09-01T23:05:42Z",
      "updatedAt": "2021-09-24T20:48:41Z",
      "closedAt": "2021-09-24T20:48:41Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "See also #26 ",
          "createdAt": "2021-09-13T19:47:28Z",
          "updatedAt": "2021-09-13T19:47:28Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Likely this should go in security considerations",
          "createdAt": "2021-09-23T16:56:59Z",
          "updatedAt": "2021-09-23T16:56:59Z"
        }
      ]
    },
    {
      "number": 16,
      "id": "MDU6SXNzdWU5ODgxNDA3ODg=",
      "title": "Issuer and mediator can collude privately",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/16",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "There doesn't appear to be a way for a client to participate in the creation of its own anonymous identifier. Because of this, a mediator can freely and privately collude with specific issuers if it wishes to reveal the client identity.\r\n\r\nTo combat this, we should consider having the client participate in its own anonymous ID creation. This may mean pushing issuer policy windows down the clients.",
      "createdAt": "2021-09-03T22:51:18Z",
      "updatedAt": "2021-10-22T19:02:00Z",
      "closedAt": "2021-10-22T19:02:00Z",
      "comments": [
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Wouldn't you still need to expose to the mediator the anonymous ID being sent to the issuer? So that the mediator can enforce anonymous ID consistency? At which point the mediator and issuer can still backchannel a mapping table from the anonymous IDs the mediator sees with the actual ID it has from the client authentication?\r\n\r\n",
          "createdAt": "2021-09-07T02:59:37Z",
          "updatedAt": "2021-09-07T02:59:37Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This collusion is discussed now, closing for now",
          "createdAt": "2021-10-22T19:02:00Z",
          "updatedAt": "2021-10-22T19:02:00Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "MDU6SXNzdWU5ODk4OTEyMTk=",
      "title": "Redeemer's Issuer Configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/18",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "I may have missed it, but how does the redeemer declare the issuers it can use in a way that is guaranteed not to be shared by the client that is hitting that redeemer? If different clients see different lists of issuers, can redeemer's do some sort of probabilistic fingerprinting using that choice?",
      "createdAt": "2021-09-07T11:38:17Z",
      "updatedAt": "2021-09-20T19:20:49Z",
      "closedAt": "2021-09-20T19:20:49Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Doing this with #25 ",
          "createdAt": "2021-09-13T19:46:55Z",
          "updatedAt": "2021-09-13T19:46:55Z"
        }
      ]
    },
    {
      "number": 19,
      "id": "MDU6SXNzdWU5OTAxNTA2ODA=",
      "title": "Discuss TLS MITM for Private Access Tokens",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/19",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "To add to security considerations:\r\n\r\nClient to mediator connections SHOULD protect against MITM (pinning, etc)\r\nClient to origin / redeemer could be intercepted to have the MITM harvest tokens",
      "createdAt": "2021-09-07T16:22:01Z",
      "updatedAt": "2021-09-24T20:48:41Z",
      "closedAt": "2021-09-24T20:48:41Z",
      "comments": []
    },
    {
      "number": 20,
      "id": "MDU6SXNzdWU5OTAxNTYxNzA=",
      "title": "Private Access Tokens should have an interactive mode",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/20",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Instead of being able to use cached tokens, there should also be a way to have the origin have a one-time challenge that binds a token to a particular session. This is important for high-value tokens that shouldn't be possible to harvest.",
      "createdAt": "2021-09-07T16:28:57Z",
      "updatedAt": "2021-09-15T23:18:55Z",
      "closedAt": "2021-09-15T23:18:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Making this interactive _should_ be pretty straightforward. In particular, redeemers can challenge clients with a per-token context, e.g.,\r\n\r\n```\r\nstruct {\r\n   opaque redeemer_nonce[32]; // 32 fresh random bytes\r\n   uint64 timestamp;  // Seconds since UNIX epoch \r\n} TokenContext;\r\n```\r\n\r\nWhen generating a token request, clients can then form the message to be signed as: \r\n\r\n```\r\nstruct {\r\n   opaque client_nonce[32]; // 32 fresh random bytes\r\n   TokenContext context; // Copied from above\r\n} TokenInput;\r\n\r\n...\r\n\r\nblinded_req, blind_inv = rsabssa_blind(ORIGIN_KEY, TokenInput)\r\n```\r\n\r\n`TokenContext` should be bound to the client session, e.g., discarded when the session goes away. @dvorak42, what do you think?",
          "createdAt": "2021-09-14T16:32:49Z",
          "updatedAt": "2021-09-14T16:32:49Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, this should work fine for single use context, though you'll need some period of validity that the client should be willing to sign the timestamp around (too long and the redeemer could be replaying a challenge from a different redeemer to get a signed token to use). There's then also the complexity of clock skew depending on how tight the bounds for the timestamp are.\r\n\r\n",
          "createdAt": "2021-09-15T14:02:16Z",
          "updatedAt": "2021-09-15T14:02:16Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think skew is much of a problem here, since the redeemer is the one selecting the timestamp and then consuming it later on. The client should not need to use the timestamp in any way.",
          "createdAt": "2021-09-15T14:04:25Z",
          "updatedAt": "2021-09-15T14:04:25Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "Ah I had been thinking about an attack where the redeemer is replaying another redeemer's challenge, but I think the client already binds the redeemer's identity to the signed token, so maybe that's not necessary?",
          "createdAt": "2021-09-15T14:31:57Z",
          "updatedAt": "2021-09-15T14:31:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll put up a PR in a bit and we can hash out the details :) ",
          "createdAt": "2021-09-15T14:33:15Z",
          "updatedAt": "2021-09-15T14:33:15Z"
        }
      ]
    },
    {
      "number": 21,
      "id": "MDU6SXNzdWU5OTAxNjE1MzM=",
      "title": "Redemption binding to requests",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/21",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Write up method for binding redemptions to particular HTTP requests to avoid replay as a form of interactive protocol (#20 ).",
      "createdAt": "2021-09-07T16:36:30Z",
      "updatedAt": "2021-09-23T16:57:57Z",
      "closedAt": "2021-09-23T16:57:57Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think #29 covers this?",
          "createdAt": "2021-09-23T16:57:56Z",
          "updatedAt": "2021-09-23T16:57:56Z"
        }
      ]
    },
    {
      "number": 22,
      "id": "MDU6SXNzdWU5OTAyMjQ1MjE=",
      "title": "Discuss fallback options",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/22",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Mediator/issuer combinations may not be supported by all clients. We should choose and specify redeemer strategies to handle fallback. We should also add more detail into the example use cases.",
      "createdAt": "2021-09-07T18:04:28Z",
      "updatedAt": "2022-07-05T21:00:24Z",
      "closedAt": "2022-07-05T21:00:24Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we can close this one out. If the origin chooses an issuer that simply won't work with the client's preferred attester, then the issuance protocol can't run. Dealing with that scenario is an application-specific decision. @tfpauly, thoughts?",
          "createdAt": "2022-07-05T20:55:02Z",
          "updatedAt": "2022-07-05T20:55:02Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yeah, I don't think we need to address this specifically \u2014 and it likely would be an architecture thing, not for rate-limited.",
          "createdAt": "2022-07-05T21:00:24Z",
          "updatedAt": "2022-07-05T21:00:24Z"
        }
      ]
    },
    {
      "number": 23,
      "id": "MDU6SXNzdWU5OTAyNDkwODg=",
      "title": "Discuss token scoping",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/23",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Binding a token, maybe via public metadata, to something the redeemer can verify will make MITM (https://github.com/tfpauly/privacy-proxy/issues/19) token scraping far less useful.\r\n\r\nhttps://github.com/tfpauly/privacy-proxy/issues/20 also may make MITM less useful.",
      "createdAt": "2021-09-07T18:40:49Z",
      "updatedAt": "2021-10-12T18:40:56Z",
      "closedAt": "2021-10-12T18:40:55Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this still relevant now that the protocol is interactive?",
          "createdAt": "2021-10-12T17:35:37Z",
          "updatedAt": "2021-10-12T17:35:37Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "I think scoping is only useful for specific token applications such as fine-grained geo. We can close this.",
          "createdAt": "2021-10-12T18:40:55Z",
          "updatedAt": "2021-10-12T18:40:55Z"
        }
      ]
    },
    {
      "number": 24,
      "id": "MDU6SXNzdWU5OTM0NDcwODc=",
      "title": "Clarify single mediator-issuer requirements",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/24",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "smhendrickson"
      ],
      "labels": [],
      "body": "Mediators may want to run issuers for their own domains.\r\n\r\nBecause there is a blind-signature step in the middle of issuance and redemption, this should (?) be acceptable, with some caveats. There are some potential identifiers to address, including client IP and client fingerprinting methods. Placing a proxy between the client and redeemer addresses these. In the spec, maybe we can just be general and ask redeemers to outline their privacy approach.\r\n\r\nThoughts on the case, and mitigations?",
      "createdAt": "2021-09-10T17:33:21Z",
      "updatedAt": "2021-09-20T19:40:38Z",
      "closedAt": "2021-09-20T19:40:38Z",
      "comments": []
    },
    {
      "number": 25,
      "id": "MDU6SXNzdWU5OTUxNjkyOTk=",
      "title": "Describe how origins specify which issuer to use",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/25",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "We need to describe how origins specify which issuer to use during an HTTP challenge",
      "createdAt": "2021-09-13T17:57:45Z",
      "updatedAt": "2021-09-21T19:54:29Z",
      "closedAt": "2021-09-21T19:54:29Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "- Origin during the challenge says \"I use this issuer\", here is its public key / config / protocol version\r\n- The client sends a hash of the config along with its request to the mediator, and the mediator rejects the request if it detects that this may be an invalid or per-client config (not the well-known config).",
          "createdAt": "2021-09-13T19:12:17Z",
          "updatedAt": "2021-09-13T19:22:12Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Alternatively, the mediator has told the client all of the known/trusted configs. This is potentially more problematic for key rotation.",
          "createdAt": "2021-09-13T19:13:12Z",
          "updatedAt": "2021-09-13T19:13:12Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Partly covered by #29 ",
          "createdAt": "2021-09-15T23:21:29Z",
          "updatedAt": "2021-09-15T23:21:29Z"
        }
      ]
    },
    {
      "number": 26,
      "id": "MDU6SXNzdWU5OTUyNTc4Nzc=",
      "title": "First party set support?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/26",
      "state": "CLOSED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "smhendrickson"
      ],
      "labels": [
        "Future Version",
        "Private Access Tokens"
      ],
      "body": "For grouping origins.\r\n\r\nWe could also use this to determine if issuer and mediator are in the same set.",
      "createdAt": "2021-09-13T19:43:57Z",
      "updatedAt": "2022-07-05T20:55:58Z",
      "closedAt": "2022-07-05T20:55:58Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is now supported! The token challenge can specify a set of origins. Closing as completed.",
          "createdAt": "2022-07-05T20:55:58Z",
          "updatedAt": "2022-07-05T20:55:58Z"
        }
      ]
    },
    {
      "number": 27,
      "id": "MDU6SXNzdWU5OTUyNTg2OTY=",
      "title": "Discuss Trust Token relations",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/27",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "Colluding mediator and issuer effectively reduce to Trust Tokens. We might want to describe this.",
      "createdAt": "2021-09-13T19:45:07Z",
      "updatedAt": "2021-09-23T16:58:20Z",
      "closedAt": "2021-09-23T16:58:20Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is covered by #40 ",
          "createdAt": "2021-09-20T19:19:49Z",
          "updatedAt": "2021-09-20T19:19:49Z"
        }
      ]
    },
    {
      "number": 28,
      "id": "I_kwDOEwrMS847ZY2e",
      "title": "Add Scott/Steven to authors",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/28",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "dvorak42"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-14T23:12:31Z",
      "updatedAt": "2021-09-15T23:25:44Z",
      "closedAt": "2021-09-15T23:25:44Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@smhendrickson can you add this?",
          "createdAt": "2021-09-14T23:12:42Z",
          "updatedAt": "2021-09-14T23:12:42Z"
        }
      ]
    },
    {
      "number": 31,
      "id": "I_kwDOEwrMS847di85",
      "title": "Reconcile PrivateAccessToken and PrivacyToken schemes",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/31",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Currently, we're using PrivacyToken as the auth scheme for redeeming tokens, but PrivateAccessToken is used for challenging.\r\n\r\nRight now, PrivacyToken doesn't have any challenge format. We could define it there, or just fold that (tiny) doc into PrivateAccessTokens.",
      "createdAt": "2021-09-15T23:25:04Z",
      "updatedAt": "2021-09-16T17:59:44Z",
      "closedAt": "2021-09-16T17:59:44Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Talking to Chris, we should fold in",
          "createdAt": "2021-09-15T23:45:49Z",
          "updatedAt": "2021-09-15T23:45:49Z"
        }
      ]
    },
    {
      "number": 33,
      "id": "I_kwDOEwrMS847h6-S",
      "title": "Look at replacing OHTTP with a single encrypted header",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/33",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [],
      "body": "Rather than using OHTTP, the client could send one header through the mediator to the issuer that is the origin ID, encrypted with the issuer's public key.\r\n\r\nIf the redeemer_name is empty in the token struct, then the origin ID header can be removed.\r\n\r\n",
      "createdAt": "2021-09-16T23:00:26Z",
      "updatedAt": "2021-09-21T19:54:29Z",
      "closedAt": "2021-09-21T19:54:29Z",
      "comments": []
    },
    {
      "number": 34,
      "id": "I_kwDOEwrMS847h7lS",
      "title": "Describe captcha/fraud rate limiting use case alongside metered paywalls",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/34",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-16T23:04:30Z",
      "updatedAt": "2021-09-29T19:01:36Z",
      "closedAt": "2021-09-29T19:01:36Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly still planning on something here?",
          "createdAt": "2021-09-27T19:07:17Z",
          "updatedAt": "2021-09-27T19:07:17Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think it's covered adequately now",
          "createdAt": "2021-09-29T19:01:36Z",
          "updatedAt": "2021-09-29T19:01:36Z"
        }
      ]
    },
    {
      "number": 35,
      "id": "I_kwDOEwrMS847kkjA",
      "title": "Add protocol diagram for Private Access Tokens",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/35",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "janaiyengar"
      ],
      "labels": [
        "Initial Version",
        "Private Access Tokens"
      ],
      "body": "Showing the interaction between mediators, redeemers, etc.",
      "createdAt": "2021-09-17T14:51:47Z",
      "updatedAt": "2021-10-15T01:47:42Z",
      "closedAt": "2021-10-15T01:47:42Z",
      "comments": []
    },
    {
      "number": 36,
      "id": "I_kwDOEwrMS847lhLf",
      "title": "Is the public key per issuer or per origin?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/36",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-17T20:17:37Z",
      "updatedAt": "2021-09-21T19:54:29Z",
      "closedAt": "2021-09-21T19:54:29Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "See comment on #37 \r\n\r\nI think it may need to be per-issuer, because that is what allows the mediator to check that the key is legitimate (not per-client) without knowing the origin.\r\n\r\nIt can be per-issuer/per-geo though.",
          "createdAt": "2021-09-17T20:44:02Z",
          "updatedAt": "2021-09-17T20:44:02Z"
        }
      ]
    },
    {
      "number": 37,
      "id": "I_kwDOEwrMS847li43",
      "title": "Describe geolocation use case with per-geo keys",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/37",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [],
      "body": "Having a per-issuer per-geo key would allow cases like Netflix login to have more confidence in where an anonymous client is coming from.\r\n\r\nThis doesn't need to change the protocol of the client and redeemer, but the mediator could have a way to send the country/region ID to the issue for this to work.",
      "createdAt": "2021-09-17T20:28:35Z",
      "updatedAt": "2021-09-27T19:06:56Z",
      "closedAt": "2021-09-27T19:06:56Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Also related to #25, as we add the key to use there. One way to do this is make sure the mediator rejects using a geo-bound public key that it thinks is wrong",
          "createdAt": "2021-09-17T20:43:09Z",
          "updatedAt": "2021-09-17T20:43:09Z"
        }
      ]
    },
    {
      "number": 41,
      "id": "I_kwDOEwrMS8470kYy",
      "title": "Discuss related work, especially Privacy Pass",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/41",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "smhendrickson"
      ],
      "labels": [
        "Initial Version",
        "Private Access Tokens"
      ],
      "body": "... maybe in the introduction, maybe later. Is there any other relevant work that applies besides Privacy Pass?",
      "createdAt": "2021-09-22T01:39:07Z",
      "updatedAt": "2021-10-20T18:32:05Z",
      "closedAt": "2021-10-20T18:32:05Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "If the Mediator doesn't send along the ANON_CLIENT_ID, then this basically reduces to Privacy Pass. (There is no stable client identifier.) Maybe that's all we say about this? \ud83e\udd37 ",
          "createdAt": "2021-09-22T18:02:47Z",
          "updatedAt": "2021-09-22T18:02:47Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "My notes for the differences:\r\n\r\nChallenge-based, proves you\u2019re online/valid right now, and not harvested\r\nPer-origin rate limiting \u2014 a better solution for captchas, makes it possible to do metered paywalls. Also it makes it easier to have silent operation without user interaction. This ensures a single origin can't effect others\r\nPublicly verifiable \u2014 no need to loop back to the issuer, very cheap for the origin",
          "createdAt": "2021-10-15T21:19:52Z",
          "updatedAt": "2021-10-19T15:40:45Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Also add a reference where we say:\r\n\r\n> Running the issuer and mediator in this 'single issuer/mediator' fashion reduces the privacy promises to those of Privacy Pass.",
          "createdAt": "2021-10-19T15:34:33Z",
          "updatedAt": "2021-10-19T15:34:33Z"
        }
      ]
    },
    {
      "number": 44,
      "id": "I_kwDOEwrMS8473O5R",
      "title": "Include Mediator's validation of keys in Security Considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/44",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "We already have this text around Mediators validating keys; this should be referenced and expanded upon in Security Considerations.\r\n```\r\nNote that Mediators need to be careful in cases of key rotation; particularly,\r\nan Origin could collude with an Issuer to try to rotate the key for each new Client in\r\norder to link the client activity. The policy Mediators apply for key validation ought\r\nto take such attacks into consideration.\r\n```",
      "createdAt": "2021-09-22T13:59:59Z",
      "updatedAt": "2021-09-24T20:48:41Z",
      "closedAt": "2021-09-24T20:48:41Z",
      "comments": []
    },
    {
      "number": 48,
      "id": "I_kwDOEwrMS848At5p",
      "title": "Do we need mutual auth between Mediator and Issuer?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/48",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "An issuer might need to ensure that a mediator is authenticated / strongly identified, since the anonymous client ID could be spoofed by another mediator. If someone pretending to be a mediator knew the ANON_CLIENT_ID and the ANON_ORIGIN_ID_PRIME, they could act as the mediator. This might be enough, but most mediator/issuer pairs likely would do mutual auth anyway.",
      "createdAt": "2021-09-24T20:58:07Z",
      "updatedAt": "2021-10-15T20:24:20Z",
      "closedAt": "2021-10-15T20:24:20Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "However, the Issuer SHOULD enforce some mediator identity (with an ACL or mutual auth) to make sure the Mediator meets some criteria.",
          "createdAt": "2021-09-24T21:00:40Z",
          "updatedAt": "2021-09-24T21:00:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This gets into the \"Issuer and Mediator Ownership\" section, likely.",
          "createdAt": "2021-09-24T21:02:24Z",
          "updatedAt": "2021-09-24T21:02:24Z"
        },
        {
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "body": "The more I think about this, the more it seems that ultimately the Issuer is going to need to trust the Mediator. Meaning that the Mediator is a known entity and the Issuer knows and trusts it (and therefore authenticates the meditator) or doesn't issue tokens to it.",
          "createdAt": "2021-09-28T00:18:13Z",
          "updatedAt": "2021-09-28T00:18:13Z"
        }
      ]
    },
    {
      "number": 49,
      "id": "I_kwDOEwrMS848Avzx",
      "title": "What stops a client from using a ton of mediators?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/49",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "I may have a good default mediator that uses device attestation, etc. However, if the set of mediators can grow in an unbounded fashion and be per-account or something, then clients could try to use as many mediators as possible to get more access. Limiting the overall number of mediators has other concerns.",
      "createdAt": "2021-09-24T21:11:06Z",
      "updatedAt": "2021-10-15T20:25:47Z",
      "closedAt": "2021-10-15T20:25:47Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "It's better to have an issuer trust a consistent type of mediator, which is likely to have some degree of mutual exclusivity (different device brands, paid account brands).",
          "createdAt": "2021-09-27T19:32:39Z",
          "updatedAt": "2021-09-27T19:32:39Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "It will be possible to have a couple. I can easily get a couple IP addresses today. I can have multiple email addresses. But as a user I can't do what a botnet can do and scale up to 100s or 1000s. Limit the abuse or fraud a user can launch.",
          "createdAt": "2021-10-01T21:14:08Z",
          "updatedAt": "2021-10-01T21:14:08Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly will you be able to send a PR for the initial version for this?",
          "createdAt": "2021-10-14T18:06:19Z",
          "updatedAt": "2021-10-14T18:06:19Z"
        }
      ]
    },
    {
      "number": 50,
      "id": "I_kwDOEwrMS848HaN4",
      "title": "geo-location use case ",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/50",
      "state": "OPEN",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Future Version",
        "Private Access Tokens"
      ],
      "body": "The issuer only needs a key per geo, not a key per {ORIGIN_ID, GEO} tuple. While it might be useful to do this per origin, it isn't necessary for the use case.\r\n\r\nThis particular use case also then requires the Issuer to trust the Mediator, since the Mediator is the one that determines the user's geo.",
      "createdAt": "2021-09-27T20:32:14Z",
      "updatedAt": "2021-10-12T22:35:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "If the key is not per origin_id, tokens can be reused across origins. So I think that we must partition by origin_id, no? @tfpauly ",
          "createdAt": "2021-09-27T21:13:47Z",
          "updatedAt": "2021-09-27T21:13:47Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@FredericJacobs the token message that's signed includes the origin name, so the issuer doesn't need to have per-origin keys.",
          "createdAt": "2021-09-27T21:35:29Z",
          "updatedAt": "2021-09-27T21:35:29Z"
        }
      ]
    },
    {
      "number": 51,
      "id": "I_kwDOEwrMS848L0pj",
      "title": "Binding between ORIGIN_ID and token request",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/51",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clients can currently request tokens for A.com but lie -- in the origin header -- that it's a request for B.com. If issuer keys are not per-origin, then clients can abuse this to get more tokens than allowed by policy. If issuer keys are per-origin, then the mediator can learn the origin since it sees the key ID. I think one of these has to give. \r\n\r\nIt's probably fine to hide the key ID from the mediator. The reason it's exposed now is so the mediator can check for consistency and ensure the client isn't targeted, though I don't see how this check solves that problem. (I've also forgotten why this is important, since there are other ways for origins to link client activity if they're malicious, e.g., A.com can just tell B.com that the client visited.)",
      "createdAt": "2021-09-28T13:08:44Z",
      "updatedAt": "2021-10-01T20:54:20Z",
      "closedAt": "2021-10-01T20:54:20Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The key ID needs to be validated by the mediator to ensure that the client doesn't have a unique key, for targeting. I don't think a.com would be able to leak information to b.com otherwise.\r\n\r\nI don't understand the problem you're describing here about how a client could lie.\r\n\r\nLet's say I'm talking to a.com. I've resolved DNS for a.com, I'm talking to it's address, and I have a TLS session with a.com. a.com knows that it is a.com on this server, and not b.com, because of the TLS handshake and SNI.\r\n\r\nWhen I issue an HTTP request, I'll include the `:authority` pseudo-header (in H2) which will indicate a.com, because if I put in b.com, it will fail. The origin will then send a TokenChallenge where the origin_name is set to a.com.\r\n\r\nI don't think setting an Origin HTTP header matters at all\u2014that just says what the parent page is. There's no reason that the server should serve up TokenChallenges based on the Origin header, and not the actual Host/authority. Maybe we just need to have a sentence clarifying that?",
          "createdAt": "2021-09-29T17:55:22Z",
          "updatedAt": "2021-09-29T17:55:22Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't understand the problem you're describing here about how a client could lie.\r\n\r\nI think you're assuming an honest client? It's pretty trivial for the client to connect to a.com, get a challenge for a.com, but then tell the issuer that its origin is actually b.com. RIght?",
          "createdAt": "2021-09-29T17:57:29Z",
          "updatedAt": "2021-09-29T17:57:29Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Ah, I see your point now. I'm wondering if we should then:\r\n\r\n- Use per-origin keys\r\n- Remove the cleartext key_id from the AccessTokenRequest\r\n- Move away from Token-Origin as a header, to being an encrypted origin_name in the AccessTokenRequest\r\n- Perhaps also include an encrypted key_id along with the encrypted origin_name in the AccessTokenRequest\r\n\r\nThis would then have the consequence of not letting the mediator help validate that there aren't per-client keys, though.",
          "createdAt": "2021-09-29T18:23:45Z",
          "updatedAt": "2021-09-29T18:23:45Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I wonder if the targeting thing is partly solved by *not* sending the token key_id in the request, and relying on the origin name being decrypted. Because then the issuer wouldn\u2019t know which key to use other than the default/only per-origin key, otherwise the validation would fail.",
          "createdAt": "2021-09-29T18:31:32Z",
          "updatedAt": "2021-09-29T18:31:32Z"
        }
      ]
    },
    {
      "number": 54,
      "id": "I_kwDOEwrMS848Srk6",
      "title": "Describe mediator policy about talking to issuers",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/54",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "A mediator likely would want a list of known / trusted issuers. It's a system that can expand, but we don't want to spam unknown issuers. Use the setup .well-known APIs.\r\n\r\nSimilarly, an issuer has a known/trusted listed of mediators.",
      "createdAt": "2021-09-29T23:18:44Z",
      "updatedAt": "2022-07-05T20:59:31Z",
      "closedAt": "2022-07-05T20:59:31Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly I think we can close this one out now, unless further changes would be desired?",
          "createdAt": "2022-07-05T20:53:57Z",
          "updatedAt": "2022-07-05T20:53:57Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, I think this is covered now in the architecture document.",
          "createdAt": "2022-07-05T20:59:31Z",
          "updatedAt": "2022-07-05T20:59:31Z"
        }
      ]
    },
    {
      "number": 55,
      "id": "I_kwDOEwrMS848Sshg",
      "title": "Prevent clients from changing their ANON_CLIENT_ID",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/55",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Right now, the ANON_CLIENT_ID is unique per ANON_ORIGIN_ID. However, this allows the client to change its ANON_ORIGIN_ID in order to change its ANON_CLIENT_ID presented to the issuer.",
      "createdAt": "2021-09-29T23:26:08Z",
      "updatedAt": "2021-10-11T19:29:06Z",
      "closedAt": "2021-10-11T19:29:06Z",
      "comments": []
    },
    {
      "number": 57,
      "id": "I_kwDOEwrMS848a_jt",
      "title": "Issuer key rotation",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/57",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The different entities that rely on the two Issuer keys are not synchronized in their fetching of the keys, and there are a few failure modes as a result. We should think about these failure modes.\r\n\r\nYou could have the Issuer respond with a key when it is presented a key_id. But that might have implications for tracking.",
      "createdAt": "2021-10-01T19:53:28Z",
      "updatedAt": "2021-10-13T11:56:59Z",
      "closedAt": "2021-10-13T11:56:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We could have a very short key_id (8 bits or less) that is sent from Origin to Client, and then encrypted to Issuer along with the origin name.",
          "createdAt": "2021-10-01T22:00:34Z",
          "updatedAt": "2021-10-01T22:00:34Z"
        },
        {
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "body": "What does encrypting the key ID provide, doesn't the mediator still need to know the key that's being presented to the client so it can confirm that it isn't being sharded between different clients?",
          "createdAt": "2021-10-03T18:19:36Z",
          "updatedAt": "2021-10-03T18:19:36Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "See #51 and #53. Keys for tokens need to be per origin, and thus the mediator can't see them. \n\nCurrent text prevents sharding per client by requiring that the key is known by the issuer based on the origin name alone, a key ID. \n\nThis is good for not targeting users, but then is problematic for rotation. The discussion here was about reducing the information in the key ID so it isn't targeting, but still helps for rotation. \n\nOne approach would be to have a single bit for the key ID, that just flips on key rotation. ",
          "createdAt": "2021-10-03T20:22:03Z",
          "updatedAt": "2021-10-03T20:22:03Z"
        }
      ]
    },
    {
      "number": 58,
      "id": "I_kwDOEwrMS848bAeK",
      "title": "ANON_ORIGIN_ID_PRIME example doesn't work",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/58",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Section 5.2.3 offers the following example:\r\n\r\n```ANON_ORIGIN_ID_PRIME = HKDF(secret=ANON_ORIGIN_ID, salt=\"\", info=ISSUER_POLICY_WINDOW```\r\n\r\nHowever, ISSUER_POLICY_WINDOW is a time period in seconds. What you really want is the actual window, but that is tricky, since the window is arbitrary, presumably starting with the first token request to the Issuer.",
      "createdAt": "2021-10-01T19:59:02Z",
      "updatedAt": "2021-10-11T19:28:53Z",
      "closedAt": "2021-10-11T19:28:53Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, this is incorrect. Will fix up in larger revision.",
          "createdAt": "2021-10-01T21:45:55Z",
          "updatedAt": "2021-10-01T21:45:55Z"
        }
      ]
    },
    {
      "number": 59,
      "id": "I_kwDOEwrMS848bA1n",
      "title": "anon_origin_id is visible to Issuer",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/59",
      "state": "CLOSED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [],
      "body": "In the construction in Section 5.2.1, `anon_origin_id` is sent to the Issuer. This defeats the purpose of having ANON_ORIGIN_ID_PRIME.",
      "createdAt": "2021-10-01T20:01:02Z",
      "updatedAt": "2021-10-01T23:33:02Z",
      "closedAt": "2021-10-01T23:33:02Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Sounds like this is a mistake, should be removed",
          "createdAt": "2021-10-01T21:44:41Z",
          "updatedAt": "2021-10-01T21:44:41Z"
        }
      ]
    },
    {
      "number": 60,
      "id": "I_kwDOEwrMS848bP50",
      "title": "Add Jana to authors on Private Access Tokens",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/60",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "janaiyengar"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-01T21:24:58Z",
      "updatedAt": "2021-10-01T23:33:25Z",
      "closedAt": "2021-10-01T23:33:16Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Fixed with #61 ",
          "createdAt": "2021-10-01T23:33:25Z",
          "updatedAt": "2021-10-01T23:33:25Z"
        }
      ]
    },
    {
      "number": 64,
      "id": "I_kwDOEwrMS848cLbs",
      "title": "Define HTTP headers as structured fields",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/64",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Initial Version"
      ],
      "body": "For Private Access Tokens",
      "createdAt": "2021-10-02T11:23:29Z",
      "updatedAt": "2021-10-12T15:50:45Z",
      "closedAt": "2021-10-12T15:50:45Z",
      "comments": []
    },
    {
      "number": 65,
      "id": "I_kwDOEwrMS848cXZ2",
      "title": "Describe user interaction",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/65",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Initial Version"
      ],
      "body": "- Generally should be silent\n- If the issuance is slow, a browser could show a spinner UI for \"verifying your device...\"/\"account\"...\n- Client may reject origins that trigger too many token challenges in quick succession, or throw a warning up to a user",
      "createdAt": "2021-10-02T14:35:39Z",
      "updatedAt": "2021-10-12T17:16:41Z",
      "closedAt": "2021-10-12T17:16:41Z",
      "comments": []
    },
    {
      "number": 66,
      "id": "I_kwDOEwrMS848cXhd",
      "title": "Describe Issuer validation of client groups",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/66",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Issuers can prevent Mediators from abusing groups by making them too large or last too long. \n\n- Reject tokens if a group lasted longer than two windows\n- Reject tokens if one group represents a disproportionate number of token requests",
      "createdAt": "2021-10-02T14:37:29Z",
      "updatedAt": "2021-10-04T16:11:51Z",
      "closedAt": "2021-10-04T16:11:51Z",
      "comments": []
    },
    {
      "number": 67,
      "id": "I_kwDOEwrMS848xAUE",
      "title": "Token-Count tracking",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/67",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Initial Version"
      ],
      "body": "Origins could potentially abuse the policy limit and token count to track specific clients across sessions, which is an anti-goal of the protocol.",
      "createdAt": "2021-10-07T00:13:28Z",
      "updatedAt": "2021-10-12T17:29:59Z",
      "closedAt": "2021-10-12T17:29:59Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think there are two constraints we should add to mitigate this:\r\n\r\n- As described in #65, the client should not allow too many challenges per origins that are not related to user action. For example, one challenge that leads to automatic token redemption per page load\r\n- The Mediator should drop token requests for an origin that already rejected the client in this policy window, to make it such that an Issuer can't go back and start allowing tokens to create some weird patterns",
          "createdAt": "2021-10-07T15:29:58Z",
          "updatedAt": "2021-10-07T15:29:58Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Strawman issue that might happen if the client guardrails are not in place:\r\n\r\nSuppose that an origin's per-use policy limit is N. Let C be a counter that the origin initializes to N-1. For each client, the origin does the following. Send C challenges, sequentially, until they all either succeed or one fails. There's two cases:\r\n\r\n1. All succeed. The origin concludes this is a _new_ client. The origin decrements C and handles the next client connection.\r\n2. The T-th (T < C) token fails. The server knows that this is the same as the (N-T)'th client. (Possible off-by-one error)\r\n\r\nI think ought to describe this in the security considerations as motivation for the mitigations (assuming we're convinced they're sufficient).",
          "createdAt": "2021-10-07T15:35:03Z",
          "updatedAt": "2021-10-07T15:35:03Z"
        }
      ]
    },
    {
      "number": 69,
      "id": "I_kwDOEwrMS848-lsW",
      "title": "Discuss clients losing state",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/69",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "smhendrickson"
      ],
      "labels": [
        "Initial Version",
        "Private Access Tokens"
      ],
      "body": "If the client loses state (keys, ANON_ORIGIN_IDs), the Mediator can't enforce origin access well.\r\n\r\nThe Mediator can choose to reset the policy windows for a client when the keys change, but it should only do so rarely.\r\n\r\nWe may want to have the Issuer define the time over which it will tolerate the client key changing\u2014it could say that a policy window is one day, and the client can only reset the window via a key change every two days, etc.",
      "createdAt": "2021-10-11T19:21:32Z",
      "updatedAt": "2021-10-20T02:42:42Z",
      "closedAt": "2021-10-20T02:42:42Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "We might also want to provide suggestions for clients to avoid this problem. For example, Mediators _could_ store client state (encrypted).",
          "createdAt": "2021-10-14T18:05:04Z",
          "updatedAt": "2021-10-14T18:05:04Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We need a normative mediator requirement to only allow the client to change this infrequently (not more than once per policy window, and not subsequent policy windows)",
          "createdAt": "2021-10-15T21:32:42Z",
          "updatedAt": "2021-10-15T21:32:42Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This should be added in the \"Client-to-Mediator request\" section",
          "createdAt": "2021-10-15T21:33:04Z",
          "updatedAt": "2021-10-15T21:33:04Z"
        }
      ]
    },
    {
      "number": 70,
      "id": "I_kwDOEwrMS848-nyn",
      "title": "Discuss client identity",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/70",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "janaiyengar",
        "smhendrickson"
      ],
      "labels": [
        "Initial Version",
        "Private Access Tokens"
      ],
      "body": "It's not limited by this document, but we should explain the notion of client identity, which is based on how mediators view clients. We should talk about expectations.",
      "createdAt": "2021-10-11T19:33:51Z",
      "updatedAt": "2021-10-15T20:25:47Z",
      "closedAt": "2021-10-15T20:25:47Z",
      "comments": []
    },
    {
      "number": 71,
      "id": "I_kwDOEwrMS848-sw_",
      "title": "Add cryptographic dependencies section",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/71",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Initial Version",
        "Private Access Tokens"
      ],
      "body": "This should cover HPKE, blind signatures (RSA), the OPRF stuff, and NIZK proof details.",
      "createdAt": "2021-10-11T20:03:31Z",
      "updatedAt": "2021-10-14T18:54:30Z",
      "closedAt": "2021-10-14T18:54:30Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Let\u2019s split this out by what origins need to support (which should be minimal) vs the issuance code path ",
          "createdAt": "2021-10-12T02:06:27Z",
          "updatedAt": "2021-10-12T02:06:27Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Related to #80 ",
          "createdAt": "2021-10-14T17:50:03Z",
          "updatedAt": "2021-10-14T17:50:03Z"
        }
      ]
    },
    {
      "number": 77,
      "id": "I_kwDOEwrMS849EI7l",
      "title": "Normatively define the mapping from lat/lon to/from Sec-CH-Geohash",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/77",
      "state": "CLOSED",
      "author": "jyasskin",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "https://tfpauly.github.io/privacy-proxy/draft-pauly-httpbis-geohash-hint.html says `Sec-CH-Geohash` holds \"an encoded Geohash\", but the only definition is in an informative reference to https://en.wikipedia.org/wiki/Geohash. ",
      "createdAt": "2021-10-12T22:14:57Z",
      "updatedAt": "2022-03-30T20:29:48Z",
      "closedAt": "2022-03-30T20:29:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yeah, the fact that we have a wikipedia reference only is... unfortunate. We need to bring in a more formal definition.",
          "createdAt": "2021-10-12T22:35:53Z",
          "updatedAt": "2021-10-12T22:35:53Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Moving to geo IP entries: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:29:48Z",
          "updatedAt": "2022-03-30T20:29:48Z"
        }
      ]
    },
    {
      "number": 78,
      "id": "I_kwDOEwrMS849EO-v",
      "title": "Discuss the privacy implications of client policy around Sec-CH-Geohash",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/78",
      "state": "CLOSED",
      "author": "jyasskin",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "The security considerations of https://tfpauly.github.io/privacy-proxy/draft-pauly-httpbis-geohash-hint.html#name-security-considerations say that \"clients MUST have a default policy around when to allow use of the Geohash Client Hint, as well as a default length of Geohash. Shorter, truncated Geohashes provide less specific locality.\"\r\n\r\nIt would be easier for clients to pick a good policy if this spec said what the implications of each possible length are. https://en.wikipedia.org/wiki/Geohash#Digits_and_precision_in_km appears to provide a mapping from geohash length to precision-in-km at the equator, but the east/west precision will improve as the latitude moves closer to a pole. Should the spec encourage clients to send shorter geohashes for larger latitudes?",
      "createdAt": "2021-10-12T22:29:08Z",
      "updatedAt": "2022-03-30T20:30:00Z",
      "closedAt": "2022-03-30T20:29:59Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Mercator strikes again!",
          "createdAt": "2021-10-12T22:54:44Z",
          "updatedAt": "2021-10-12T22:54:52Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Moving to geo IP entries: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:29:59Z",
          "updatedAt": "2022-03-30T20:29:59Z"
        }
      ]
    },
    {
      "number": 96,
      "id": "I_kwDOEwrMS849x8S0",
      "title": "Groth-Sahai based alternative?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/96",
      "state": "OPEN",
      "author": "wbl",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "This is a radically different looking approach to solve a somewhat different but related problem. We would like clients to produce tokens that are a function of their IP address, an issuer secret parameter, and the origin where the token is displayed. We'd like these tokens not to be linkable across sites, but not mangleable on a site. IP address is used as an example, other identifiers could also work.\r\n\r\nTo do this I propose the following: The Issuer  I takes a request from a client C, computes z=h(IP(C), secret) for some hash function h, and sends back z along with a structure signature of a special value zg_1,zg_2  with a structure preserving signature on zg_1, zg_2. Maybe we have to fiddle a bit with this. The client just has to do this once.\r\n\r\nThe client connects to a site S by computing w=H(S), T=zw, where H is a hash function to G_1. The client then sends a zero knowledge Groth-Sahai proof that T is correctly formed (by pairing equations involving the special value) and that the issuer signed the special value. The special value isn't revealed by the ZK properties of the Groth-Sahai proof.\r\n\r\nThe site can use T the way it uses IP addresses today. Crucially a different site will have a different token T', with no way to link them. \r\n\r\nThis has a number of differences from the current proposal:\r\n\r\n- The mediator doesn't exist\r\n- Issuer works once per client\r\n- Sites implement their own policies freely, and can use the identifier to link repeated requests, e.g. to find a pattern of vandalism and respond with a ban\r\n- Sites get an equivalent to the IP address they currently use\r\n- Uses more complicated cryptography, but conceptually pretty simple: validate a token, generate a token, issue a signature\r\n- The issuer is stateless",
      "createdAt": "2021-10-26T16:19:37Z",
      "updatedAt": "2021-11-02T18:54:18Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Interesting idea!\r\n\r\nI have a couple comments/questions:\r\n\r\n- Part of the goal of Private Access Tokens is to move away from needing IP-based authentication/rate-limiting. It prefers rooting the authentication on a device or account. Maintaining the IP address stability is one way to provide some of the existing behavior, but I'm hoping to have something that doesn't have some of the annoying properties of rate-limiting per IP (users behind a NAT are forced to share fate), and allows us to use private IPs to talk to the mediator/issuer infrastructure.\r\n\r\n- If the client only talks to the Issuer once, and can mint its own tokens after that for a specific origin, either it will be presenting the same token to the same origin over an over (which I think is the case you have here) or it would be able to mint new tokens and look like as many users as it wants. If this is the former case, then we effectively have a super-cookie that allows a server to recognize the same client coming back. That's an anti-goal of Private Access Tokens. We want a way to ensure that the server cannot recognize a client coming back to them, even if they're on the same access network, if they cleared cookies.\r\n\r\n- If the Issuer is chosen by the Origin, and the Client must directly talk to the Issuer using a non-private IP, the Origin now has the power to tell the Client to reach out to an arbitrary site with its real IP address. This is a regression in privacy, I think; for PATs, the Client only ever reveals its IP address to a Mediator it chooses and trusts, not an arbitrary Issuer (which could be the Origin itself). Yes, the Issuer may not know your actual identity, but it can track where users are and build up state if it wants.",
          "createdAt": "2021-10-26T21:00:42Z",
          "updatedAt": "2021-10-26T21:00:42Z"
        },
        {
          "author": "wbl",
          "authorAssociation": "NONE",
          "body": "This is the part of the conversation where I would be suggesting we find a cafe next week. Alas! You raise some excellent points.\r\n\r\n- IP could really be any string: email, account name, some attestation key. All that is important is that it be expensive to obtain another one. \r\n- You're correct that we'd present the same token over and over. For anti-abuse use cases this is more compelling than the paywall usecase. However it's possible to periodize the credentials: instead of W=H(S), make it W=H(S, t) where t is the current time rounded to some precision. This doesn't require another Issuer interaction.\r\n- The Origin (perhaps a better name is needed... but it's hard to come up with one) and Client would have to agree upon a mutually agreeable Issuer, although this is a one time event. If the Client just takes any Issuer, and that changes every time, that would be a problem. How big a problem this is in a deployment depends on the number of Issuers and how widely they are trusted. My thought is that developers of Privacy Enhancing Technologies would be able to deploy these also. \r\n",
          "createdAt": "2021-10-27T03:15:32Z",
          "updatedAt": "2021-10-27T03:15:32Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, absolutely something for a discussion over coffee!\n\nThe other aspect I'm thinking about is the risk for abuse when you allow and expect token replay. With a challenge-based system, the origin knows that the client had to fetch the token within a certain time; you could try to run the issuance through some other device that was more trusted than you, but you'd need to proxy for each new token challenge. If we only talk to an issuer to get a secret once, what stops a client from leaking that information to many other clients? The origin could still rate limit that entire group as \"one\", but it means that it's fairly trivial to start giving access to clients that otherwise wouldn't be trusted.\n\nI think what I'm seeing is that a model that tries to put enforcement back on the origin based on one-time information from an issuer can work as a replacement for some captcha-style use cases, but has more trouble with the cases like metered paywalls or trusting that a client is in a specific geolocation. Does that sound right? ",
          "createdAt": "2021-10-27T13:40:20Z",
          "updatedAt": "2021-10-27T13:40:20Z"
        },
        {
          "author": "wbl",
          "authorAssociation": "NONE",
          "body": "Was off by a week on IETF timing, but yes.\r\n\r\nI think the geolocation policy would definitely be a problem as the token is easily liftable and long lasting, unless we have frequent rotation which has its own issues. For paywall metering the supercookie concern is an issue, especially on subrequests. If it's only presented on a top level navigation, given the paywall durations (typically per month) and limits (~10 views) it might not be so bad, provided we don't have additional, especially cross site tracking vectors. I think for captcha you really want one time tokens, not persistent ones because of the ability to farm.",
          "createdAt": "2021-11-02T18:54:18Z",
          "updatedAt": "2021-11-02T18:54:18Z"
        }
      ]
    },
    {
      "number": 97,
      "id": "I_kwDOEwrMS849yGlO",
      "title": "Multiple layers of privacy-proxy.",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/97",
      "state": "OPEN",
      "author": "jhoyla",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "A potential use case we might want to consider is multiple layers of privacy-proxy. \r\nConsider a website that wants rate limits provided by Issuer\u2081 and Geo-location provided by Issuer\u2082. \r\nWhilst the Origin could require the protocol to be run twice there isn't an obvious mechanism to ensure that the Client provides the same identity to Issuer\u2081 and Issuer\u2082. \r\nInstead of doing this, before issuing any tokens Issuer\u2081 could forward the `AccessTokenRequest` to Mediator\u2082. This ensures that both mediators see the same request. \r\nIf tokens are issued by Issuer\u2082 and returned to Issuer\u2081 then Issuer\u2081 will issue tokens to the Client.\r\n\r\nSomething like this:\r\n![image](https://user-images.githubusercontent.com/2277120/138926875-5bd6b4be-36e1-4f54-924b-add3ec749c3c.png)\r\n",
      "createdAt": "2021-10-26T17:05:22Z",
      "updatedAt": "2021-10-26T17:05:22Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 98,
      "id": "I_kwDOEwrMS849-yRy",
      "title": "Mention how ISSUER_NAME is used",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/98",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "ISSUER_NAME is set as the authority/host for the client-to-mediator request. This is shown in the example, but not spelled out clearly.",
      "createdAt": "2021-10-29T19:30:36Z",
      "updatedAt": "2022-04-01T23:48:55Z",
      "closedAt": "2022-04-01T23:48:55Z",
      "comments": []
    },
    {
      "number": 99,
      "id": "I_kwDOEwrMS84-FoLV",
      "title": "Rename name_key_id to issuer_key_id",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/99",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "name_key_id points to an ISSUER_KEY. We should probably call it issuer_key_id.",
      "createdAt": "2021-11-01T21:32:25Z",
      "updatedAt": "2021-11-04T21:18:54Z",
      "closedAt": "2021-11-04T21:18:54Z",
      "comments": []
    },
    {
      "number": 100,
      "id": "I_kwDOEwrMS84-RVxq",
      "title": "Check origin_name",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/100",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The Origin's challenge includes `origin_name`, but I don't think we have text which says that Clients must check that this name matches their expectation. Alternatively, the Origin could _not_ send this value, and the Client could reconstruct the `TokenChallenge` based on their expected `origin_name`.",
      "createdAt": "2021-11-04T12:55:07Z",
      "updatedAt": "2022-04-01T23:49:30Z",
      "closedAt": "2022-04-01T23:49:30Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Correct, the origin_name must be checked to ensure that it matches the origin that issued the challenge.\r\n\r\nI don't think we should have the client reconstruct it, to avoid canonicalization issues.",
          "createdAt": "2021-11-04T15:17:52Z",
          "updatedAt": "2021-11-04T15:17:52Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> I don't think we should have the client reconstruct it, to avoid canonicalization issues.\r\n\r\nI agree that checking is simpler, but won't either approach have to deal with canonicalization?",
          "createdAt": "2021-11-04T15:23:02Z",
          "updatedAt": "2021-11-04T15:23:02Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, but I'd rather have the client check to see if things match and deal with canonicalization early on before issuing a request, rather than having the token issuance fail because the two parties disagreed on canonicalization.",
          "createdAt": "2021-11-05T02:57:40Z",
          "updatedAt": "2021-11-05T02:57:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, agreed \ud83d\udc4d",
          "createdAt": "2021-11-05T02:58:40Z",
          "updatedAt": "2021-11-05T02:58:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think this is covered now in the auth scheme doc",
          "createdAt": "2022-04-01T23:49:30Z",
          "updatedAt": "2022-04-01T23:49:30Z"
        }
      ]
    },
    {
      "number": 101,
      "id": "I_kwDOEwrMS84-RV8D",
      "title": "NIZK security properties",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/101",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The rationale for the NIZK proof could be made more clear. We should add this somewhere to the protocol overview, with details in the security considerations. We should also extract the \"mapping\" computation to a separate section so it can be reviewed independently of the rest of the protocol details.",
      "createdAt": "2021-11-04T12:55:55Z",
      "updatedAt": "2021-11-17T20:19:45Z",
      "closedAt": "2021-11-17T20:19:45Z",
      "comments": []
    },
    {
      "number": 102,
      "id": "I_kwDOEwrMS84-RWMB",
      "title": "Add binding details to security considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/102",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We should describe how the origin name, mapping request, and token request are all bound together via the encrypted origin name, and why that's important. ",
      "createdAt": "2021-11-04T12:57:12Z",
      "updatedAt": "2022-01-11T14:56:22Z",
      "closedAt": "2022-01-11T14:56:22Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This may have been overcome by events, so closing for now.",
          "createdAt": "2022-01-11T14:56:22Z",
          "updatedAt": "2022-01-11T14:56:22Z"
        }
      ]
    },
    {
      "number": 105,
      "id": "I_kwDOEwrMS84-tygG",
      "title": "Challenge and cookie cache",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/105",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Servers can offer multiple challenges in a WWW-Authenticate header to let the client fetch a pile of tokens for future spending. For tracking reasons, the lifetime of these should be bound to any cookie state associated with the origin. In particular, if the client wipes its cookies for the origin, then it should also clear any challenge state. It's possible for the server to encode client-specific information in the TokenChallenge.redemption_nonce, so we need to ensure this doesn't turn into a different type of tracking vector.",
      "createdAt": "2021-11-12T17:18:04Z",
      "updatedAt": "2022-03-11T21:05:54Z",
      "closedAt": "2022-03-11T21:05:54Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Good call-out!",
          "createdAt": "2021-11-12T18:09:37Z",
          "updatedAt": "2021-11-12T18:09:37Z"
        }
      ]
    },
    {
      "number": 107,
      "id": "I_kwDOEwrMS84_j7R7",
      "title": "Tie the WWW-Authenticate around the keys and max-age.",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/107",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Currently the issuer-key, token-key, and max-age are not versioned inside the WWW-Authenticate, meaning that either we need current parsing of a scheme to ignore unknown fields in the scheme challenge (the outermost layer defined in RFC7235), we have to introspect the challenge field to then figure out how to parse the outer keys/max-age fields, or we have to use a different scheme name whenever we want to change those.\r\n\r\nOne potential fix is to encapsulate the whole blob of data in an \"outer\" challenge structure:\r\n\r\n~~~\r\nstruct {\r\n    uint8_t version;\r\n    TokenChallenge token_challenge;\r\n    opaque issuer_key<1..2^16-1>;\r\n    opaque token_key<1..2^16-1>;\r\n    uint32_t max_age;\r\n} PATAuthenticateChallenge;\r\n\r\nWWW-Authenticate: PrivateAccessToken challenge=abc..., PrivateAccessToken challenge=def...\r\n~~~\r\n\r\nWhere abc/def are PATAuthenticateChallenge(s).\r\n\r\nAdditionally we can potentially rename TokenChallenge to get rid of the extra layering.",
      "createdAt": "2021-11-29T18:55:41Z",
      "updatedAt": "2022-01-10T20:46:02Z",
      "closedAt": "2022-01-10T20:46:02Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "In general, I'd like to keep the keys and max-age fields separate.\r\n\r\nHowever, there are things in a generic token model that need to be specified that we should consider:\r\n- What crypto / algorithms are used for the token? RSA blind signatures in this case...\r\n- What is the meaning of the token? Per-origin rate-limited, generic non-limited, geo-based, etc.",
          "createdAt": "2021-11-29T20:21:24Z",
          "updatedAt": "2021-11-29T20:21:24Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Type could be -> Issuance Protocol",
          "createdAt": "2021-11-29T20:34:40Z",
          "updatedAt": "2021-11-29T20:34:40Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "There seems to be a hierarchy of \"things\", including the scheme, issuance protocol, and issuance protocol details. It seems to make sense if we arrange things in the following way:\r\n\r\n- Scheme: generic anonymous credential authentication\r\n- Issuance protocol (type): PAT or PrivacyPass or whatever\r\n- Issuance protocol details (version? algorithm?) : Blind RSA or POPRF or whatever\r\n\r\nIdeally, also, the challenge is bound to the scheme, issuance protocol, and issuance protocol details, which would require some changes. Is this a useful framing?",
          "createdAt": "2021-11-29T20:43:09Z",
          "updatedAt": "2021-11-29T20:43:09Z"
        }
      ]
    },
    {
      "number": 111,
      "id": "I_kwDOEwrMS85AIb2U",
      "title": "Stable mapping per-origin key rotation",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/111",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Currently, the stable mapping computes a function over the client's secret and a key associated with the origin. If this key rotates, mediator state is no longer valid. We should write text that deals with this edge case. (Unrelated, we also need a better name for the thing called a \"stable mapping\" \ud83e\udd37 )",
      "createdAt": "2021-12-09T20:00:01Z",
      "updatedAt": "2022-01-11T17:28:43Z",
      "closedAt": "2022-01-11T17:28:43Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We do have this for client key rotation, but we can expand and also talk about issuer secret rotation.\r\n\r\n> ANON_ORIGIN_ID MUST be a stable and unpredictable 32-byte value computed by the Client. Clients MUST NOT \r\n> change this value across token requests for the same ORIGIN_NAME. Doing so will result in token issuance failure (specifically, when a Mediator rejects a request upon detecting two ANON_ORIGIN_ID values that map to the same Origin).\r\n> ",
          "createdAt": "2021-12-10T21:50:12Z",
          "updatedAt": "2021-12-10T21:50:33Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "If the issuer changes its key too frequently, it ends up letting clients lie, so it's shooting itself in the foot.\r\n\r\nThe issuer secret should probably change no more frequently than the issuer token key itself.",
          "createdAt": "2021-12-10T21:52:45Z",
          "updatedAt": "2021-12-10T21:52:45Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Discussing adding text to: https://tfpauly.github.io/privacy-proxy/draft-privacypass-rate-limit-tokens.html#section-5.1.3\r\n\r\nExplain rotation strategy (don't rotate more frequently than policy window rotations, at least 2x the window).",
          "createdAt": "2022-01-10T20:42:18Z",
          "updatedAt": "2022-01-10T20:44:01Z"
        }
      ]
    },
    {
      "number": 112,
      "id": "I_kwDOEwrMS85ANOHX",
      "title": "Origin name encryption algorithm",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/112",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The issuer's HPKE configuration admits multiple algorithm configurations, each one indicating a KEM, KDF, and AEAD tuple. Clients use this configuration when encrypting the origin name to the issuer. However, the client's request currently doesn't convey what algorithm selection was used for this encryption. We can either restrict things so that each HPKE configuration has exactly one algorithm tuple, or the request can convey the client's selection. (I don't think trial decryption is a reasonable option here.)",
      "createdAt": "2021-12-10T20:33:03Z",
      "updatedAt": "2022-01-11T21:07:23Z",
      "closedAt": "2022-01-11T21:07:23Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We have this today:\r\n\r\n```\r\nstruct {\r\n   uint8_t version;\r\n   uint8_t client_origin_index_request[Ne+Ne+Np];\r\n   uint8_t token_key_id;\r\n   uint8_t blinded_req[Nk];\r\n   uint8_t issuer_key_id[32];\r\n   uint8_t encrypted_origin_name<1..2^16-1>;\r\n} AccessTokenRequest;\r\n```\r\n\r\nCould we break this up as:\r\n\r\n```\r\nstruct {\r\n   uint8_t version;\r\n   struct {\r\n      uint8_t token_key_id;\r\n      uint8_t blinded_req[Nk];\r\n   } blind_token_request;\r\n   struct {\r\n       uint8_t client_origin_index_request[Ne+Ne+Np];\r\n   } client_proof;\r\n   struct {\r\n      uint8_t issuer_key_id[32];\r\n      uint8_t encrypted_origin_name<1..2^16-1>;\r\n   } encrypted_origin_name;\r\n} AccessTokenRequest;\r\n```",
          "createdAt": "2021-12-10T22:07:16Z",
          "updatedAt": "2021-12-10T22:07:16Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood is this sufficiently addressed by the updated drafts?",
          "createdAt": "2021-12-21T19:49:17Z",
          "updatedAt": "2021-12-21T19:49:17Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I don't think so. The request still doesn't convey the chosen HPKE parameters, so we can use this issue to track that.",
          "createdAt": "2021-12-22T18:14:40Z",
          "updatedAt": "2021-12-22T18:14:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "If we're changing the challenge format for HPKE to not be OHTTP (#124) then we don't need to support specifying algorithm IDs in the token request.",
          "createdAt": "2022-01-10T20:57:09Z",
          "updatedAt": "2022-01-10T20:57:09Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Addressed in #139.",
          "createdAt": "2022-01-11T14:44:21Z",
          "updatedAt": "2022-01-11T14:44:21Z"
        }
      ]
    },
    {
      "number": 115,
      "id": "I_kwDOEwrMS85AemW6",
      "title": "Editorial: Normalize capitalization",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/115",
      "state": "OPEN",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "of entities, protocols, across all Privacy Pass docs.",
      "createdAt": "2021-12-16T04:37:48Z",
      "updatedAt": "2022-04-01T23:48:02Z",
      "closedAt": null,
      "comments": [
        {
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "body": "I think entities should be capitalized (Issuer, etc) and protocols and functions should be lower case (issuance, etc)",
          "createdAt": "2021-12-16T04:39:03Z",
          "updatedAt": "2021-12-16T04:39:03Z"
        }
      ]
    },
    {
      "number": 121,
      "id": "I_kwDOEwrMS85ArSKf",
      "title": "Move Issuance Protocol Requirements to architecture",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/121",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The \"Issuance Protocol Requirements\" section should go into the Privacy Pass architecture document, rather than the redemption protocol document. This is just deleting text!",
      "createdAt": "2021-12-20T18:32:28Z",
      "updatedAt": "2022-04-04T19:28:40Z",
      "closedAt": "2022-04-04T19:28:40Z",
      "comments": []
    },
    {
      "number": 122,
      "id": "I_kwDOEwrMS85A2Bnj",
      "title": "Origin information must not be unique",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/122",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "If policies are unique to origins, then attesters can use that information to learn the origin for a given client request. We need to add text to this effect if we don't already have it.",
      "createdAt": "2021-12-23T17:59:34Z",
      "updatedAt": "2022-04-01T23:47:33Z",
      "closedAt": "2022-04-01T23:47:32Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Dup of #182 ",
          "createdAt": "2022-04-01T23:47:32Z",
          "updatedAt": "2022-04-01T23:47:32Z"
        }
      ]
    },
    {
      "number": 123,
      "id": "I_kwDOEwrMS85BBE8f",
      "title": "Note that header values must be base64url-encoded",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/123",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Or some other form of encoding. In any case, the encoding is currently unclear. Base64url seems good enough.",
      "createdAt": "2021-12-29T23:57:43Z",
      "updatedAt": "2022-01-03T21:11:54Z",
      "closedAt": "2022-01-03T21:11:54Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "These are defined as `sf-binary` structured fields. See https://www.rfc-editor.org/rfc/rfc8941#name-byte-sequences.",
          "createdAt": "2022-01-03T21:11:52Z",
          "updatedAt": "2022-01-03T21:11:52Z"
        }
      ]
    },
    {
      "number": 124,
      "id": "I_kwDOEwrMS85BBRO2",
      "title": "Consider removing OHTTP dependency",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/124",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We currently borrow the public configuration structure from OHTTP, and the just use it for HPKE operations. This dependency doesn't buy us much at this point as we're not using OHTTP, so we might as well inline the structure definition.",
      "createdAt": "2021-12-30T03:25:12Z",
      "updatedAt": "2022-01-11T21:07:23Z",
      "closedAt": "2022-01-11T21:07:23Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I'd be happy to see this inlined and remove the dependency.",
          "createdAt": "2022-01-03T21:09:18Z",
          "updatedAt": "2022-01-03T21:09:18Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We could choose to either define specific algorithms supported by this token type, OR have the struct only have one field for each algorithm to not let the client choose in the request which it will use.",
          "createdAt": "2022-01-10T20:57:50Z",
          "updatedAt": "2022-01-10T20:57:50Z"
        }
      ]
    },
    {
      "number": 125,
      "id": "I_kwDOEwrMS85BBRe7",
      "title": "Send policy from Issuer to Attester for enforcement",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/125",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Currently, the Attester sends per-client state to the Issuer for the purposes of determining whether or not a given token request is permitted (or not). I see a couple problems with this:\r\n\r\n1. The policy limit isn't necessarily secret from the Attester anyway, since it (a) knows the per-client counts and (b) can see when the Issuer refuses to produce a token response. It can then infer what the limit is. It could even act as a malicious client to learn the per-origin limit if it wanted.\r\n2. The Issuer currently reveals when it refuses to process a token. We could change that by having it just randomize the token response in the event of failure, but then the Attester could just act as a client and learn whatever real clients learn, so this doesn't make much sense to me.\r\n3. Bucketizing the counts from Attester to Issuer seems leaky at best, especially since the right size of the buckets seems to depend on client activity. I don't know of a reasonable strategy here that would allow us to state concrete properties about what the Issuer can and cannot learn per client. And it seems like we want something like k-anonymity?\r\n\r\nI think we should instead have the Issuer send the Attester the per-origin policy limit, and then require the Attester to enforce the policy based on that limit. We already require origins to not have unique policies for privacy reasons, so this seems fine. Moreover, giving the Attester this policy information doesn't seem like revealing anything new. But it would mean that the origins now trust Attesters directly to enforce limits, rather than Issuers being the ones to do that. Since Attesters are already transitively trusted through Issuers, this doesn't seem like a stretch.",
      "createdAt": "2021-12-30T03:28:53Z",
      "updatedAt": "2022-01-10T20:37:25Z",
      "closedAt": "2022-01-10T20:37:25Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The concerns with switching the direction of the count limit are:\r\n\r\n1. The Issuer can no longer enforce nuanced policies that change the limit based on context and condition\r\n2. The Attester can be lazy and just allow clients to get tokens, without any way for the Issuer to detect this behavior. The Issuer loses it's ability to validate that policy is enforced.",
          "createdAt": "2022-01-03T20:45:46Z",
          "updatedAt": "2022-01-03T20:45:46Z"
        }
      ]
    },
    {
      "number": 126,
      "id": "I_kwDOEwrMS85BCj0H",
      "title": "Issuer routing",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/126",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Clients currently identify the Issuer with the `:authority` or `Host` headers. We should move to something like ODoH or OHTTP where the request path identifies the target.",
      "createdAt": "2021-12-30T16:10:03Z",
      "updatedAt": "2022-01-09T21:03:38Z",
      "closedAt": "2022-01-09T21:03:38Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Could be a URI template for the Attester's config",
          "createdAt": "2022-01-03T21:08:27Z",
          "updatedAt": "2022-01-03T21:08:27Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Let's plan on doing a URI template for the attester with an issuer query parameter.",
          "createdAt": "2022-01-06T00:38:04Z",
          "updatedAt": "2022-01-06T00:38:04Z"
        }
      ]
    },
    {
      "number": 127,
      "id": "I_kwDOEwrMS85BC4Z0",
      "title": "Attester configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/127",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Just like Issuers have configuration dictionaries specifying the endpoints to use for interacting with its resources, Attesters should have a config dictionary as well. To start, this would contain the URI that client's use when sending a token request to the Attester that should be forwarded to the Issuer.",
      "createdAt": "2021-12-30T19:38:14Z",
      "updatedAt": "2022-01-11T14:59:36Z",
      "closedAt": "2022-01-11T14:59:36Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Now that the attester has a template, we may be able to close this. ",
          "createdAt": "2022-01-11T14:59:36Z",
          "updatedAt": "2022-01-11T14:59:36Z"
        }
      ]
    },
    {
      "number": 128,
      "id": "I_kwDOEwrMS85BDBxD",
      "title": "Consistent dictionary names",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/128",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We have `origin-name-key` and `issuer-request-uri`, yet both are URIs. Let's make these consistent.",
      "createdAt": "2021-12-30T21:31:32Z",
      "updatedAt": "2022-01-10T20:21:56Z",
      "closedAt": "2022-01-10T20:21:56Z",
      "comments": []
    },
    {
      "number": 130,
      "id": "I_kwDOEwrMS85BIzh-",
      "title": "Attesting to origin-held state",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/130",
      "state": "OPEN",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "enhancement",
        "Private Access Tokens"
      ],
      "body": "\r\n\r\nA client wishes to attest with an origin that they hold something of value, maybe a subscription. To implement this in PATs there are two obvious routes:\r\n1. Allow the attester and origin to be the same entity. Attester can directly check for the clients subscription credentials\r\n1.  Allow the client to pass some extra (blind?) signed value that indicates to the issuer they meet the appropriate criteria. Maybe the client got this from the origin before engaging in the PATs protocol.\r\n\r\nNote I am assuming most origins wouldn't store traits like subscriptions directly with attesters, although some platforms could support this.\r\n\r\nWhich route to go here isn't obvious to me. (1) has a simpler flow, but requires many origins to also become attesters. (2) may require less overall changes to the architecture, but may also be adding an entity, the 3P attester, that isn't really needed for this use case.",
      "createdAt": "2022-01-03T21:19:02Z",
      "updatedAt": "2022-07-06T19:06:26Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 131,
      "id": "I_kwDOEwrMS85BLL70",
      "title": "Rename \"issuer-key\"",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/131",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The issuer's config value \"issuer-key\" is the base64-url encoded public key used for fetching tokens, but the name is a bit misleading. Maybe we can rename this to \"token-issuance-key\" or similar?",
      "createdAt": "2022-01-04T15:12:02Z",
      "updatedAt": "2022-01-11T17:49:27Z",
      "closedAt": "2022-01-11T17:49:27Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "What about the name is misleading? It's the key the issuer has to issue keys, which is the primary function of the issuer.",
          "createdAt": "2022-01-04T18:36:32Z",
          "updatedAt": "2022-01-04T18:36:32Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "As in the PR, there are multiple keys the issuer holds. It's not clear what key this refers to.",
          "createdAt": "2022-01-04T20:54:02Z",
          "updatedAt": "2022-01-04T20:54:10Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The reason I used the name \"issuer-key\" within the auth scheme (and for the basic issuance flow) is that it is the only issuer key that's ever seen by the clients and origins in the normal flow. The challenge includes the issuer key that needs to cover the tokens, and that's the one the client uses.\r\n\r\nWhen looking at this from a \"base\" spec for privacy pass tokens, \"issuer key\" is IMO the simplest option. The fact that rate-limited tokens also have an \"origin name key\" is an extra thing, and it's not necessary to know about that to understand the base spec.",
          "createdAt": "2022-01-05T03:28:51Z",
          "updatedAt": "2022-01-05T03:28:51Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> When looking at this from a \"base\" spec for privacy pass tokens, \"issuer key\" is IMO the simplest option. The fact that rate-limited tokens also have an \"origin name key\" is an extra thing, and it's not necessary to know about that to understand the base spec.\r\n\r\nI dunno. I find it quite confusing. I get that \"issuer-key\" is arguably simpler, but it doesn't capture what the key actually does. It's a key for verifying tokens, regardless of issuance protocol. Confusion is compounded when referenced in the context of the rate-limited protocol, which has a pile of keys hanging around.\r\n\r\nI think we want the vocabulary here to be clear and descriptive. If we have to explain the name, then the name can surely be improved. \"issuer-validation-key\" (or \"token-validation-key\") is specific and works equally well for all protocols. I don't think we're helping much by choosing overly simplified names. ",
          "createdAt": "2022-01-05T03:39:54Z",
          "updatedAt": "2022-01-05T03:39:54Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Okay, \"token-validation-key\" sounds good there.\r\n\r\nAre you OK with keeping the \"origin-name-key\" for the key used to encrypt origin names?",
          "createdAt": "2022-01-05T19:37:48Z",
          "updatedAt": "2022-01-05T19:37:48Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Are you OK with keeping the \"origin-name-key\" for the key used to encrypt origin names?\r\n\r\nWhat about something like \"issuer-encapsulation-key\", as in, the key used to encapsulate things to the issuer? I'm thinking the name should probably reflect that capability. ",
          "createdAt": "2022-01-05T20:28:59Z",
          "updatedAt": "2022-01-05T20:28:59Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I guess it's a call between what it does at a very technical level, and how it's used. We use this key to encrypt origin names to the issuer, and it's not clear what other things we'd encapsulate similarly at the moment using this particular protocol\u2014if we had other things, it could be a different key, etc.",
          "createdAt": "2022-01-05T20:42:18Z",
          "updatedAt": "2022-01-05T20:42:18Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed in #138.",
          "createdAt": "2022-01-11T17:49:27Z",
          "updatedAt": "2022-01-11T17:49:27Z"
        }
      ]
    },
    {
      "number": 137,
      "id": "I_kwDOEwrMS85Bd-Px",
      "title": "Look at greasing the Client - Origin interaction",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/137",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We should have Origins issue challenges for greased token types, etc.",
      "createdAt": "2022-01-10T21:00:46Z",
      "updatedAt": "2022-04-04T19:44:33Z",
      "closedAt": "2022-04-04T19:44:33Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly can we move this issue to the auth doc?",
          "createdAt": "2022-04-04T19:28:15Z",
          "updatedAt": "2022-04-04T19:28:15Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "https://github.com/ietf-wg-privacypass/base-drafts/issues/113",
          "createdAt": "2022-04-04T19:44:32Z",
          "updatedAt": "2022-04-04T19:44:32Z"
        }
      ]
    },
    {
      "number": 141,
      "id": "I_kwDOEwrMS85BhXdc",
      "title": "Formal analysis",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/141",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We've grown past the point of being able to reason about security and privacy properties on paper. We should have a model for this protocol. =)",
      "createdAt": "2022-01-11T15:00:14Z",
      "updatedAt": "2022-06-27T18:51:38Z",
      "closedAt": "2022-06-27T18:51:38Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This has been done, I believe",
          "createdAt": "2022-06-27T18:51:38Z",
          "updatedAt": "2022-06-27T18:51:38Z"
        }
      ]
    },
    {
      "number": 142,
      "id": "I_kwDOEwrMS85BiBtT",
      "title": "Add rationale for anon origin ID",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/142",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The anon origin ID allows attesters to track the buckets as seen from the client. Without this, rotations on the issuer for the index generation would cause the counts to reset (in the middle of a window for some client). Having consistent counts relies on the client communicating information to the attester.",
      "createdAt": "2022-01-11T17:27:11Z",
      "updatedAt": "2022-07-06T01:41:20Z",
      "closedAt": "2022-07-06T01:41:20Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Here's a sketch describing the interaction between origin secrets and anon origin IDs. We could start with a simplified version of the protocol that has no origin secret rotation, which would not require anon origin ID to ensure stability. Then we can say that since these are rotated, causing client state to be reset, we need something to maintain the mapping across rotation windows, and that's the anon origin ID. \r\n\r\n~~~\r\n                     (rotate)        (rotate)  \r\nIssuer:      -----+-----|---------+-----|------\r\n                  | policy window | ...\r\nClient:           |---------------|\r\n               (start)          (end)\r\n~~~",
          "createdAt": "2022-01-11T17:36:30Z",
          "updatedAt": "2022-01-11T17:36:30Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think this is better explained in current versions",
          "createdAt": "2022-06-27T18:57:13Z",
          "updatedAt": "2022-06-27T18:57:13Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Reopening and taking this issue. I don't think we do the best job describing this right now, and that in part relates to #213. We could include a picture like the above in part towards addressing #213.",
          "createdAt": "2022-06-28T16:58:35Z",
          "updatedAt": "2022-06-28T16:58:35Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood can we close this now? Or do we still want more pictures?",
          "createdAt": "2022-07-05T21:01:06Z",
          "updatedAt": "2022-07-05T21:01:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I'll address this as followup to #213.",
          "createdAt": "2022-07-05T21:04:25Z",
          "updatedAt": "2022-07-05T21:04:25Z"
        }
      ]
    },
    {
      "number": 143,
      "id": "I_kwDOEwrMS85BiFGv",
      "title": "Access -> Attestation?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/143",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Now that we have an Attester, instead of a Mediator, maybe we can rename AccessTokenFoo to AttestationTokenFoo?",
      "createdAt": "2022-01-11T17:41:23Z",
      "updatedAt": "2022-01-24T20:43:33Z",
      "closedAt": "2022-01-24T20:43:33Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I was leaning towards things just being \"TokenFoo\"?",
          "createdAt": "2022-01-11T21:07:51Z",
          "updatedAt": "2022-01-11T21:07:51Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yep, that works too. I'll send a PR.",
          "createdAt": "2022-01-11T21:28:37Z",
          "updatedAt": "2022-01-11T21:28:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Done in #148.",
          "createdAt": "2022-01-24T14:23:40Z",
          "updatedAt": "2022-01-24T14:23:40Z"
        }
      ]
    },
    {
      "number": 144,
      "id": "I_kwDOEwrMS85BzGRM",
      "title": "Issuer API for fetching token validation key",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/144",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Origins need a way to get their token validation key so they can actually validate tokens. Clients get this key in the WWW-Authenticate challenge as the \"token-key\" attribute. I propose we add a new field to the issuer configuration that points to the URI for fetching origin keys, and then have the response carry the corresponding key and token protocol. \r\n\r\nSpecifically, add this key to the config:\r\n\r\n~~~\r\n{\r\n...\r\n    \"token-key-uri\": <URI for fetching the per- or cross-origin token key>,\r\n...\r\n}\r\n~~~\r\n\r\nAn example URI might be /token-key, and one might query it like so:\r\n\r\n~~~\r\nGET /token-key?origin=origin.example\r\n~~~\r\n\r\nAnd then the response might be:\r\n\r\n~~~\r\n{\r\n    token-type: 0x0003, \r\n    token-key: <encoded token key as is sent in the WWW-Authenticate challenge>\r\n}\r\n~~~",
      "createdAt": "2022-01-14T17:02:47Z",
      "updatedAt": "2022-06-22T13:30:54Z",
      "closedAt": "2022-06-22T13:30:54Z",
      "comments": []
    },
    {
      "number": 145,
      "id": "I_kwDOEwrMS85CFfN1",
      "title": "Add text describing composition of multiple token types",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/145",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Currently, origins can challenge clients for any number of token types and clients pick the ones they support (and prefer). This is fine for _equivalent_ token types, like those in the basic issuance doc, since the origin is willing to accept either and they have no substantial difference in functionality or security. However, the origin can also do silly things like combine basic and rate-limited token types in the same challenge. What the client should do in this situation is a bit odd, since the incentives may not be aligned between client and server. We should add some text discouraging this practice, and maybe even try to state which token types are _equivalent_ from a feature and security perspective.",
      "createdAt": "2022-01-20T01:32:33Z",
      "updatedAt": "2022-07-05T21:33:49Z",
      "closedAt": "2022-07-05T21:33:49Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is an architecture issue, not a rate-limited issue, so let's move it over to the architecture draft.",
          "createdAt": "2022-07-05T21:33:14Z",
          "updatedAt": "2022-07-05T21:33:14Z"
        }
      ]
    },
    {
      "number": 146,
      "id": "I_kwDOEwrMS85CIsL2",
      "title": "Add text describing origin issuer selection",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/146",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Different issuers may trust different attesters, and the security posture of the origin when using a specific issuer depends on this set of trusted attesters. In effect, origins get the \"minimum\" guarantees across all attesters trusted by a selected issuer. If an origin needs to ensure different types of attestation requirements, it should do so by choosing issuers with different trusted attesters. We should add text describing these origin/issuer arrangement questions.",
      "createdAt": "2022-01-20T17:26:43Z",
      "updatedAt": "2022-07-05T21:34:07Z",
      "closedAt": "2022-07-05T21:34:06Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is an architecture issue, so let's move it over there.",
          "createdAt": "2022-07-05T21:34:06Z",
          "updatedAt": "2022-07-05T21:34:06Z"
        }
      ]
    },
    {
      "number": 147,
      "id": "I_kwDOEwrMS85CJZWE",
      "title": "Relax rate-limited token challenge requirements ",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/147",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly",
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "It seems totally reasonable for one to use the rate-limited token type to place an upper bound on tokens minted across origins, so the per-origin requirement seems overly restrictive. Same goes for  the interactive requirement, since that only has implications for the origin. In general, these should both be orthogonal to the type of token protocol. ",
      "createdAt": "2022-01-20T20:58:00Z",
      "updatedAt": "2022-04-04T19:06:48Z",
      "closedAt": "2022-04-04T19:06:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think removing the origin name would change the work for the attester quite a lot, and it's not clear to me what the client would send for it's anonymous origin name.",
          "createdAt": "2022-01-20T21:10:02Z",
          "updatedAt": "2022-01-20T21:10:02Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "The attester is unaffected by this change, unless I'm missing something? It computes the index just as before, but here the index is F(client secret, cross-origin secret) rather than F(client secret, per-origin secret). Everything else is the same. Clients could send a special anonymous origin name that's akin to an \"empty\" origin. ",
          "createdAt": "2022-01-20T21:12:39Z",
          "updatedAt": "2022-01-20T21:16:33Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Got it, so we just need to define the value to use for an \"empty\" origin. Makes sense!",
          "createdAt": "2022-01-20T21:51:09Z",
          "updatedAt": "2022-01-20T21:51:09Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Do this with #187 ",
          "createdAt": "2022-04-01T20:34:08Z",
          "updatedAt": "2022-04-01T20:34:08Z"
        }
      ]
    },
    {
      "number": 149,
      "id": "I_kwDOEwrMS85CbWrg",
      "title": "Origin name encryption padding",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/149",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Attesters should not learn anything from encrypted origin names, but the length leaks with the current encryption scheme. We should introduce padding, perhaps cribbing [text from ECH](https://datatracker.ietf.org/doc/html/draft-ietf-tls-esni-13#section-6.1.3) as needed.",
      "createdAt": "2022-01-25T23:31:43Z",
      "updatedAt": "2022-03-07T20:19:54Z",
      "closedAt": "2022-03-07T20:19:54Z",
      "comments": []
    },
    {
      "number": 150,
      "id": "I_kwDOEwrMS85CkypE",
      "title": "Token issuance key management",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/150",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "In the basic issuance protocol, there's no limit as to the number of tokens a client can get. This means that attesters play no role in the protocol beyond relaying requests and responses between client and issuer. If an origin wants a per-origin token, it includes an origin in its challenge, and any valid matching token will be bound to that origin. (Similarly for cross-origin tokens.) This means that issuers can maintain a single key for issuance across all basic issuance protocols.\r\n\r\nThe same goes for the rate-limited variants, too. The only thing that needs to change per-origin in the rate-limited case is the per-origin blinding key, since that's what influences the rate limit logic. ",
      "createdAt": "2022-01-28T02:40:27Z",
      "updatedAt": "2022-07-05T20:52:49Z",
      "closedAt": "2022-07-05T20:52:49Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, we should make sure this is very explicitly that a single key can be used.\r\n\r\nIt is possible to use multiple keys still, and it is still useful for the request to include the key ID to support different keys (due to rotation, or if there are per-origin or per-group-of-origins keys), but issuers don't need to have many keys.",
          "createdAt": "2022-01-28T15:16:27Z",
          "updatedAt": "2022-01-28T15:16:27Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> It is possible to use multiple keys still, and it is still useful for the request to include the key ID to support different keys (due to rotation, or if there are per-origin or per-group-of-origins keys), but issuers don't need to have many keys.\r\n\r\nYep, but we need to discourage using many keys for a single context here as that can be used to track users. No more than 2 keys at any point time -- old and new -- is really all that's needed.",
          "createdAt": "2022-01-28T16:53:37Z",
          "updatedAt": "2022-01-28T16:53:37Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "I think we can close this out now.",
          "createdAt": "2022-07-05T20:52:49Z",
          "updatedAt": "2022-07-05T20:52:49Z"
        }
      ]
    },
    {
      "number": 153,
      "id": "I_kwDOEwrMS85C4kw9",
      "title": "Evaluate impact of Related-Key Attacks against ECDSA-BlindKeySign",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/153",
      "state": "CLOSED",
      "author": "FredericJacobs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We need more security analysis on ECDSA-BlindKeySign and related functions. There might be some risks related to the blinding we need to dig deeper into.\r\n\r\n[This paper Sec 4.2](https://eprint.iacr.org/2015/1135.pdf) doesn't directly translate to our scheme but it could be that similar attacks apply.",
      "createdAt": "2022-02-02T16:18:32Z",
      "updatedAt": "2022-02-02T16:48:04Z",
      "closedAt": "2022-02-02T16:48:04Z",
      "comments": [
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "Moved to https://github.com/chris-wood/draft-wood-cfrg-eddsa-blinding/issues/14",
          "createdAt": "2022-02-02T16:48:04Z",
          "updatedAt": "2022-02-02T16:48:04Z"
        }
      ]
    },
    {
      "number": 155,
      "id": "I_kwDOEwrMS85C9obX",
      "title": "[geohash] consider hashing over population density, rather than distance",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/155",
      "state": "CLOSED",
      "author": "miketaylr",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "It would be useful if the geohash client hint operated over population density (or we could think of this as k-anonymity) rather than geographical distance from a given lat,lng coordinate pair. You could imagine specifying a default policy of some number, e.g., 500k people and provide a mechanism for sites to request more or less precision over density (lower bound could be UA policy defined).\r\n\r\nClient hints don't have the concept of parameterized requests today, but they're defined as [`sf-token`](https://datatracker.ietf.org/doc/html/rfc8941#section-3.3.4)s, which [allows for them](https://www.rfc-editor.org/rfc/rfc8941.html#name-parameters). So possibly the CH could be extended to take a `p` parameter that takes a value from n to 32, representing density of 2^p. For example, `accept-ch: sec-ch-geohash; p=15` would be a request for the location corresponding to 32,768 people near me",
      "createdAt": "2022-02-03T19:06:23Z",
      "updatedAt": "2022-03-30T20:30:12Z",
      "closedAt": "2022-03-30T20:30:12Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Hmm, how would clients know how many people are nearby to produce a matching hint?",
          "createdAt": "2022-02-03T21:35:29Z",
          "updatedAt": "2022-02-03T21:35:29Z"
        },
        {
          "author": "miketaylr",
          "authorAssociation": "NONE",
          "body": "Good question - I don't really have anything very concrete. My high level idea is a user-agent would need to build a service that takes location (derived from network IP, GPS chip, etc.) and sticks it into a black box that knows about population density (from sources such as https://dataforgood.facebook.com/dfg/tools/high-resolution-population-density-maps). The service then gives a hash that fits the boundary conditions which can be sent to requesting sites.",
          "createdAt": "2022-02-04T23:55:35Z",
          "updatedAt": "2022-02-04T23:55:35Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Moving to geo IP entries: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:30:12Z",
          "updatedAt": "2022-03-30T20:30:12Z"
        }
      ]
    },
    {
      "number": 156,
      "id": "I_kwDOEwrMS85C98Zl",
      "title": "[geohash] Discuss handling of geohashes spanning boundaries",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/156",
      "state": "CLOSED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "One major downside of geohashes is that they often span national or regional boundaries, this leaving the country ambigious.  This makes them hard to use \"instead\" of IP addresses.  More likely, they want to be used in-combination with IP addresses.  For example, using IP address to derive a country, but then using the geohash to refine the location within the country.\r\n\r\nAdditionally, proxies intending to preserve \"country\" in their source IP address (such as to prevent inclusion on lists of proxies allowing users to bypass geographic restrictions) may similarly wish to obtain the country information from an authenticated source (eg, a privacy token) and then refine the location within that country with the geohash.\r\n",
      "createdAt": "2022-02-03T20:43:38Z",
      "updatedAt": "2022-03-30T20:29:37Z",
      "closedAt": "2022-03-30T20:29:37Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Moving to geo IP entries: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:29:37Z",
          "updatedAt": "2022-03-30T20:29:37Z"
        }
      ]
    },
    {
      "number": 157,
      "id": "I_kwDOEwrMS85C-IOG",
      "title": "consider S2 cells?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/157",
      "state": "CLOSED",
      "author": "ekline",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "An alternative to geohash might be to allow high level (or varying level) S2 cells.\r\n\r\nhttps://s2geometry.io/",
      "createdAt": "2022-02-03T21:40:40Z",
      "updatedAt": "2022-03-30T20:29:22Z",
      "closedAt": "2022-03-30T20:29:21Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Moving to geo IP entry: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:29:21Z",
          "updatedAt": "2022-03-30T20:29:21Z"
        }
      ]
    },
    {
      "number": 158,
      "id": "I_kwDOEwrMS85C-S_1",
      "title": "ClientHints and fingerprints",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/158",
      "state": "OPEN",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "The privacy posture of the GeoHash CH is interesting. If it's always sent, then it leaks information about the user's rough location. If it's not always sent, perhaps because it's gated by user consent,  then its presence (or lack thereof) contributes to the fingerprint surface of said client. It's probably worth touching on this tradeoff in the draft.",
      "createdAt": "2022-02-03T22:40:27Z",
      "updatedAt": "2022-09-20T22:23:22Z",
      "closedAt": null,
      "comments": [
        {
          "author": "npdoty",
          "authorAssociation": "NONE",
          "body": "At a minimum, it's not clear to me from the draft if the Client Hint will only be sent if there was already a response header from the origin indicating that it accepts this particular hint. [RFC 8942](https://www.rfc-editor.org/rfc/rfc8942#name-information-exposure) describes some of the fingerprinting issues, but it's also a little wishy-washy on whether server-side opt-in is actually required.",
          "createdAt": "2022-04-27T21:39:55Z",
          "updatedAt": "2022-04-27T21:39:55Z"
        },
        {
          "author": "eeeps",
          "authorAssociation": "NONE",
          "body": "In web contexts, at least, server-side opt-in is governed by https://wicg.github.io/client-hints-infrastructure/; if Client Hints aren't defined as [low-entropy](https://wicg.github.io/client-hints-infrastructure/#low-entropy-table), they do require opt-ins.",
          "createdAt": "2022-09-20T22:23:07Z",
          "updatedAt": "2022-09-20T22:23:22Z"
        }
      ]
    },
    {
      "number": 159,
      "id": "I_kwDOEwrMS85DBj_n",
      "title": "Send geolocation feed tags instead of geohash?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/159",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "One option we could consider for the client \"region/location\" hint is to share a geolocation feed tag instead of a geohash. This would be the format as described for IP geolocation feeds:\r\n\r\nhttps://www.rfc-editor.org/rfc/rfc8805.html#name-geolocation-feed-individual\r\n\r\nExamples from that doc include:\r\n`SG,SG-01,Singapore`\r\n`US,US-AL,Alabaster`\r\n\r\nWe could define the header to share this as `Sec-CH-IP-Geo`, which would be an `sf-item` of type String.\r\n\r\nWhich could expand as:\r\n\r\n`Sec-CH-IP-Geo = \"US,US-AL,Alabaster\"`\r\n\r\nThe intent of this would be for the client to tell the server that it believes it knows the accurate mapping for its client IP, such that an origin server with an out-of-date or inaccurate geolocation feed doesn't do the wrong thing. This of course would not be a matter that could be used for access control or security, but it provides a hint that can be useful for localizing content and results without needing to share GPS coordinates.\r\n\r\nThis has an advantage over geohash in that it is more clearly tied to or derived from the client's public IP, and would be less likely to accidentally include information derived from GPS coordinates. It also presumably would not be exposing any new information that the server couldn't already infer from a properly updated geo IP database feed.\r\n\r\nWe could also include parameters associated with the value to point to which geo IP feed is authoritative for this mapping, such that an origin could go further and try to validate the mapping if it wants to make a trust decision based on the value. It could then compare the client's IP address, the header value, and the mapping in the geo IP feed, and if it trusts this feed provider, it would allow the action.\r\n\r\nFor example:\r\n\r\n`Sec-CH-IP-Geo = \"SG,SG-01,Singapore\"; feed=\"https://noc.ietf.org/geo/google.csv\"`",
      "createdAt": "2022-02-04T18:15:20Z",
      "updatedAt": "2022-03-30T20:29:07Z",
      "closedAt": "2022-03-30T20:29:07Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is related to #156. @enygren what do you think?",
          "createdAt": "2022-02-04T19:32:57Z",
          "updatedAt": "2022-02-04T19:32:57Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We could also include a hash of the geofeed to handle changes.",
          "createdAt": "2022-02-11T21:57:23Z",
          "updatedAt": "2022-02-11T21:57:23Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "What's the purpose of including the feed here? We can't create a proof of relationship with a feed without some cryptographic binding.",
          "createdAt": "2022-02-11T22:47:55Z",
          "updatedAt": "2022-02-11T22:47:55Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@DavidSchinazi the feed, which would be optional, would be a way for a client to point to the feed that is authoritative for their IP-to-geo mapping.\r\n\r\nFor example, Private Relay publishes a geo IP feed. A client could say \"hey website, I'm in `US,US-AL,Alabaster`, and if you want to check the IP address you see me coming from against a published feed, it's available here\".\r\n\r\nFor these cases of proxying, it wouldn't say anything about the client's original IP address and real geolocation, but it would just make it very explicit that the client thinks that its public IP address is already indicating this location, and lets origins discover feeds.\r\n\r\nIn a way, it allows origins to not need relationships with third-party companies that maintain geo-IP feed aggregators \u2014 instead, you could get the \"correct\" list from the people who own IP address.",
          "createdAt": "2022-02-11T23:38:36Z",
          "updatedAt": "2022-02-11T23:38:36Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "From the client's perspective, I understand this: the client will be configured with a way to get the geo tag, and that configuration can also contain the feed URI.\r\n\r\nFrom the server, I don't understand this. What does a server do with this information?\r\n* if the server already knows about this feed (let's say it's in the server's list of known feeds) and the tags match, the server does nothing\r\n* if the server already knows about this feed and the tags don't match, does the server ignore the tags?\r\n* if the server doesn't know about this feed, what does it do? It shouldn't use it for other clients since the feed could be malicious or just wrong.",
          "createdAt": "2022-02-14T16:37:31Z",
          "updatedAt": "2022-02-14T16:37:31Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "To note, we could certainly remove the feed bit, but I don't think it's harmful.\r\n\r\nFor the server behavior, I was imagining this:\r\n- If the servers knows/accepts this feed, but has multiple conflicting entries for the IP address or subnet the client is on, it could use the feed in the hint from the client to recognize which feed is more authoritative. For example, a server could generally use some third-party geofeed service, but also trust the lists for things like private relay that directly publish. So the feed hint helps a server know which service to check against to verify.\r\n- If the feed tag doesn't match, it may be an indication to a server that it's copy is out of date. It obviously can't go refetch a new copy of the feed every time a client sends a new hash, because that could be malicious, but it could trigger some refresh logic that is dampened.\r\n- If the feed is unknown but starts becoming common, it could be flagged and the server administrators could discover that they should add the feed to the list (i.e., a new feed/service comes online).",
          "createdAt": "2022-02-14T16:50:26Z",
          "updatedAt": "2022-02-14T16:50:26Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, that makes sense. I'm not sure we'd really need this feature, but it can see how it might be useful.",
          "createdAt": "2022-02-14T18:46:36Z",
          "updatedAt": "2022-02-14T18:46:36Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We should discuss the relationship with RFC 9092, also.",
          "createdAt": "2022-03-10T19:47:21Z",
          "updatedAt": "2022-03-10T19:47:21Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This change is now made: https://www.ietf.org/archive/id/draft-pauly-httpbis-geoip-hint-00.html",
          "createdAt": "2022-03-30T20:29:07Z",
          "updatedAt": "2022-03-30T20:29:07Z"
        }
      ]
    },
    {
      "number": 160,
      "id": "I_kwDOEwrMS85DFz87",
      "title": "Nit: HTTP examples",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/160",
      "state": "CLOSED",
      "author": "mnot",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In the issuance protocol, the examples use the path `/token-request`. Some may mistake this for a fixed path -- could you use something more obviously ephemeral, e.g., `/example-token-request-path` or `/my-token-request`? \r\n\r\nAlso might be good to add prose about how the URL is found (sorry if this is addressed, I'm skimming). ",
      "createdAt": "2022-02-07T07:09:58Z",
      "updatedAt": "2022-02-07T23:48:50Z",
      "closedAt": "2022-02-07T19:27:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood FYI, this should be moved to https://github.com/ietf-wg-privacypass/base-drafts/issues",
          "createdAt": "2022-02-07T16:38:33Z",
          "updatedAt": "2022-02-07T16:38:33Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Moved to [this new issue](https://github.com/ietf-wg-privacypass/base-drafts/issues/96). ",
          "createdAt": "2022-02-07T19:27:48Z",
          "updatedAt": "2022-02-07T19:27:48Z"
        },
        {
          "author": "mnot",
          "authorAssociation": "NONE",
          "body": "Thx!",
          "createdAt": "2022-02-07T23:48:50Z",
          "updatedAt": "2022-02-07T23:48:50Z"
        }
      ]
    },
    {
      "number": 166,
      "id": "I_kwDOEwrMS85Elw49",
      "title": "Key related attacks and unforgeability",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/166",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "As pointed out in  https://github.com/chris-wood/draft-dew-cfrg-signature-key-blinding/issues/14, ECDSA with **multiplicative** key blinding is not unforgeable in the RKA model. Applied to the Rate-Limited Token Issuance Protocol, this gives the following unusual settings.\r\n\r\n* Client 1 generates an ECDSA keypair `pk_sign, sk_sign`, and registers to the Attester with `pk_sign`;\r\n* Client 1 interacts correctly with the attester, and following the notation of Sec 7.1.2, it signs\r\n```\r\ncontext = concat(0x0003, token_key_id, ..., encrypted_origin_name)\r\n```\r\nwith `sk_sign` and `sk_blind`. In particular, this yields a valid ECDSA signature `(r, s)` under a public key `blind_key = pk_blind = (sk_blind * sk_sign) * G` where `G` is the base point. Both the attester and issuer will accept this valid signature.\r\n\r\nNow, consider a second client\r\n* Client 2 registers to the attester with `pk2 = alpha^(-1) * pk_blind`, for a random `alpha`. \r\n\r\nNote that client 2 does not know the secret key associated with its public key `pk2`. However, it can send the **same** `context` and `(r, s)` as above, and a randomizer `sk_blind2 = alpha` to the attester. The attester will reconstruct `pk_blind2 = sk_blind2 * pk2 = pk_blind`, and verify the signature `(r, s)` against `pk_blind`, which is valid!\r\n\r\nWe end up in a setting where a client has sent a valid signature on a message without knowing the secret key. This is the same message `context` and signature as above.\r\n\r\nAlternatively, client 2  could generate a context\r\n```\r\ncontext2 =  concat(0x0003, token_key_id2, ..., encrypted_origin_name2)\r\n```\r\ncompute `beta = H(context2)/H(context) mod q`, and register with public key `pk3 = alpha^(-1) * beta * pk_blind`, and provide randomizer `sk_blind3 = alpha` and signature `(r, beta * s mod q)`. Once again, the client doesn't know the secret key `sk3` associated to `pk3`. Since this is an ECDSA signature, it holds that \r\n```\r\nbeta * s = k^(-1) (beta * H(context) + beta * sk_blind * sk_sign * r) mod q\r\n              = k^(-1) ( H(context2) + sk3 * r ) mod q\r\n```\r\n\r\nIt seems that the notion used in this part of the protocol does not rely on the unforgeability of the signature in the related key attack model. It would be valuable to specify which security properties are used from the ECDSA key blinding protocol, and what security properties they enable to prove for the rate-limited token issuance protocol.",
      "createdAt": "2022-02-25T18:50:23Z",
      "updatedAt": "2022-06-27T19:14:07Z",
      "closedAt": "2022-06-27T19:14:07Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood can we close this now?",
          "createdAt": "2022-06-27T18:57:44Z",
          "updatedAt": "2022-06-27T18:57:44Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Yeah, I think we can close this out based on the backing analysis.",
          "createdAt": "2022-06-27T19:14:07Z",
          "updatedAt": "2022-06-27T19:14:07Z"
        }
      ]
    },
    {
      "number": 167,
      "id": "I_kwDOEwrMS85ElxAu",
      "title": "Rate-limited tokens: Listing of the different pieces of information and parties ",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/167",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "It would be very useful to produce a table that lists in the rows all the different pieces of information, and in column, who learns that information. Not only this would help the comprehension when reading the text, it would also help understanding right away why an attester cannot collude with an issuer or an origin, since basically all the rows would have checkboxes, i.e., a collusion of an attester and an origin would enable to learn most of the pieces of information. It would help for example with Section 9.4.",
      "createdAt": "2022-02-25T18:51:07Z",
      "updatedAt": "2022-03-07T20:15:40Z",
      "closedAt": "2022-03-07T20:15:40Z",
      "comments": []
    },
    {
      "number": 168,
      "id": "I_kwDOEwrMS85ElxQV",
      "title": "Rate-limited tokens: Comparing with Privacy Pass",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/168",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "A clear comparison of the model here, and the one of Privacy Pass, could be very useful to understand the choices that are made here. \r\n\r\nMost precisely, it is interesting that in Privacy Pass, the link between the issuance (with client name) and redemption is broken via the use of an anonymous communication channel when redeeming the token and/or delays between issuance and redemption. Here instead, there are two different channels (client \u2194 \u201cissuing party\u201d, client \u2194 origin), and to hide the client name from the \u201cissuing party\u201d, it is split in two parties (attester, and issuer). This enables to have \u201csimultaneous\u201d issuance and redemption while still hiding the client identity from the origin. \r\n\r\nMaybe adding such clarifications to Section 9 could help understanding the security model of this new protocol.",
      "createdAt": "2022-02-25T18:52:36Z",
      "updatedAt": "2022-02-28T20:16:56Z",
      "closedAt": "2022-02-28T20:16:55Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The latest version of the Privacy Pass architecture is actually where the issuer/attester/etc is defined: https://datatracker.ietf.org/doc/html/draft-ietf-privacypass-architecture-02\r\n\r\nHad you been referring to an older version?",
          "createdAt": "2022-02-28T20:16:55Z",
          "updatedAt": "2022-02-28T20:16:55Z"
        }
      ]
    },
    {
      "number": 169,
      "id": "I_kwDOEwrMS85Elxdc",
      "title": "Rate-Limited Tokens: \"Origin Name Key\" name is confusing",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/169",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "It is a little confusing to understand that \u201cOrigin Name Key\u201d is an issuer-based key used to encrypt the origin name, but is not known/created by the Origin itself. Similarly, revealing the SHA256 of this key in the request to the attester is confusing because it seems to reveal the origin name, when it\u2019s actually just an ID for an issuer key, which should be the same regarless of the origin. \r\n\r\nMaybe changing the name of this \u201cOrigin Name Key\u201d to something that makes it clear that this is NOT created/known by the Origin, but by the Issuer instead, could help the reader.\r\n",
      "createdAt": "2022-02-25T18:53:51Z",
      "updatedAt": "2022-06-13T19:29:28Z",
      "closedAt": "2022-06-13T19:29:28Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "This is now called the \"Encap Key,\" so, closing!",
          "createdAt": "2022-06-13T19:29:28Z",
          "updatedAt": "2022-06-13T19:29:28Z"
        }
      ]
    },
    {
      "number": 170,
      "id": "I_kwDOEwrMS85ElxmI",
      "title": "Rate-Limited Tokens: Secrecy of public keys?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/170",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "Section 2 states that \r\n\r\n> A public key chosen by the Client and shared only with the Attester.\r\n\r\n> [...] whose public key is not shared with anyone.\r\n\r\nThis puts a strong emphasis on a notion of secrecy for the public keys, which is (1) unusual, as public keys are (always) assumed to be able to be made \u201cpublic\u201d, and (2) seems to indicate that the underlying signature scheme needs to have a notion of anonymity. \r\n\r\nIf such secrecy of the public key is needed for security of the protocol, it should be emphasized, and the properties needed on the underlying signature scheme should be specified.\r\n",
      "createdAt": "2022-02-25T18:54:42Z",
      "updatedAt": "2022-03-07T20:15:40Z",
      "closedAt": "2022-03-07T20:15:40Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The problem here would be if the Issuer learned the public key during the token issuance interaction, because a stable public key could be used as an identifier for the client. We should clarify this.",
          "createdAt": "2022-02-28T20:19:31Z",
          "updatedAt": "2022-02-28T20:19:31Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "We should clarify that the signature scheme shouldn't allow the public key to be reconstructed.",
          "createdAt": "2022-02-28T20:20:40Z",
          "updatedAt": "2022-02-28T20:20:40Z"
        }
      ]
    },
    {
      "number": 171,
      "id": "I_kwDOEwrMS85Elx1T",
      "title": "Rate-Limited Tokens: Limit on number of tokens",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/171",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "Section 1.2 says (emphasis is mine)\r\n\r\n> The Issuer knows the Origin's secret (Issuer Origin Secret) and policy about client access, and learns the Origin's identity (Origin Name) and **the number of previous tokens issued to the Client (as communicated by the Attester)** during issuance. \r\n\r\nHowever, in the protocol it seem the attester is sending this value to the issuer. Instead, the issuer is using a \u201cSec-Token-Limit\u201d` item structured header to and \"contains the number of times a Client can retrieve a token for the requested Origin\".\r\n\r\nFrom this inconsistency, the following is unclear:\r\n\r\n* Does the issuer learn (or should he?) learn the number of previous tokens issued to the client?\r\n* Why is the \u201cSec-Token-Limit\u201d set for every response from the issuer to the attester? How does the attester verify that this value cannot be arbitrarily set by the issuer at every request even if it is for the same origin? \r\n",
      "createdAt": "2022-02-25T18:56:03Z",
      "updatedAt": "2022-03-02T16:07:08Z",
      "closedAt": "2022-03-02T16:07:08Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "\" the number of previous tokens issued to the Client (as communicated by the Attester)\" is leftover from previous text. Will fix.",
          "createdAt": "2022-02-28T20:21:43Z",
          "updatedAt": "2022-02-28T20:21:43Z"
        }
      ]
    },
    {
      "number": 172,
      "id": "I_kwDOEwrMS85ElyNV",
      "title": "Rate-Limited Tokens: additional context information",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/172",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Section 5.4 says \r\n\r\n> The Attester MAY also add additional context information, but MUST NOT add information that will uniquely identify a Client.\r\n\r\nThis sentence does not seem to prevent an attester to reduce the anonymity pool to (for example) 2 users, as they would not \u201cadd information that will uniquely identity a Client\u201d. \r\n\r\n* What kind of additional context would be allowed? Do we need such additional context?\r\n* If yes, is there a way to be more prescriptive in the wording to ensure that the above \u201cattack\u201d on the size of the anonymity is not doable?\r\n",
      "createdAt": "2022-02-25T18:58:18Z",
      "updatedAt": "2022-03-02T16:55:36Z",
      "closedAt": "2022-03-02T16:55:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The intent here is to allow sharing broad things like country/region, etc. We should define the bound on what can be sent more rigorously.\r\n\r\nThe \"MAY\" is too unrestricted at this point.",
          "createdAt": "2022-02-28T20:24:15Z",
          "updatedAt": "2022-02-28T20:24:15Z"
        }
      ]
    },
    {
      "number": 173,
      "id": "I_kwDOEwrMS85ElyWX",
      "title": "Rate-Limited Tokens: enable time-based policy windows",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/173",
      "state": "OPEN",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "enhancement",
        "Private Access Tokens"
      ],
      "body": "Section 5.1.2 and Section 2 state that \r\n\r\n> The effective policy window for a specific Client starts when the Client first sends a request associated with an Issuer.\r\n\r\nand is defined in seconds. This makes challenging to create policies of the form \u201cone token per client per UTC day\u201d, which seems quite natural (e.g., this seems to be the policy adopted by Wordle-like games :-)). For example, a newspaper may want to allow 5 articles per UTC day, instead of 5 articles every 24h.\r\n\r\nWould there be a way to be less restrictive / more generic in the definition of the policy window? ",
      "createdAt": "2022-02-25T18:59:08Z",
      "updatedAt": "2022-06-13T19:35:59Z",
      "closedAt": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "~Building on #179, we can address this by adding a parameter to the `RateLimit-Limit` header which specifies that the window starts on an edge determined by the Issuer, rather than Client activitiy.~\r\n\r\nLong overdue, but the RateLimit-Limit header doesn't seem right here since it's meant for something else. ",
          "createdAt": "2022-03-07T19:58:56Z",
          "updatedAt": "2022-06-13T19:30:53Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Next to `issuer-policy-window`, we could define a property like `issuer-policy-window-start`, which would include a UTC timestamp for when the policy windows all begin and must align to.",
          "createdAt": "2022-06-13T19:35:59Z",
          "updatedAt": "2022-06-13T19:35:59Z"
        }
      ]
    },
    {
      "number": 174,
      "id": "I_kwDOEwrMS85Elydp",
      "title": "Rate-Limited Tokens: Typos in version from Feb 18 2022",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/174",
      "state": "CLOSED",
      "author": "tlepoint",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens",
        "editorial"
      ],
      "body": "* Section 7.2, line 2 and step 3: it should be \u201cClient Key pk_sign\u201d instead of \u201cClient Key pk_blind\u201d\r\n* Section 6 has a step 4 which says \u201cConcatenate the values of aad, enc and ct,  yielding an Encapsulated Request enc_request\u201d\r\n    * This is the first and only mention of enc_request\r\n    * This does not match what is done in the pseudocode below. In particular, the aad is not concatenated (and is reconstructed by the issuer) and the result is not enc_request but encrypted_origin_name.\r\n* Section 5.4. The first two sentences from the second paragraph are about steps the attester would do before contacting the issuer. It seems that they should be included with the similar steps in the previous section instead.\r\n* The [KEYBLINDING] reference is broken.",
      "createdAt": "2022-02-25T18:59:49Z",
      "updatedAt": "2022-03-07T19:11:21Z",
      "closedAt": "2022-03-07T19:11:21Z",
      "comments": []
    },
    {
      "number": 182,
      "id": "I_kwDOEwrMS85FvmJc",
      "title": "Token limits should not be unique per-origin",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/182",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Issuers should ensure that the token limit returned is not unique to a single origin and thus leak that information to the attester.",
      "createdAt": "2022-03-15T19:31:16Z",
      "updatedAt": "2022-04-04T19:07:28Z",
      "closedAt": "2022-04-04T19:07:28Z",
      "comments": []
    },
    {
      "number": 183,
      "id": "I_kwDOEwrMS85GTZgq",
      "title": "Describe why basic issuance is insufficient for rate limiting",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/183",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "smhendrickson"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "One could imagine trying to implement rate limiting with the basic issuance protocol, e.g., by using an attester trusted by the origin  to issue a fixed amount of tokens per time period. However, in this model, the attester would necessarily learn the origin information, breaking per-client and per-server separation. We should add more text motivating the attester/issuer split, and the motivation for the current design.",
      "createdAt": "2022-03-24T13:05:40Z",
      "updatedAt": "2022-04-04T19:06:21Z",
      "closedAt": "2022-04-04T19:06:21Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@dvorak42 @smhendrickson suggested also adding informative references to W3C work",
          "createdAt": "2022-03-28T19:20:19Z",
          "updatedAt": "2022-03-28T19:20:19Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "Notes to self: We should directly point to the combined attestor-issuer model for cases that don't have these constraints.",
          "createdAt": "2022-03-28T19:42:23Z",
          "updatedAt": "2022-03-28T19:42:23Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Probably should be a paragraph in motivation section",
          "createdAt": "2022-03-28T19:43:30Z",
          "updatedAt": "2022-03-28T19:43:30Z"
        }
      ]
    },
    {
      "number": 184,
      "id": "I_kwDOEwrMS85GVfG-",
      "title": "Clarify that the Issuer needs to serve a sufficient number of Origins",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/184",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "From the list:\r\n\r\n>>  Are you assuming that the client enforces some limit on the number of distinct Issuers, as discussed in other Privacy Pass drafts?  If any origin operates its own private Issuer, the Attester ends up learning that the user visited that origin, violating the separation goal.  Do you intend to prevent this?\r\n> \r\n> Yes, a 1:1 relationship between Issuer and Origin would indeed violate the goal of separating information from the Attester. It still doesn\u2019t allow the Attester to know the origin state, but it does tell the Attester more about the origin identity than we\u2019d want.\r\n> \r\n> I think we don\u2019t clearly state a requirement that the Client and/or Attester need to collectively check that there are a sufficient number of origins served by each issuer (conversely, that there aren\u2019t too many issuers). As we\u2019re considering Attester deployments, it would be a requirement when onboarding an Issuer to ensure that there is a sufficient set of origins. We can open an issue to add this text.",
      "createdAt": "2022-03-24T20:46:53Z",
      "updatedAt": "2022-04-04T19:07:28Z",
      "closedAt": "2022-04-04T19:07:28Z",
      "comments": []
    },
    {
      "number": 185,
      "id": "I_kwDOEwrMS85GVfU2",
      "title": "Discuss post-compromise properties of Attester/Issuer/Origin",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/185",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "From the list:\r\n\r\n> I would also appreciate some thought on the post-compromise properties of this system, e.g. describing the downstream implications of a misbehavior of one of these parties.",
      "createdAt": "2022-03-24T20:47:57Z",
      "updatedAt": "2022-04-05T19:51:15Z",
      "closedAt": "2022-04-05T19:51:15Z",
      "comments": []
    },
    {
      "number": 187,
      "id": "I_kwDOEwrMS85Gwnma",
      "title": "Align origin name in rate-limited spec with origin info in auth scheme",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/187",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "We can now support multiple origin names in the origin info. The HPKE encrypted info in the rate-limited spec should be that origin info (the list), not the name.",
      "createdAt": "2022-03-30T23:29:09Z",
      "updatedAt": "2022-04-04T19:06:48Z",
      "closedAt": "2022-04-04T19:06:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Actually, the HPKE info should be just one origin name, selected from the list. This prevents fingerprinting based on the list given by the origin.",
          "createdAt": "2022-04-01T20:14:21Z",
          "updatedAt": "2022-04-01T20:14:21Z"
        }
      ]
    },
    {
      "number": 194,
      "id": "I_kwDOEwrMS85IlzfN",
      "title": "why mandate that geo hint is tied to an IP geolocation feed?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/194",
      "state": "OPEN",
      "author": "npdoty",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "If this is an optional and user-controlled geolocation hint, then I would expect that some clients would have access to course geolocation but not necessarily have an IP-geolocation database that they want to look up. Is it necessary to prohibit clients from taking what they know to be current approximate geolocation and adding it as a client hint?\r\n\r\nSimilarly, do we want the header name to include `IP`? We might move to IP address not being a good proxy for geolocation (indeed, this seems like part of that project), and it seems like the use cases are for the client to indicate course geolocation, not actually to indicate anything related to the Internet Protocol for more than historical reasons.",
      "createdAt": "2022-04-27T20:51:42Z",
      "updatedAt": "2022-06-13T19:30:34Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 195,
      "id": "I_kwDOEwrMS85Il2LE",
      "title": "geo hint \"city\" field is ambiguous",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/195",
      "state": "OPEN",
      "author": "npdoty",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "RFC 8805 didn't specify what `city` meant, except that it's a free form string. There is a hint that it's equivalent to RFC 4119's `A2` element, but that appears to be incorrect in practice. `A2` is described as \"county\" and the common examples don't seem to be at that administrative level (most that I can see are `city` or `city division`).\r\n\r\nIf IETF is going to publish new geolocation format standards, I would recommend working from geopriv, or providing a precise mapping (like the sample XML in RFC 8805) or at least pointing to other standards that are less ambiguous.\r\n\r\n",
      "createdAt": "2022-04-27T21:03:41Z",
      "updatedAt": "2022-06-21T20:33:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The point here would be to include literally what is in a Geo IP feed file, and align with that rather than sharing new information that would not be available from the IP address itself. To that end, I don't think it makes sense to change this to be divergent? It would be better to revise 8805?",
          "createdAt": "2022-06-21T20:33:12Z",
          "updatedAt": "2022-06-21T20:33:12Z"
        }
      ]
    },
    {
      "number": 196,
      "id": "I_kwDOEwrMS85Il8G3",
      "title": "geo hint missing privacy considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/196",
      "state": "OPEN",
      "author": "npdoty",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "What are the privacy implications of adding back geolocation information, particularly when an IP proxy has removed the ability to infer it? (This initial issue won't have nearly every question or consideration, but could be a starting point.)\r\n\r\nHonestly, it's been 18 years since an RFC was published on location privacy requirements ([rfc 3693](https://www.rfc-editor.org/rfc/rfc3693.html)); our privacy expectations and legal compliance regimes have since increased. \r\n\r\nDo we want to add sensitive information to HTTP headers without any description of limits on how that information can be used, or any enforceable policy statements from the requester about their compliance?\r\n\r\nWhat are the risks of inferring more precise geolocation by observing/linking multiple geo hint locations over time? See [rfc 6772](https://www.rfc-editor.org/rfc/rfc6772.html#section-13.5), for example.",
      "createdAt": "2022-04-27T21:32:46Z",
      "updatedAt": "2022-06-13T22:45:36Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 197,
      "id": "I_kwDOEwrMS85Il_wP",
      "title": "CONTRIBUTING.md has missing/broken link to mailing list",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/197",
      "state": "CLOSED",
      "author": "npdoty",
      "authorAssociation": "NONE",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Is there a mailing list for discussion of these work items, or is github issues the only/preferred venue?\r\n\r\nCONTRIBUTING.md has a link to the `hint` mailing list, but I think that just wasn't filled in.\r\n\r\nAnd if there's some way to get privacy issues labeled with `privacy-tracker` and picked up by the W3C apparatus, folks over at PING can more easily keep track of privacy issues and their status. Okay, I don't know if IETF groups are actually doing that, but just a thought.",
      "createdAt": "2022-04-27T21:50:57Z",
      "updatedAt": "2022-06-13T22:50:15Z",
      "closedAt": "2022-06-13T22:50:15Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Updated the links! Please check those out.",
          "createdAt": "2022-06-13T22:50:15Z",
          "updatedAt": "2022-06-13T22:50:15Z"
        }
      ]
    },
    {
      "number": 198,
      "id": "I_kwDOEwrMS85IpE7J",
      "title": "Rate-limited issuance request replay issue",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/198",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Ongoing work on analyzing this protocol found a potential issue with the current construction. Consider the following scenario:\r\n\r\n1. Client generates and sends a TokenRequest to the Attester.\r\n2. Attester validates the TokenRequest against the Client's long-term public key and forwards the TokenRequest to the Issuer.\r\n3. The attacker (or a malicious Attester) intercepts the forwarded TokenRequest, extracts TokenRequest.blinded_msg -- the blind signature message -- and constructs its own TokenRequest with a valid encrypted origin and signature, but replays TokenRequest.blinded_msg. \r\n4. The Issuer validates the request and returns a token response to the attacker.\r\n5. The attacker returns the response to the Attester, and the Attester returns the result to the Client after doing its rate limit check. \r\n\r\nIn essence, this means that an attacker can cause the Client to finish the issuance protocol with a token that was really issued under an origin that it did not choose, which is not a great property. This issue might arise a number of ways. The Attester<>Issuer channel might be compromised, or the Attester might be malicious (though the Attester is already assumed to be honest-but-curious here as it is responsible for enforcing rate limits, I don't think we want the properties of the issuance protocol to depend on the underlying channels used to send messages.) So I think this is something we ought to fix.\r\n\r\nFortunately, there's a couple ways we can address this (which were both proven to work). Briefly:\r\n\r\n1. Have the Issuer sign the token request and response transaction under a new-long term signing key.\r\n2. Encrypt the token request information with HPKE -- alongside the origin name -- to the Issuer, and have the Issuer encrypt and authenticate the response back to the Client under an HPKE-derived key. \r\n\r\nThe second option seems better, for a few reasons: (1) it can reuse established encap techniques from OHTTP and ODoH, (2) it ensures the attester really only learns what it needs to learn for the rate limiting enforcement (it doesn't need to see blind signature message in TokenRequest for that), and (3) it does not require any new long term key for the Issuer or signature verification on the Client. \r\n\r\nI'm going to prepare a PR for the second option, though I'd like to hear what folks think about this issue overall.",
      "createdAt": "2022-04-28T13:25:08Z",
      "updatedAt": "2022-05-16T17:43:13Z",
      "closedAt": "2022-05-16T17:43:12Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing since the PR landed.",
          "createdAt": "2022-05-16T17:43:12Z",
          "updatedAt": "2022-05-16T17:43:12Z"
        }
      ]
    },
    {
      "number": 201,
      "id": "I_kwDOEwrMS85I6Vk2",
      "title": "Meaning of Sec-Token-Request-Blind/Sec-Token-Request-Key dependent on parsing TokenRequest.",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/201",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The parsing of both `Sec-Token-Request-Blind` and `Sec-Token-Request-Key` are dependent on the token_type inside the client's TokenRequest, which has a slightly odd layering.",
      "createdAt": "2022-05-02T19:19:03Z",
      "updatedAt": "2022-06-13T19:29:48Z",
      "closedAt": "2022-06-13T19:29:48Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Right. I agree that this is odd to have a header that depends on the body\u00a0\u2014\u00a0however, in our discussion, I also brought up that the attester needs to look at the token type in the body first _anyway_, since that's how you know if you're doing the rate-limited version at all. The non-rate-limited types don't have extra headers at all. So, this may not be an issue in practice.",
          "createdAt": "2022-05-03T14:27:21Z",
          "updatedAt": "2022-05-03T14:27:21Z"
        }
      ]
    },
    {
      "number": 202,
      "id": "I_kwDOEwrMS85J3OeK",
      "title": "TokenRequest signature should include everything on the wire",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/202",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The signature is currently:\r\n\r\n```\r\nstruct {\r\n   uint16_t token_type = 0x0003;\r\n   uint8_t token_key_id;\r\n   uint8_t issuer_encap_key_id[32];\r\n   uint8_t encrypted_token_request<1..2^16-1>;\r\n   uint8_t request_signature[Nsig]; // signature over concat(token_type, token_key_id, issuer_encap_key_id, enc_token_req without length prefix)\r\n} TokenRequest;\r\n```\r\n\r\nBut we should do:\r\n\r\n```\r\nstruct {\r\n   uint16_t token_type = 0x0003;\r\n   uint8_t token_key_id;\r\n   uint8_t issuer_encap_key_id[32];\r\n   uint8_t encrypted_token_request<1..2^16-1>;\r\n   uint8_t request_signature[Nsig]; // sign everything above verbatim\r\n} TokenRequest;\r\n```\r\n\r\nIt's just good practice to sign everything and it costs us nothing to do so.",
      "createdAt": "2022-05-17T22:20:32Z",
      "updatedAt": "2022-05-24T18:35:39Z",
      "closedAt": "2022-05-24T18:35:39Z",
      "comments": []
    },
    {
      "number": 203,
      "id": "I_kwDOEwrMS85J3OrD",
      "title": "Describe what happens if origin limit changes",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/203",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "... and talk about how Attesters should deal with origin limit changes. Similar to the `CLIENT_KEY`, it's not unreasonable for this to change. ",
      "createdAt": "2022-05-17T22:21:50Z",
      "updatedAt": "2022-06-21T18:48:17Z",
      "closedAt": "2022-06-21T18:48:17Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "One good solution would be to limit this to have the Attester only allow the rate limit change once per policy window for a given anonymous origin \u2014\u00a0essentially once per bucket. The issuer should only change it per origin once per policy window.",
          "createdAt": "2022-05-23T18:02:19Z",
          "updatedAt": "2022-05-23T18:02:19Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "If an origin changes its limit, the attester may be able to recognize an origin being common across clients if they all change at the same time.\r\n\r\nWe should note this and suggest that you don't change the limit for a single origin, but change it for many at a time.\r\n\r\nThe origin could also move from one issuer name to another issuer name",
          "createdAt": "2022-05-23T19:14:36Z",
          "updatedAt": "2022-05-23T19:22:36Z"
        }
      ]
    },
    {
      "number": 206,
      "id": "I_kwDOEwrMS85MPV_C",
      "title": "Type 3 alignment for config dictionary",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/206",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Align with: https://github.com/ietf-wg-privacypass/base-drafts/pull/127",
      "createdAt": "2022-06-21T21:06:49Z",
      "updatedAt": "2022-06-22T14:21:53Z",
      "closedAt": "2022-06-22T14:21:53Z",
      "comments": []
    },
    {
      "number": 210,
      "id": "I_kwDOEwrMS85Mqrwf",
      "title": "Explain why OHTTP is not used for encapsulation",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/210",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "",
      "createdAt": "2022-06-27T19:37:22Z",
      "updatedAt": "2022-07-05T20:42:21Z",
      "closedAt": "2022-07-05T20:42:21Z",
      "comments": []
    },
    {
      "number": 211,
      "id": "I_kwDOEwrMS85MqsEV",
      "title": "Explain concerns around reusing Client Secret for two functionalities",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/211",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Using keys for multiple purposes is generally not good, but we don't have a better design as of now.",
      "createdAt": "2022-06-27T19:38:42Z",
      "updatedAt": "2022-07-05T20:42:21Z",
      "closedAt": "2022-07-05T20:42:21Z",
      "comments": []
    },
    {
      "number": 212,
      "id": "I_kwDOEwrMS85MqszU",
      "title": "Key consistency and correctness",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/212",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The way by which key consistency is enforced is rather nuanced, as it requires the attester to play an active role in the system. We should make this more clear, rather than hiding the details in the protocol description.",
      "createdAt": "2022-06-27T19:41:43Z",
      "updatedAt": "2022-07-05T22:12:22Z",
      "closedAt": "2022-07-05T22:12:22Z",
      "comments": []
    },
    {
      "number": 213,
      "id": "I_kwDOEwrMS85MqtAl",
      "title": "Moar pictures!",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/213",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "The protocol itself is complicated due to to (a) the _steps_ done by each participant and (b) the configuration that happens out-of-band, and we need a way to better describe this complexity so readers don't need to fully understand the protocol mechanics to grok what's happening.",
      "createdAt": "2022-06-27T19:42:38Z",
      "updatedAt": "2022-07-05T20:42:21Z",
      "closedAt": "2022-07-05T20:42:21Z",
      "comments": []
    },
    {
      "number": 217,
      "id": "I_kwDOEwrMS85Ns3HR",
      "title": "Rate-Limited Tokens: Exclusive Key Ownership",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/217",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "**Summary**: A client may be able to provide different public keys to the Attester and Issuer, resulting in an incorrect computation of the OPRF.\r\n\r\n**Details**:\r\n\r\nAccording to my best reading of the draft, the client generates a blinded key `request_key` and uses it to generate a signature on the encrypted token request.  The `request_key` is sent to the Issuer inside the encrypted `InnerTokenRequest`. Let me call this copy of the `request_key` _rk1_. The client also communicates this `request_key` and the corresponding `request_blind` to the Attester via a request header. Let me call this copy _rk2_. The Attester and Issuer both verify the signature on the encrypted token request; the Attester also verifies the correctness of `request_blind` with respect to _rk2_ and the client long-term public key. \r\n\r\nThe question I had: can the client specify a different `request_key` in the two places? If so, the OPRF computation will no longer be correct, which may allow you to get exceed the token rate limit. For this to work, you would need two different public keys such that the signature verifies correctly under both of them.\r\n\r\nPreventing such a construction is not a standard property of signature algorithms. The closest I could find was in this paper:\r\n\r\nThe Provable Security of Ed25519: Theory and Practice\r\nJacqueline Brendel, Cas Cremers, Dennis Jackson, and Mang Zhao\r\nhttps://eprint.iacr.org/2020/823 (also published at S&P 2021)\r\n\r\nThere they define a property called Malicious Strong Universal Exclusive Ownership (M-S-UEO) that says that the adversary cannot create two public keys _k, k'_ and two messages _m, m'_ such that Verify(m,k) = Verify(m,k') = True. This property is sufficient to prevent the above attack, though not strictly necessary, since in our case we also need for m = m'. \r\n\r\nThe paper proves that EdDSA is resilient to such attacks **only if** there is a check that avoids the small subgroup on Curve25519. Unfortunately, as the paper points out, RFC8032 does not specify such a check, though, e.g., libsodium implements it. Without the check, a small subgroup attack can be used for a relatively straightforward attack on M-S-UEO (as well as other key substitution attacks discussed in the paper). I have not checked whether this attack would work end-to-end in rate-limited tokens, but I suspect that subgroup confinement gives you a lot of attack freedom. \r\n\r\nThe other issue is that ECDSA is almost certainly not resilient to the kind of key substitution we are looking at here, since it doesn't bind the public key to the signature the way EdDSA does, and there are known key substitution attacks against DSA. Again, I have not checked whether an end-to-end attack would work, but I suspect it might. \r\n\r\n**Solution**:\r\n\r\nI think this attack can be addressed by making sure that the Attester and Issuer are using the same public key. A simple way to accomplish this would be to have the attester communicate its copy of `request_key` to the Issuer and then having the Issuer verify that the key inside the encrypted `InnerTokenRequest` matches the one from the Attester. A nice way to do this would be to include a cleartext `request_key` inside the `TokenRequest` structure and perhaps also including it in the signature.",
      "createdAt": "2022-07-13T15:30:00Z",
      "updatedAt": "2022-08-12T16:25:27Z",
      "closedAt": "2022-08-12T16:25:27Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @nikitaborisov! The simplest thing here seems to be to move `request_key` out of the envelope and authenticate it via HPKE. This would ensure that both attester and issuer see the same copy of the key. I'll confirm this works by updating the ProVerif model and then send a PR to make the change.",
          "createdAt": "2022-07-25T13:12:28Z",
          "updatedAt": "2022-07-25T13:12:28Z"
        }
      ]
    },
    {
      "number": 218,
      "id": "I_kwDOEwrMS85N23sU",
      "title": "Rate-Limited Tokens: origin binding of the blind signature",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/218",
      "state": "CLOSED",
      "author": "nikitaborisov",
      "authorAssociation": "NONE",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "What is preventing a client from going to one website while using the rate-limiting policy of another site? More specifically, suppose Alice visits foo.com and gets a challenge nonce from it. She then runs the issuance protocol, but specifies bar.com as the origin in the encrypted token request. As I understand it, as long as foo.com and bar.com both trust the same issuer, this would work because the origin only sees the (blind) signature from the issuer. \r\n\r\nAmong many potential problems resulting from this lack of binding is that bar.com may have a much higher rate limit than foo.com. \r\n\r\n@chris-wood suggests that perhaps a partially-blind signature could be used to fix this problem, where the issuer includes the origin as the public input to the partially-blind sig.",
      "createdAt": "2022-07-15T16:29:04Z",
      "updatedAt": "2022-08-12T16:25:26Z",
      "closedAt": "2022-08-12T16:25:26Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think there are multiple approaches possible here:\r\n\r\n1. Partially-blind signatures could allow the issuer to include the origin name info in the token back to the origin. That would work, but mainly relies on having a viable and efficient partially-blind signature scheme.\r\n2. Go back to an earlier design where the issuer has a per-origin token key. We would need to remove the key ID from what the attester sees, and the client would need to run a consistency check (double-check, etc). This is probably a more palatable change if we have a good key consistency story.",
          "createdAt": "2022-07-18T17:47:22Z",
          "updatedAt": "2022-07-18T17:47:22Z"
        },
        {
          "author": "nikitaborisov",
          "authorAssociation": "NONE",
          "body": "For key consistency, an origin could advertise the public key(s) it will accept along with the challenge, and the client can make sure the blind signature uses one of those keys. It won't help if the issuer and origin collude to track a client (and in some cases, the origin and issuer are the same entity), but you could imagine a separate key transparency solution that could be deployed in the future.",
          "createdAt": "2022-07-19T15:14:27Z",
          "updatedAt": "2022-07-19T15:14:27Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Right \u2014 and the origin does provide the public key in the auth scheme challenge, so the client will know that the blind signature uses one of those keys.",
          "createdAt": "2022-07-19T15:37:29Z",
          "updatedAt": "2022-07-19T15:37:29Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "As @tfpauly suggests, this seems like something we can mitigate with per-origin keys and an improved key consistency story. In particular, if we use per-origin keys, we need to remove the attester's role in enforcing key consistency for clients. There are approaches to do that, such as [the one described by @bemasc](https://datatracker.ietf.org/doc/draft-schwartz-ohai-consistency-doublecheck/).",
          "createdAt": "2022-07-25T13:15:25Z",
          "updatedAt": "2022-07-25T13:15:42Z"
        }
      ]
    },
    {
      "number": 219,
      "id": "I_kwDOEwrMS85N3AHP",
      "title": "Rate-Limited Tokens: Preventing attester from learning rate limit",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/219",
      "state": "CLOSED",
      "author": "rosulek",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "In the current proposal, the attester learns the rate limit specific to the origin. This reduces the anonymity set to origins that share a common rate. Below, I describe an idea that prevents the attester from learning this rate.\r\n\r\n## Simplified summary of current proposal:\r\n\r\n(as I understand it so far; for sake of comparison)\r\n\r\n1. client sends BlindSigReq to attester\r\n2. attester forwards BlindSigReq to issuer\r\n3. issuer responds with BlindSigResponse and the origin's RateLimit\r\n4. attester enforces RateLimit based on H(client,origin) pair\r\n5. if rate limit OK, attester forwards BlindSigResponse to client\r\n6. client unpacks to learn its desired blind signature token\r\n\r\n## Main idea\r\n\r\nThe main idea is to let the client request its entire quota of tokens in a single interaction, instead of requesting them one at a time. For this, I must make a distinction between an *interaction* and a *token*.\r\n\r\nLet's say that all rate limits are expressed in the units of `tokens / hour`. Then the attester will simply check that there is at most 1 interaction, per (client,origin) pair, per hour. The attester's check is the same for all origins (1 interaction per hour), regardless of their true rate limit. But each \"interaction\" results in the client learning many tokens. The issuer already knows the rate limit (expressed in tokens per hour) so it enforces the rate limit by only giving out the correct # of tokens in a single interaction.\r\n\r\n## Simplified summary of new proposal:\r\n\r\nFor the sake of simplicity, I will assume that both client and issuer know the origin's desired rate limit.\r\nI will extend the notation so that BlindSigReq(n) <--> BlindSigResponse(n) is a blind signature protocol where the client learns n distinct signatures.\r\n\r\n1. client sends BlindSigReq(RateLimit) to attester, where RateLimit is the origin's limit\r\n2. attester forwards BlindSigReq(RateLimit) to issuer\r\n3. issuer responds with BlindSigResponse(RateLimit)\r\n4. attester checks: was there a prior request on this (client,origin) pair in the last hour?\r\n5. if no such prior request, then attester forwards BlindSigResponse(RateLimit) to client\r\n6. client unpacks to learn RateLimit number of blind signature token\r\n\r\nIn order to hide the rate limit from the attester, the BlindSig{Req,Response} protocol messages must hide the rate limit. I'm not sure if there are blind signatures or [V]OPRFs where the client can get several distinct tokens, in a protocol messages of constant size. However, I have some hope because the client mostly cares about the *number* of tokens learned, and is less concerned about what message is being signed. I.e., the client could learn signatures on a collection of *random* messages.\r\n\r\nIf such a blind signature or OPRF is not possible/feasible, then a trivial way to hide the rate limit is to pad the size of the protocol message to some maximum limit. One could also consider leaking only partial information about the rate limit -- e.g., round the rate limit up to the nearest power of two and pad the protocol messages to that size. A downside to this simple padding strategy is that it is wasteful of bandwidth by design.",
      "createdAt": "2022-07-15T16:49:41Z",
      "updatedAt": "2022-09-01T16:28:31Z",
      "closedAt": "2022-09-01T16:28:31Z",
      "comments": []
    },
    {
      "number": 221,
      "id": "I_kwDOEwrMS85PY0-4",
      "title": "Align with latest draft-irtf-cfrg-signature-key-blinding changes",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/221",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "chris-wood"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "",
      "createdAt": "2022-08-08T13:52:01Z",
      "updatedAt": "2022-08-14T12:07:31Z",
      "closedAt": "2022-08-14T12:07:30Z",
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Fixed via #223.",
          "createdAt": "2022-08-14T12:07:30Z",
          "updatedAt": "2022-08-14T12:07:30Z"
        }
      ]
    },
    {
      "number": 222,
      "id": "I_kwDOEwrMS85PaaPu",
      "title": "Should the token key ID be only one bit?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/222",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "With #220, we have a 8-bit key ID that the issuer (but not attester) sees. We can consider moving this to be one bit only, to allow rotation while not having to worry about key targeting/consistency checks.",
      "createdAt": "2022-08-08T19:49:55Z",
      "updatedAt": "2022-09-01T16:28:24Z",
      "closedAt": "2022-09-01T16:28:24Z",
      "comments": []
    },
    {
      "number": 225,
      "id": "I_kwDOEwrMS85RfG3z",
      "title": "Rate-limit tokens has been adopted",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/225",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "At least according to https://github.com/ietf-wg-privacypass/draft-ietf-privacypass-rate-limit-tokens",
      "createdAt": "2022-09-09T00:01:38Z",
      "updatedAt": "2022-09-09T20:34:36Z",
      "closedAt": "2022-09-09T20:34:36Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, removing this version now",
          "createdAt": "2022-09-09T20:32:58Z",
          "updatedAt": "2022-09-09T20:32:58Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "https://github.com/tfpauly/privacy-proxy/commit/e063f3b80845f632d8f94a2e9c2d75cfc8b89ae6",
          "createdAt": "2022-09-09T20:34:36Z",
          "updatedAt": "2022-09-09T20:34:36Z"
        }
      ]
    },
    {
      "number": 226,
      "id": "I_kwDOEwrMS85Spx6l",
      "title": "Define escaping for CNAMEs",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/226",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "DNS Proxy Status"
      ],
      "body": "CNAMEs can include commas, so we should formally define escaping approaches, etc.",
      "createdAt": "2022-09-26T20:31:19Z",
      "updatedAt": "2022-10-04T17:44:16Z",
      "closedAt": "2022-10-04T17:44:16Z",
      "comments": []
    },
    {
      "number": 228,
      "id": "I_kwDOEwrMS85V8XrX",
      "title": "Change the proxy status to CNAME only?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/228",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "DNS Proxy Status"
      ],
      "body": "From MASQUE discussion at 115, it was suggested to put the IP address in the next-hop, and leave the new parameter as CNAME only.",
      "createdAt": "2022-11-09T11:05:17Z",
      "updatedAt": "2022-12-01T17:55:56Z",
      "closedAt": "2022-12-01T17:55:56Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This could be called `aliases` to be generic",
          "createdAt": "2022-11-09T11:42:32Z",
          "updatedAt": "2022-11-09T11:42:32Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "This is done now",
          "createdAt": "2022-12-01T17:55:56Z",
          "updatedAt": "2022-12-01T17:55:56Z"
        }
      ]
    },
    {
      "number": 229,
      "id": "I_kwDOEwrMS85Xt9GY",
      "title": "draft-pauly-httpbis-alias-proxy-status: do not include SVCB/HTTPS records",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/229",
      "state": "CLOSED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "DNS Proxy Status"
      ],
      "body": "Per draft-ietf-dnsop-svcb-https-11 section 3.2 clients MUST send the final TargetName\r\nto proxies:\r\nhttps://datatracker.ietf.org/doc/html/draft-ietf-dnsop-svcb-https-11#section-3.2\r\n\r\nProxies themselves shouldn't be doing SVCB/HTTPS RR lookups to get A/AAAA records.\r\nAs such, draft-pauly-httpbis-alias-proxy-status only needs to look at CNAME chains.\r\n\r\n(A question might be whether any special handling is needed for DNAME?  That might be its own issue.)",
      "createdAt": "2022-12-01T17:09:50Z",
      "updatedAt": "2022-12-09T17:25:25Z",
      "closedAt": "2022-12-09T17:25:25Z",
      "comments": []
    },
    {
      "number": 230,
      "id": "I_kwDOEwrMS85Xt-3T",
      "title": "draft-pauly-httpbis-alias-proxy-status: consider including rrset(s) for IP addresses",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/230",
      "state": "OPEN",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Future Version",
        "DNS Proxy Status"
      ],
      "body": "One of the use-cases for draft-pauly-httpbis-alias-proxy-status may be for influencing connection coalescing behaviors.  Since some clients use \"is the IP address that the proxy is connecting to overlapping with the rrset(s) used by other connections\" having the full IP address rrset lists for A and AAAA responses might be worthwhile.\r\n\r\nAt a minimum, we may want to allow listing all IP addresses tried before establishing the connection.  (eg, a TCP proxy might implement happy eyeballs and/or fail-over between multiple IP addresses.)  Knowing which others were tried but not used (when possible) might help for some of the abuse/use cases.\r\n\r\nOn the other hand, both of these might add unneeded complexity.",
      "createdAt": "2022-12-01T17:14:55Z",
      "updatedAt": "2022-12-01T18:01:24Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think this is something that should go to future work, personally \u2014\u00a0knowing the fuller set of RRs is something clients would need, but probably should have some client opt-in and negotiation for",
          "createdAt": "2022-12-01T18:01:18Z",
          "updatedAt": "2022-12-01T18:01:18Z"
        }
      ]
    },
    {
      "number": 232,
      "id": "I_kwDOEwrMS85adZLp",
      "title": "Next hop aliases percent-encoding",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/232",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Domain names can also contain `\"` and `%`, so I think the escaping rule has to be a bit more specific than just escaping commas, as indicated in the current text.",
      "createdAt": "2023-01-03T16:46:02Z",
      "updatedAt": "2023-01-04T20:59:58Z",
      "closedAt": "2023-01-04T20:59:58Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@bemasc would you mind moving your issues over the WG GitHub?\r\n\r\nhttps://github.com/httpwg/http-extensions/labels/alias-proxy-status",
          "createdAt": "2023-01-04T20:56:53Z",
          "updatedAt": "2023-01-04T20:56:53Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "body": "OK, moved to https://github.com/httpwg/http-extensions/issues/2357",
          "createdAt": "2023-01-04T20:59:58Z",
          "updatedAt": "2023-01-04T20:59:58Z"
        }
      ]
    },
    {
      "number": 234,
      "id": "I_kwDOEwrMS85adbD3",
      "title": "Aliases: Refer to AI_CANONNAME",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/234",
      "state": "CLOSED",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "DNS Proxy Status"
      ],
      "body": "I think the alias draft should probably have a (non-normative) reference to [getaddrinfo's AI_CANONNAME functionality](https://pubs.opengroup.org/onlinepubs/9699919799/functions/freeaddrinfo.html), in particular noting that:\r\n\r\n* `next-hop-aliases` can be populated from the output of `getaddrinfo`.\r\n* `next-hop-aliases` can be used to emulate or substitute for `getaddrinfo`.",
      "createdAt": "2023-01-03T16:53:03Z",
      "updatedAt": "2023-01-04T21:01:02Z",
      "closedAt": "2023-01-04T21:01:01Z",
      "comments": [
        {
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Moved to https://github.com/httpwg/http-extensions/issues/2358",
          "createdAt": "2023-01-04T21:01:01Z",
          "updatedAt": "2023-01-04T21:01:01Z"
        }
      ]
    },
    {
      "number": 235,
      "id": "I_kwDOEwrMS85mEwFj",
      "title": "Consider marking PvD support in HTTPS/SVCB records",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/235",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "We could add a flag in the HTTPS/SVCB record to indicate that a host has a PvD (presumably at .well-known/pvd?) that clients should look at",
      "createdAt": "2023-05-16T18:25:14Z",
      "updatedAt": "2023-05-16T18:25:14Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 237,
      "id": "I_kwDOEwrMS85xkzAQ",
      "title": "Restrict to only TLS-based HTTP proxies",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/237",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Don't allow discovering HTTP proxies where we use cleartext TCP to the proxy \u2014 just TLS to the proxy",
      "createdAt": "2023-09-20T17:53:50Z",
      "updatedAt": "2024-07-08T03:27:42Z",
      "closedAt": "2024-07-08T03:27:42Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Overtaken by events",
          "createdAt": "2024-07-08T03:27:42Z",
          "updatedAt": "2024-07-08T03:27:42Z"
        }
      ]
    },
    {
      "number": 238,
      "id": "I_kwDOEwrMS85xkzzf",
      "title": "Describe updating a known HTTP proxy to a secure HTTP proxy",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/238",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Similar to DDR, this is a way to have a known \"legacy\" HTTP proxy and learn that we can upgrade it to only use TLS to the proxy and use it for CONNECT",
      "createdAt": "2023-09-20T17:56:22Z",
      "updatedAt": "2024-10-19T03:10:24Z",
      "closedAt": "2024-10-19T03:10:24Z",
      "comments": []
    },
    {
      "number": 239,
      "id": "I_kwDOEwrMS85xk0H_",
      "title": "Restrict network-discovered proxies to cases where the device is already using an equivalent proxy",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/239",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "",
      "createdAt": "2023-09-20T17:57:21Z",
      "updatedAt": "2023-10-13T18:17:05Z",
      "closedAt": "2023-10-13T18:17:04Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The latest PR (https://github.com/tfpauly/privacy-proxy/pull/241) handles this in an initial pass",
          "createdAt": "2023-10-13T18:17:04Z",
          "updatedAt": "2023-10-13T18:17:04Z"
        }
      ]
    },
    {
      "number": 242,
      "id": "I_kwDOEwrMS852D8D9",
      "title": "Proxy PvD: list which HTTP versions the proxy supports",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/242",
      "state": "CLOSED",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Racing multiple HTTP versions to the proxy is quite inefficient. It would be easy to avoid that when we're already using Proxy PvDs. See full context [here](https://lists.w3.org/Archives/Public/ietf-http-wg/2023OctDec/0134.html).",
      "createdAt": "2023-11-07T07:43:38Z",
      "updatedAt": "2024-07-08T22:12:32Z",
      "closedAt": "2024-07-08T22:12:32Z",
      "comments": []
    },
    {
      "number": 243,
      "id": "I_kwDOEwrMS854gdMO",
      "title": "Proxy PvD: Add more explicit information about proxies, not just URLs",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/243",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Instead of a bare list of proxy URLs, we should expand to have more information about the proxies. The most obvious attribute here is the protocol supported (CONNECT-UDP, CONNECT-IP, etc), but this could also define what this is used for. At 118, MoQ using proxies was brought up.",
      "createdAt": "2023-12-02T00:43:26Z",
      "updatedAt": "2024-07-08T03:27:09Z",
      "closedAt": "2024-07-08T03:27:09Z",
      "comments": [
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "+1. It would also be useful to know which version of HTTP the proxy supports (in terms of the client-to-proxy HTTP connection).",
          "createdAt": "2023-12-04T23:56:14Z",
          "updatedAt": "2023-12-04T23:56:14Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Note that this issue isn't fully resolved by #244. We'd need to also add which underlying HTTP versions are supported by the proxy. One wrinkle that might make this more annoying is that the value might change per proxying protocol. For example, we have proxies that support proxy protocols `https-connect` and `connect-udp`, and that support underlying HTTP versions `HTTP/3` and `HTTP/2`, but such that `connect-udp` is only supported over h3 but not h2.",
          "createdAt": "2024-03-05T22:33:58Z",
          "updatedAt": "2024-03-05T22:33:58Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I think what's left here is all in #242 ",
          "createdAt": "2024-07-08T03:27:09Z",
          "updatedAt": "2024-07-08T03:27:09Z"
        }
      ]
    },
    {
      "number": 245,
      "id": "I_kwDOEwrMS86A_qZ5",
      "title": "Proxy PvD: Handle mandatory vs optional keys",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/245",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "For proxy sub dictionaries, we should consider having both optional and mandatory keys to allow backwards-compatibility while adding new keys",
      "createdAt": "2024-03-01T21:03:13Z",
      "updatedAt": "2024-07-08T22:12:32Z",
      "closedAt": "2024-07-08T22:12:32Z",
      "comments": []
    },
    {
      "number": 246,
      "id": "I_kwDOEwrMS86A_qv_",
      "title": "Proxy PvD: Define constraints on allowed JSON characters",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/246",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Consider defining constraints on JSON keys or values to use in the PvD sub dictionaries",
      "createdAt": "2024-03-01T21:04:11Z",
      "updatedAt": "2024-03-01T21:04:11Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 248,
      "id": "I_kwDOEwrMS86BdN8T",
      "title": "Proxy PvD: Add support for exclusion domains",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/248",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "",
      "createdAt": "2024-03-06T16:25:42Z",
      "updatedAt": "2024-07-08T22:12:32Z",
      "closedAt": "2024-07-08T22:12:32Z",
      "comments": []
    },
    {
      "number": 249,
      "id": "I_kwDOEwrMS86Ehmcj",
      "title": "Proxy PvDs: authentication",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/249",
      "state": "OPEN",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "It could be helpful to add the ability to convey what modes of authentication the proxy supports. I'd assume the actual auth secrets would be exchanged out of band but perhaps mentioning which auth mechanism to use would help.",
      "createdAt": "2024-04-03T16:37:33Z",
      "updatedAt": "2024-12-06T19:28:23Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "One option we could have is to, for HTTP types, include some hint of the Proxy-Authenticate challenge that would be sent \u2014 like, if you try to use this proxy you\u2019ll likely get this challenge (or even act like you got it and just send the auth from the beginning). That could be generic across types.\r\n",
          "createdAt": "2024-10-11T21:58:24Z",
          "updatedAt": "2024-10-11T21:58:24Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "I like that. It's extensible with support for things like realms and whatnot",
          "createdAt": "2024-10-12T00:23:30Z",
          "updatedAt": "2024-10-12T00:23:30Z"
        },
        {
          "author": "JamesTaft",
          "authorAssociation": "NONE",
          "body": "+1 on the auth hints.  It could save an entire connection that ends in a 407 for NTLM (gasp!) and Kerberos if the browsers use the hint.",
          "createdAt": "2024-12-06T19:19:44Z",
          "updatedAt": "2024-12-06T19:28:23Z"
        }
      ]
    },
    {
      "number": 252,
      "id": "I_kwDOEwrMS86PyBNP",
      "title": "Make sure example content-lengths are correct",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/252",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "",
      "createdAt": "2024-07-16T23:57:30Z",
      "updatedAt": "2024-07-16T23:57:31Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 253,
      "id": "I_kwDOEwrMS86QwUib",
      "title": "Handle match/exclude IP subnets",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/253",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "",
      "createdAt": "2024-07-24T22:44:04Z",
      "updatedAt": "2024-10-21T03:17:38Z",
      "closedAt": "2024-10-21T03:17:38Z",
      "comments": []
    },
    {
      "number": 254,
      "id": "I_kwDOEwrMS86QwVAH",
      "title": "Clarify that exclusions can be specified without any match domains",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/254",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "For cases where you want to include everything by default, except one name, we can just have excluded domains",
      "createdAt": "2024-07-24T22:46:06Z",
      "updatedAt": "2024-10-19T03:13:43Z",
      "closedAt": "2024-10-19T03:13:43Z",
      "comments": []
    },
    {
      "number": 255,
      "id": "I_kwDOEwrMS86QwVF0",
      "title": "Rethink names matchDomains / excludedDomains",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/255",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "match - exclude\r\nmatched - excluded\r\netc.",
      "createdAt": "2024-07-24T22:46:30Z",
      "updatedAt": "2024-10-21T02:53:01Z",
      "closedAt": "2024-10-21T02:53:01Z",
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Closed by #264",
          "createdAt": "2024-10-21T02:53:01Z",
          "updatedAt": "2024-10-21T02:53:01Z"
        }
      ]
    },
    {
      "number": 260,
      "id": "I_kwDOEwrMS86ZQOBz",
      "title": "Clarify that configuration learned from a PvD can only constrain on-device configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/260",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Clarify that configuration learned from a PvD can only constrain on-device configuration; if a device is only willing to proxy `example.com` traffic, a PvD can usefully constrain to only proxy `foo.example.com`, but cannot expand to also make clients proxy `bar.com`.",
      "createdAt": "2024-10-07T18:33:24Z",
      "updatedAt": "2024-10-21T03:18:54Z",
      "closedAt": "2024-10-21T03:18:53Z",
      "comments": [
        {
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "body": "The last paragraph of section 4. already explains this. I think we do not need more, or am I misunderstanding this issue?",
          "createdAt": "2024-10-18T21:15:29Z",
          "updatedAt": "2024-10-18T21:15:29Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Yes, you're right. I think this is OK to close.",
          "createdAt": "2024-10-21T03:18:53Z",
          "updatedAt": "2024-10-21T03:18:53Z"
        }
      ]
    },
    {
      "number": 262,
      "id": "I_kwDOEwrMS86aA0vO",
      "title": "Fallback configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/262",
      "state": "OPEN",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs",
        "Discuss"
      ],
      "body": "Result of proxy lookup in PAC files may include multiple proxies to fallback to aka `PROXY proxy1.example.com; PROXY proxy2.example.com` which instructs the client to try proxy1 first, fallback to proxy2 if that one is not available and does not allow direct communication with the destination if both proxies are down. Or it can tell client to go direct if proxies are not available aka `PROXY proxy1.example.com; PROXY proxy2.example.com; DIRECT`.\r\n\r\nPotentially proxy fallback can be achieved with PvD if multiple proxies are happy to take a given destination (though question of priorities is unclear), however it does not instruct client whether or not it may try direct communication.\r\n\r\nIt feels to me that this should be in scope so that PvD would be able to replace all reasonable use cases of PAC files.\r\n",
      "createdAt": "2024-10-13T11:39:25Z",
      "updatedAt": "2024-11-14T22:45:20Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "The PvD can certainly list out multiple proxies that are eligible to be used, but it doesn't directly give a priority order for which one to use with preference.\r\n\r\nWe could either leave it up to clients to decide which order to try, or have some flag or number indicating preference.\r\n\r\nSVCB records also do allow providing different services with priority, though... so if we are going via DNS, we can fail over that way.",
          "createdAt": "2024-10-14T18:03:17Z",
          "updatedAt": "2024-10-14T18:03:17Z"
        },
        {
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "body": "The PvD well-known url gives information about other related processes. The client can probably trust this source of information, as the proxy is preconfigured. \r\n\r\nIn case of getting PvD from a network, I think the client should decide, in any case, it should not trust the proxies, but should rather use this info to choose from pre-configured proxies. In this case, I think the decision should be made by the client.\r\n\r\nI know that this PAC feature is used, but I do not know how important is the order or if it is \"Here are 3 proxies use any that you succeed in connecting to\"",
          "createdAt": "2024-10-18T21:02:39Z",
          "updatedAt": "2024-10-18T21:02:39Z"
        },
        {
          "author": "joshco",
          "authorAssociation": "NONE",
          "body": "Could there be a key for \"default\" meaning \"if all else fails...\", which could have a value of either a proxy, or a token like \"DIRECT\"?",
          "createdAt": "2024-10-18T21:31:23Z",
          "updatedAt": "2024-10-18T21:31:23Z"
        },
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "There are multiple scenarios when enterprise wants to signal preferences to the client from the network:\r\n\r\n- Geographic proximity of proxies on a global network (suggest client to go to the closest one from network point of view for performance and content localisation)\r\n- Regulatory reasons (need to egress from a certain location and use backup option if everything else fails)\r\n- Load balancing across proxies (order of proxies is shuffled for clients)\r\n- Capabilities available on proxies\r\n- Test/pilot scenarios for a subset of users with a somewhat seamless way for them to fallback if the primary proxy fails or is no longer available\r\n\r\nIn my experience strict order of proxy preferences is widely relied on in enterprise setups.\r\n\r\nPerhaps worth discussing at IETF121.",
          "createdAt": "2024-10-21T09:59:10Z",
          "updatedAt": "2024-10-21T09:59:10Z"
        },
        {
          "author": "joshco",
          "authorAssociation": "NONE",
          "body": "Looks like our future is going to look like this:\r\n\r\n```\r\n{\r\n  \"proxies\": [\r\n    {\r\n      \"protocol\": \"http-connect\",\r\n      \"proxy\": \"proxy.example.org:80\",\r\n      \"priority\": 10\r\n    },\r\n    {\r\n      \"protocol\": \"connect-udp\",\r\n      \"proxy\": \"https://proxy.example.org/masque{?target_host,target_port}\",\r\n      \"priority\": 20\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nDevelopers will have to sort based on the priority key.",
          "createdAt": "2024-10-22T02:52:07Z",
          "updatedAt": "2024-10-22T02:52:07Z"
        },
        {
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "body": "Can't we rely on the fact that JSON lists are ordered, and just say that the proxies are listed in decreasing priority?",
          "createdAt": "2024-10-22T18:47:50Z",
          "updatedAt": "2024-10-22T18:47:50Z"
        },
        {
          "author": "joshco",
          "authorAssociation": "NONE",
          "body": "That's a good point. However, does it need to support round robin for load balancing?\n\nThat could be specified with priority keys with the same value. \n\nPerhaps the priority keys could be optional.  If absent then just use the array order.  In more complex cases the priority key can be used. \n\n",
          "createdAt": "2024-10-22T19:16:51Z",
          "updatedAt": "2024-10-22T19:16:51Z"
        },
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think for network provisioned proxy list it would make more sense to provide destination-centric proxy priority lists. Along the lines of:\r\n```\r\n{\r\n  \"proxies\": [\r\n    {\r\n      \"identifier\": \"legacy\",\r\n      \"protocol\": \"http-connect\",\r\n      \"proxy\": \"proxy.example.org:80\"\r\n    },\r\n    {\r\n      \"identifier\": \"masque\",\r\n      \"protocol\": \"connect-ip\",\r\n      \"proxy\": \"https://proxy.example.org/masque{?target_host,target_port}\"\r\n    }\r\n  ],\r\n  \"proxy_destinations\": [\r\n    {\r\n      \"matchPorts\": [80, 443],\r\n      \"proxies\": [\"legacy\", \"DIRECT\"]\r\n    },\r\n    {\r\n      \"matchDomains\": [\"*.internal\", \"*.intranet\"],\r\n      \"proxies\": [\"masque\", \"legacy\"]\r\n    }\r\n ]\r\n}\r\n```\r\n\r\nIt's not uncommon for enterprise PAC files to carry thousands of match items and duplicating them across multiple proxy definitions feels to be unnecessary bloat, makes processing more complex and whole structure more error-prone.\r\n\r\nTraditionally proxy load balancing with PAC files is accomplished with DNS round robin or separate sets of PAC files randomly distributed to clients.\r\nSome people also do hierarchical proxies for load balancing purpose...",
          "createdAt": "2024-10-23T10:24:06Z",
          "updatedAt": "2024-10-23T10:24:20Z"
        },
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Or use `null` instead of `\"DIRECT\"` to avoid error-prone reserved identifiers.",
          "createdAt": "2024-10-23T10:26:01Z",
          "updatedAt": "2024-10-23T10:26:01Z"
        },
        {
          "author": "joshco",
          "authorAssociation": "NONE",
          "body": "Am I getting this right?\r\nSo then \"proxy_destinations\" is a set of rules.  A rules engine will take a given URL and run it through the rules and get an identifier for a given proxy.  That's similar to a case statement or if/then else chain used in JS PAC.\r\n\r\nHowever, what about protocol?  who really decides which protocol should be used?  Is that decided based on the destination URL? Or is it the App/Browser, perhaps being hinted by the server.  ",
          "createdAt": "2024-10-24T21:51:47Z",
          "updatedAt": "2024-10-24T21:51:47Z"
        },
        {
          "author": "JamesTaft",
          "authorAssociation": "NONE",
          "body": "> Looks like our future is going to look like this:\r\n> \r\n> ```\r\n> {\r\n>   \"proxies\": [\r\n>     {\r\n>       \"protocol\": \"http-connect\",\r\n>       \"proxy\": \"proxy.example.org:80\",\r\n>       \"priority\": 10\r\n>     },\r\n>     {\r\n>       \"protocol\": \"connect-udp\",\r\n>       \"proxy\": \"https://proxy.example.org/masque{?target_host,target_port}\",\r\n>       \"priority\": 20\r\n>     }\r\n>   ]\r\n> }\r\n> ```\r\n> \r\n> Developers will have to sort based on the priority key.\r\n\r\nMay I add one more layer of complexity to this idea?  Many enterprises will use the client's IP to determine which group of proxies to prefer, then set fail over proxies if the primaries are unavailable. \r\n\r\nCould we add source subnets to the priority, giving a proxy config a higher priority if coming from those subnets, then a default priority for all other sources.  This would allow the client to know which to prefer based on location and still be able to create a fail over list.",
          "createdAt": "2024-11-12T16:13:26Z",
          "updatedAt": "2024-11-12T16:13:26Z"
        },
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think proxy-specific priority is too crude as priority might differ depending on the destination. Also it does not allow us to communicate possibility for client to do direct fallback.\r\nI plan to submit a PR by the end of this week describing my previous suggestion with list of proxies per destination group.\r\n\r\nI am not a big fan of encoding client IP restrictions in the PvD for a number of reasons:\r\n\r\n- Client could be behind NAT and does not know its IP\r\n- Client could have multiple interfaces some of which could have overlapping IPs\r\n- There are potential privacy and security risks associated with specific client IP hints\r\n\r\nIf client-specific configuration is needed, PvD contents should be provided depending on client IP from PvD hosting service perspective - similarly to how it is done today for PAC files. I'll submit a corresponding text in a PR to clarify this.",
          "createdAt": "2024-11-12T16:48:31Z",
          "updatedAt": "2024-11-12T16:48:48Z"
        },
        {
          "author": "JamesTaft",
          "authorAssociation": "NONE",
          "body": "Opened a new issue to discuss ClientIPs to stay on topic.  I agree on the priorities.\r\n\r\nHow about some kind of specific syntax to allow round-robin or load balancing if needed, like:\r\n\r\n\"proxies\": [\"proxy1\" OR \"proxy2\", \"proxy3\"]\r\nThe browser or OS should randomly choose one of the two before the comma in order to promote session reuse. If the chosen proxy is unavailable, the other is attempted before moving on to proxy3.\r\n\r\n\"proxies\": [\"proxy1\" AND \"proxy2\", \"proxy3\"]\r\nThe browser or OS should round robin between proxy1 and proxy2, use the remaining proxy if one is unavailable, then move to proxy3 if both are unavailable.",
          "createdAt": "2024-11-14T22:42:06Z",
          "updatedAt": "2024-11-14T22:45:20Z"
        }
      ]
    },
    {
      "number": 266,
      "id": "I_kwDOEwrMS86bCpSv",
      "title": "Do limited clients need special guidance?",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/266",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs",
        "Discuss"
      ],
      "body": "From #259, there was a section I wanted to not add immediately but discuss more first:\r\n\r\n> Note that clients with limited resources MAY not be able to process and utilize all\r\n>  entries of an excessively long list. In the case if the provided list is too long for a given\r\n>  client, it SHOULD process as many records from the beginning of `matchDomains`, `matchSubnets` and\r\n>  `matchPorts` lists. These lists SHOULD be sorted with the most important elements placed at\r\n>  the start of the list. If a client cannot consume all the entries in `excludedDomains` or\r\n>  `excludedIPs` it SHOULD NOT use given proxy configuration to avoid sending traffic that the proxy\r\n>  cannot process.",
      "createdAt": "2024-10-21T03:06:41Z",
      "updatedAt": "2024-10-21T03:17:51Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 267,
      "id": "I_kwDOEwrMS86c1Xav",
      "title": "IANA comments",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/267",
      "state": "OPEN",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "From IANA:\r\n\r\n> Because Sections 7.2 and 7.3 both point to Section 3, it would be helpful to identify the table numbers in addition to (or instead of) the section numbers.\r\n",
      "createdAt": "2024-11-03T14:16:38Z",
      "updatedAt": "2024-11-03T14:16:38Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 268,
      "id": "I_kwDOEwrMS86ej3-p",
      "title": "Proxy PvDs: Client IPs as a matching rule",
      "url": "https://github.com/tfpauly/privacy-proxy/issues/268",
      "state": "OPEN",
      "author": "JamesTaft",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "              I think proxy-specific priority is too crude as priority might differ depending on the destination. Also it does not allow us to communicate possibility for client to do direct fallback.\r\nI plan to submit a PR by the end of this week describing my previous suggestion with list of proxies per destination group.\r\n\r\nI am not a big fan of encoding client IP restrictions in the PvD for a number of reasons:\r\n\r\n- Client could be behind NAT and does not know its IP\r\n- Client could have multiple interfaces some of which could have overlapping IPs\r\n- There are potential privacy and security risks associated with specific client IP hints\r\n\r\nIf client-specific configuration is needed, PvD contents should be provided depending on client IP from PvD hosting service perspective - similarly to how it is done today for PAC files. I'll submit a corresponding text in a PR to clarify this.\r\n\r\n_Originally posted by @yaroslavros in https://github.com/tfpauly/privacy-proxy/issues/262#issuecomment-2471052000_\r\n            \r\nIn my experience, ClientIP is frequently used to direct specific types or locations of clients to their own set of proxies or incoming port. \r\nUse cases: \r\nUnauthenticated server traffic that uses a different proxy port and is assigned a very restrictive policy.  \r\nDirecting to the nearest proxy cluster based on known internal IP ranges.\r\n\r\nWhile I agree that this _should_ be handled by the PvD hosting service, it is still a deprecation of functionality. There is no guarantee their PvD hosting service has the ability or visibility to modify the PvD on a per client basis.  Some orgs use internal NATing to work around overlapping IP space, for example.\r\n\r\n\"matchClientIP\" could be added as a key.\r\n\r\nThe multi-interface IP issue already exists with PAC files so it's not a new complexity. It's actually an improvement because this isn't freeform javascript so the security concerns are lowered and more controllable by the OS/Browser.",
      "createdAt": "2024-11-14T22:19:56Z",
      "updatedAt": "2024-11-14T22:19:56Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 3,
      "id": "MDExOlB1bGxSZXF1ZXN0NTc2MDYxNDg5",
      "title": "Expand KeyID, and clarify its format.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/3",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #1 and #2.",
      "createdAt": "2021-02-18T23:18:30Z",
      "updatedAt": "2021-02-23T19:20:50Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e7ebedbd3c7a18189a95cde50eee85ceb9ce690a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/keyids",
      "headRefOid": "c92380c26f5a2e2426282a7e427d9a78d9daa335",
      "closedAt": "2021-02-23T19:20:50Z",
      "mergedAt": "2021-02-23T19:20:50Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0347212c78394d0e2f4bae48675f4e9cb899d862"
      },
      "comments": [
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "Random thought, if we require a hash function H for the blinding scheme, do we want to use that same hash function for the KeyID (eg. SHA384). ",
          "createdAt": "2021-02-19T15:32:04Z",
          "updatedAt": "2021-02-19T15:32:04Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Random thought, if we require a hash function H for the blinding scheme, do we want to use that same hash function for the KeyID (eg. SHA384).\r\n\r\nWe could, yeah. But we might just consider changing things entirely so that the server specifies the KeyID and there is no client computation at all. (This is the direction we're going for ECH.) This is just a hint for servers anyway, and they know whether or not they will have collisions. ",
          "createdAt": "2021-02-19T15:42:01Z",
          "updatedAt": "2021-02-19T15:42:01Z"
        },
        {
          "author": "plisiecki1",
          "authorAssociation": "NONE",
          "body": "8 or 16 bytes of hash should adequately reduce the odds of collisions to the extent that it should never happen. Letting the server pick the KeyID would also resolve the collision issue. There may be some (minor) convenience factor for servers to look up keys by a chosen KeyID (e.g., a counter) rather than a derived one (hash).\r\n\r\nRather than making Nk depend on the version, could the signature field for v1 be defined as the rest of the token?  Then no new version is needed for RSA2048 vs RSA4096 vs RSA8192, etc. As long as the client and proxy support the number of key bits, the signature can be encoded efficiently into a version 1 token.",
          "createdAt": "2021-02-19T18:01:18Z",
          "updatedAt": "2021-02-19T18:02:20Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> Rather than making Nk depend on the version, could the signature field for v1 be defined as the rest of the token? Then no new version is needed for RSA2048 vs RSA4096 vs RSA8192, etc. As long as the client and proxy support the number of key bits, the signature can be encoded efficiently into a version 1 token.\r\n\r\nPerhaps -- I'd need to think about this some more.",
          "createdAt": "2021-02-19T18:04:58Z",
          "updatedAt": "2021-02-19T18:04:58Z"
        },
        {
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "body": "@chris-wood : Do we just take a SHA-256 hash and not truncate it?",
          "createdAt": "2021-02-23T18:53:53Z",
          "updatedAt": "2021-02-23T18:53:53Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "> @chris-wood : Do we just take a SHA-256 hash and not truncate it?\r\n\r\nWhat's the rationale? This is just a hint. If security of the thing using this hint depends on lack of collision, that seems like a bigger problem. ",
          "createdAt": "2021-02-23T18:55:32Z",
          "updatedAt": "2021-02-23T18:55:32Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk2NzExMTk2",
          "commit": {
            "abbreviatedOid": "c92380c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-02-23T19:20:39Z",
          "updatedAt": "2021-02-23T19:20:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "MDExOlB1bGxSZXF1ZXN0NTg2NzU2Mjgx",
      "title": "Fix the RSA Blind Signature reference.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/5",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The usual reference format ({{I-D.foo.bar}}) doesn't work probably because the draft is still new. But this at least points folks to the right place.",
      "createdAt": "2021-03-08T13:05:18Z",
      "updatedAt": "2021-03-08T14:03:26Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0347212c78394d0e2f4bae48675f4e9cb899d862",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/fix-ref",
      "headRefOid": "6e45e5729058c577ce820e474c2d1d0028d49779",
      "closedAt": "2021-03-08T14:03:26Z",
      "mergedAt": "2021-03-08T14:03:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "455877dc692a66c6644bb8905b9e0a70756b9562"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA2MzEzNzMy",
          "commit": {
            "abbreviatedOid": "6e45e57"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-08T14:03:22Z",
          "updatedAt": "2021-03-08T14:03:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 6,
      "id": "MDExOlB1bGxSZXF1ZXN0NTk5MjQ3NTI0",
      "title": "Significant changes for Proxy DNS and SVCB request/response handling",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/6",
      "state": "MERGED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Significant changes and clarifications, renaming the existing headers and ending up with three headers:\r\n\r\n    * Proxy-DNS-Request\r\n    * Proxy-DNS-SVCB\r\n    * Proxy-DNS-Used\r\n   \r\nAlso specify client behavior to allow SVCB-optional clients to use proxies implementing these features while incorporating performance optimizations.",
      "createdAt": "2021-03-23T23:05:01Z",
      "updatedAt": "2021-03-30T16:44:58Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "455877dc692a66c6644bb8905b9e0a70756b9562",
      "headRepository": "enygren/privacy-proxy",
      "headRefName": "enygren-svcb-proxy",
      "headRefOid": "bc5a2804452b098be4b179ee3da7dfedb6b0ad7d",
      "closedAt": "2021-03-29T19:25:32Z",
      "mergedAt": "2021-03-29T19:25:32Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bc5a2804452b098be4b179ee3da7dfedb6b0ad7d"
      },
      "comments": [
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Note that the build is broken due to some markdown issues:  I haven't been able to get even the original to build on my machine for some reason.",
          "createdAt": "2021-03-23T23:29:13Z",
          "updatedAt": "2021-03-23T23:29:13Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I'm confused --- this doesn't seem to be showing up in  https://github.com/tfpauly/privacy-proxy/blob/main/draft-proxied-svcb-headers.md ?",
          "createdAt": "2021-03-30T16:35:34Z",
          "updatedAt": "2021-03-30T16:35:34Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Your other PR had commits from this PR, so GitHub probably got confused. You'll need to reopen this. :-(",
          "createdAt": "2021-03-30T16:44:58Z",
          "updatedAt": "2021-03-30T16:44:58Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjE5OTA2MTI5",
          "commit": {
            "abbreviatedOid": "6879d95"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T15:53:54Z",
          "updatedAt": "2021-03-24T16:21:19Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "To clear the TODO below, maybe just not specify the authority form here?\r\n\r\n```suggestion\r\nClients specify the target in their CONNECT* requests by including the name or\r\n```",
              "createdAt": "2021-03-24T15:53:55Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-03-24T15:54:09Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nIt is not always optimal for client that want to use SVCB to perform a separate\r\nDNS resolution prior to using a CONNECT* proxy, for a couple reasons:\r\n\r\n1. The extra DNS lookup incurs a performance penalty in delaying the client's\r\nconnection establishment, which might be wasted if there aren't any SVCB records present.\r\n\r\n2. If the client is using the proxy for providing additional privacy, performing\r\nDNS lookups not through the proxy might disclose the client's destination\r\nto an additional party.\r\n```",
              "createdAt": "2021-03-24T15:58:11Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 90,
              "body": "```suggestion\r\n1. Clients provide additional information in HTTP request header fields,\r\n   allowing the proxy to perform appropriate SVCB lookups alongside\r\n   its AAAA and A lookups.\r\n\r\n2. Proxies return HTTP response header fields specified in this\r\n   document while opportunistically establishing connections.\r\n\r\n3. Services with no SVCB records will be indicated as such\r\n   by the proxy, allowing clients can proceed with the opportunistically\r\n   established connection.  For services with SVCB records,\r\n   the proxy will provide enough information to allow clients\r\n   to decide whether they can proceed with using the connection\r\n   or whether the client needs to establish a new connection\r\n   through the proxy to the alternative endpoint specified\r\n   in a SVCB record.\r\n\r\n4. For subsequent CONNECT* requests, clients provide information\r\n   about the service name.  The proxy uses this to provide\r\n   refreshed SVCB records, and the proxy also continues to\r\n   provide additional information to the client about how\r\n   it established any given connection.\r\n```",
              "createdAt": "2021-03-24T15:59:03Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 106,
              "body": "What terms are you thinking of here? Proxy/target type terms, or SVCB-specific terms?",
              "createdAt": "2021-03-24T15:59:41Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 138,
              "body": "I'm a bit ambivalent here. I assume that the proxy can always append the \".\" when doing the lookup.",
              "createdAt": "2021-03-24T16:01:37Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 148,
              "body": "What's the unit here? Milliseconds?",
              "createdAt": "2021-03-24T16:03:29Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 168,
              "body": "Why `u`?",
              "createdAt": "2021-03-24T16:04:33Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 168,
              "body": "Ah, it's to get the Used response. Maybe call this out.",
              "createdAt": "2021-03-24T16:07:47Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 345,
              "body": "I don't think so? Closest I could find was https://tools.ietf.org/html/draft-main-ipaddr-text-rep-02\r\n",
              "createdAt": "2021-03-24T16:12:29Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 410,
              "body": "Not sure, I don't know if we'd use it on our client",
              "createdAt": "2021-03-24T16:15:01Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 415,
              "body": "Probably, yes... could that be added into this schema of types?",
              "createdAt": "2021-03-24T16:15:27Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 425,
              "body": "Hm, why wouldn't they be able to do this? This does seem a bit restrictive.",
              "createdAt": "2021-03-24T16:15:55Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 532,
              "body": "I certainly think clients should be free to use the information to determine coalescing policy, but I don't know if we need to detail it, or just can put a reference off to H2 text for that.",
              "createdAt": "2021-03-24T16:19:47Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            },
            {
              "originalPosition": 581,
              "body": "Do we need so many, I wonder? We could always just specify one good default to use.",
              "createdAt": "2021-03-24T16:21:09Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQxNTk1",
          "commit": {
            "abbreviatedOid": "6879d95"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:48:20Z",
          "updatedAt": "2021-03-24T17:48:20Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Perhaps we also add a Terminology section that gives names to a few of these things?  The \"connect target\" and \"connect target host\" are things we end up wanting to reference concretely in a bunch of places.",
              "createdAt": "2021-03-24T17:48:20Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQ2NjEx",
          "commit": {
            "abbreviatedOid": "95666dc"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:53:27Z",
          "updatedAt": "2021-03-24T17:53:28Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Something like \"connect target\" and \"connect target host\" seem like good ones to include as mentioned above.  Perhaps it is a short section that only has one or two items for now but references Section 1.4 of {{SVCB}} for more Terminology?",
              "createdAt": "2021-03-24T17:53:28Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQ4MDk4",
          "commit": {
            "abbreviatedOid": "95666dc"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:54:58Z",
          "updatedAt": "2021-03-24T17:54:59Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "I'm also ambivalent here.  We should pick one and specify, though.  Or specify that if the trailing \".\" is missing that the consumer should assume its presence and add it.  (The same applies for all of these containing DNS names.)",
              "createdAt": "2021-03-24T17:54:59Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQ4NTc5",
          "commit": {
            "abbreviatedOid": "95666dc"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:55:27Z",
          "updatedAt": "2021-03-24T17:55:28Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "```suggestion\r\n* wait: The maximum time in milliseconds the proxy should wait before responding to\r\n```",
              "createdAt": "2021-03-24T17:55:27Z",
              "updatedAt": "2021-03-24T17:55:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQ5MDg2",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:55:58Z",
          "updatedAt": "2021-03-24T17:55:58Z",
          "comments": [
            {
              "originalPosition": 148,
              "body": "Yes.  Added clarification.",
              "createdAt": "2021-03-24T17:55:58Z",
              "updatedAt": "2021-03-24T17:55:58Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDQ5Nzg0",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:56:36Z",
          "updatedAt": "2021-03-24T17:56:37Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "Should we just call it \"used\"?  (especially since it is boolean and default-true so not included most of the time?)",
              "createdAt": "2021-03-24T17:56:36Z",
              "updatedAt": "2021-03-24T17:56:37Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDU1Mzc3",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:59:05Z",
          "updatedAt": "2021-03-24T17:59:05Z",
          "comments": [
            {
              "originalPosition": 348,
              "body": "```suggestion\r\ndestination of the CONNECT* from the proxy.  If this is an IPv6\r\naddress, it MUST follow the canonical string form from {{!RFC5952}}.\r\nIf this is an IPv4 address, it MUST be in dotted octet form (four decimal\r\nvalues with no leading zeros separated by \".\").\r\n```",
              "createdAt": "2021-03-24T17:59:05Z",
              "updatedAt": "2021-03-24T17:59:05Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDU2NzI4",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T17:59:39Z",
          "updatedAt": "2021-03-24T17:59:40Z",
          "comments": [
            {
              "originalPosition": 345,
              "body": "Proposed some text above.  I couldn't find any either, and raising this \r\nto sunset4 doesn't seem like a good use of time.  ;)",
              "createdAt": "2021-03-24T17:59:39Z",
              "updatedAt": "2021-03-24T17:59:40Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMDU5MjY3",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T18:00:52Z",
          "updatedAt": "2021-03-24T18:00:52Z",
          "comments": [
            {
              "originalPosition": 415,
              "body": "Will need to think about this.  Perhaps we open an issue to think further on this after merging?",
              "createdAt": "2021-03-24T18:00:52Z",
              "updatedAt": "2021-03-24T18:00:52Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMTU1MTY4",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T19:28:01Z",
          "updatedAt": "2021-03-24T19:28:01Z",
          "comments": [
            {
              "originalPosition": 425,
              "body": "It's a topic for discussion.  Some reasons:\r\n- This does change proxy semantics in normative ways.  (ie, it is changing how the proxy is deciding on what to connect to).  There may be security risks/exposures here, for example.  \r\n- This could cause load-balancing issues as those may be smaller sets than A/AAAA and the TTLs may be longer.\r\nThis should probably get a first-class issue to discuss.  (I'm thinking a WG would also want to discuss this as a topic.)",
              "createdAt": "2021-03-24T19:28:01Z",
              "updatedAt": "2021-03-24T19:28:01Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMTU1OTYx",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T19:28:56Z",
          "updatedAt": "2021-03-24T19:28:57Z",
          "comments": [
            {
              "originalPosition": 532,
              "body": "Perhaps another issue-tracker item?  It's not core/critical here and we could drop or elaborate based on WG interest?",
              "createdAt": "2021-03-24T19:28:56Z",
              "updatedAt": "2021-03-24T19:28:57Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIwMTU3NTA3",
          "commit": {
            "abbreviatedOid": "8a35681"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-03-24T19:30:51Z",
          "updatedAt": "2021-03-24T19:30:51Z",
          "comments": [
            {
              "originalPosition": 581,
              "body": "Maybe just pick 2-3?  Some will depend on the performance of the proxy to various DNS authorities.  SVCB-required clients may also may want a much higher value here than SVCB-optional.  I'd be happy reducing this set but we may need concrete data to propose a set.",
              "createdAt": "2021-03-24T19:30:51Z",
              "updatedAt": "2021-03-24T19:30:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 7,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwOTA2NDk2",
      "title": "Support both rsa2048 and rsa4096",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/7",
      "state": "CLOSED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #1 \r\n\r\nUse version to differentiate (with v1=rsa4096 and v2=rsa2048).  There may be cleaner ways to address this,\r\nbut doing this retains wire compatibility with version 1.",
      "createdAt": "2021-03-25T16:56:51Z",
      "updatedAt": "2021-03-25T18:06:10Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "455877dc692a66c6644bb8905b9e0a70756b9562",
      "headRepository": "enygren/privacy-proxy",
      "headRefName": "patch-1",
      "headRefOid": "1b267f93167dae671d3665ce815ce2e08cec95ef",
      "closedAt": "2021-03-25T18:06:10Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@enygren I was chatting with @chris-wood , and we\u2019re thinking of just relaxing the version to not for the Nk length, actually. Do you see any issue with that? ",
          "createdAt": "2021-03-25T17:00:26Z",
          "updatedAt": "2021-03-25T17:00:26Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "So allowing Nk to be variable and the remainder of the token size for v1?  That would also be fine/better.",
          "createdAt": "2021-03-25T17:03:28Z",
          "updatedAt": "2021-03-25T17:03:28Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @enygren :-)",
          "createdAt": "2021-03-25T17:07:41Z",
          "updatedAt": "2021-03-25T17:07:41Z"
        },
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Abandoning in-favor of an alternate PR, coming shortly.",
          "createdAt": "2021-03-25T18:06:10Z",
          "updatedAt": "2021-03-25T18:06:10Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 8,
      "id": "MDExOlB1bGxSZXF1ZXN0NjAwOTUzMDU4",
      "title": "Support alternate key lengths",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/8",
      "state": "MERGED",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #1 \r\n\r\n",
      "createdAt": "2021-03-25T18:06:50Z",
      "updatedAt": "2021-03-29T19:25:30Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "455877dc692a66c6644bb8905b9e0a70756b9562",
      "headRepository": "enygren/privacy-proxy",
      "headRefName": "token-alt-len",
      "headRefOid": "716fad03fa41356b3bff6609f9b93294dee84da5",
      "closedAt": "2021-03-29T19:25:30Z",
      "mergedAt": "2021-03-29T19:25:30Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "a65ac3ce44b0accd61ac73bb23a55495bedb70f2"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Looks good!",
          "createdAt": "2021-03-28T20:36:27Z",
          "updatedAt": "2021-03-28T20:36:27Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjIzNTcyNzE2",
          "commit": {
            "abbreviatedOid": "716fad0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-03-29T19:25:21Z",
          "updatedAt": "2021-03-29T19:25:21Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "MDExOlB1bGxSZXF1ZXN0NjA0MjM5NzAz",
      "title": "Significant changes for Proxy DNS and SVCB request/response handling : try 2",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/9",
      "state": "OPEN",
      "author": "enygren",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-03-30T18:42:57Z",
      "updatedAt": "2022-12-18T23:24:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a65ac3ce44b0accd61ac73bb23a55495bedb70f2",
      "headRepository": "enygren/privacy-proxy",
      "headRefName": "enygren-svcb-proxy-pr3",
      "headRefOid": "b5d1935e6804df806dc386abbd7e794126d968b0",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Hopefully this should actually be able to be merged?",
          "createdAt": "2021-03-30T18:48:32Z",
          "updatedAt": "2021-03-30T18:48:32Z"
        },
        {
          "author": "Smithad499",
          "authorAssociation": "NONE",
          "body": "> \n\neaffef1522713c529e12b9f281470cba27768b23",
          "createdAt": "2022-12-18T23:23:37Z",
          "updatedAt": "2022-12-18T23:23:37Z"
        }
      ],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI1NjM0Njgx",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "MikeBishop",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "This is a good start, with mostly nits and comments on issues that can be deferred from this PR.\r\n\r\nI do feel like we don't have a good story (or perhaps merely a good example?) for cases which involve a mix of CNAMEs and AliasMode entries, though perhaps that's alleviated by the current design of telling the proxy not to consider SVCB records in performing the actual connection.",
          "createdAt": "2021-03-31T19:15:11Z",
          "updatedAt": "2021-03-31T20:52:01Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nfields for passing DNS metadata in HTTP responses.\r\n```",
              "createdAt": "2021-03-31T19:15:11Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nmight need to perform additional DNS resolutions prior to issuing a CONNECT* request, as clients\r\n```\r\nLet's at least make this conditional, since part of the point of this draft is not needing to do so.",
              "createdAt": "2021-03-31T19:35:36Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nIt is not always optimal for a client that wants to use SVCB to perform a separate\r\n```\r\nI probably would have said \"clients,\" but your numbered points below reference a singular client.",
              "createdAt": "2021-03-31T19:36:11Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 68,
              "body": "```suggestion\r\nDNS lookups without going through the proxy might disclose the client's destination\r\n```",
              "createdAt": "2021-03-31T19:37:38Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n\r\n3. If DNS responses vary based on the client's network location, DNS lookups performed by the\r\nclient might not be appropriate for a connection made via the proxy.\r\n\r\n```",
              "createdAt": "2021-03-31T19:38:58Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 83,
              "body": "```suggestion\r\n   by the proxy, allowing clients to proceed with the opportunistically\r\n```",
              "createdAt": "2021-03-31T19:39:58Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\n   through the proxy to an alternative endpoint specified\r\n```",
              "createdAt": "2021-03-31T19:40:31Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\n  to receive by specifying this parameter.  Its value MUST\r\n```",
              "createdAt": "2021-03-31T19:46:41Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 165,
              "body": "Hopefully covered in more detail later, but this doesn't specify behavior if it is present.  Does the proxy strip out other SVCB parameters, or does it return only SVCB entries that contain at least one of these parameters?",
              "createdAt": "2021-03-31T19:48:19Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 169,
              "body": "```suggestion\r\n  values.  This draft specifies version \"draft-01\".\r\n```\r\nAre you intending this to change automatically with draft versions, or increment manually when there's a breaking change?  If automatically, I suspect there are I-D Template ways to sub in the draft version during submission here.",
              "createdAt": "2021-03-31T19:49:54Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 171,
              "body": "Again, perhaps more detail later, but what does \"DNS information\" mean in this context?  Is this the CNAME chain?",
              "createdAt": "2021-03-31T19:51:19Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 269,
              "body": "```suggestion\r\n\r\nMultiple factors influence which records are returned in this header:\r\n```",
              "createdAt": "2021-03-31T19:55:21Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 295,
              "body": "I'm not sure these are the same thing.  How about simply....\r\n```suggestion\r\n  invalid record), the Proxy-SVCB-DNS header MUST NOT be returned.\r\n```",
              "createdAt": "2021-03-31T20:05:50Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 322,
              "body": "Given that the ellipsis is intended to represent longer content in the field, it might be better not to encode literal `...` in these binary examples.\r\n```suggestion\r\nproxy-dns-svcb = \"svc2.example.net.\";priority=1;ttl=1800;key1=:aDIsaDM=:;key5=:MTIz...:,\r\n                 \"svc.example.net.\";priority=2;ttl=1800;key1=:aDI=:;key5=:YWJj...:\r\n```",
              "createdAt": "2021-03-31T20:12:51Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 360,
              "body": "We might use `host` out of RFC 3986, since it specifies IPv4, IPv6, and hostname rendering. ",
              "createdAt": "2021-03-31T20:18:40Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 362,
              "body": "I understand the point, but I don't know that a hostname can be said to \"be\" a series of CNAMEs.  Perhaps...\r\n```suggestion\r\nIf the hostname provided by the client referred to one or more\r\nCNAMEs before resolving to an IP address,\r\n```",
              "createdAt": "2021-03-31T20:21:26Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 378,
              "body": "```suggestion\r\n  If this parameter is specified, its value MUST be an sf-string\r\n```",
              "createdAt": "2021-03-31T20:22:29Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 421,
              "body": "At first glance, it appears to be redundant. Is there a situation in which the owner is not simply the original hostname (for the first entry) or the preceding hostname (for subsequent entries)?\r\n\r\nHowever, if we want to be able to include additional information in the future, it might make sense to swap the format around; rather than including a list of CNAME(s) and/or IP(s) and giving an owner for each, list the owner first and an inner list of useful records for each.",
              "createdAt": "2021-03-31T20:28:19Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 430,
              "body": "I think this probably is too restrictive, especially in the case of SVCB-naive clients.  It means a high probability of the client having to open a new tunnel after processing the records, even though avoiding that is something this spec states as a goal.\r\n\r\nIt still seems reasonable for the proxy to chase AliasMode records, use hints, etc. to choose the target to connect to.  The flip side, I suppose, would be if the proxy chooses a host whose ALPN list doesn't reflect the client's support, but that could be solved by requiring the server to choose based on the transport protocol implied by the method, and then preferring the default ALPN within that.  Alternatively, the client could include an ALPN list in the request.\r\n\r\nHowever, it's also totally reasonable to save that for a separate PR if we decide to do it.",
              "createdAt": "2021-03-31T20:37:16Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 437,
              "body": "Given the problems of doing such a resolution noted above, how would they do that?  It might make more sense to say that a client which is SVCB-required must abandon the tunnel if it doesn't receive SVCB records from the proxy.",
              "createdAt": "2021-03-31T20:40:17Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 537,
              "body": "My vote is for removal.  Coalescing based on IP address is not a battle we've been winning, and I don't think this draft is the venue to continue fighting it.",
              "createdAt": "2021-03-31T20:47:32Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            },
            {
              "originalPosition": 558,
              "body": "HTTP-core is moving these registries and will likely be an RFC before this document.  Let's go ahead and point there.",
              "createdAt": "2021-03-31T20:48:56Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDYwNjk1",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:35:16Z",
          "updatedAt": "2021-04-05T18:35:17Z",
          "comments": [
            {
              "originalPosition": 165,
              "body": "Just strips out other parameters.  Is this not clear later?",
              "createdAt": "2021-04-05T18:35:17Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDYxNDUx",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:36:19Z",
          "updatedAt": "2021-04-05T18:36:19Z",
          "comments": [
            {
              "originalPosition": 169,
              "body": "Just when breaking changes.",
              "createdAt": "2021-04-05T18:36:19Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDYyNjE3",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:37:58Z",
          "updatedAt": "2021-04-05T18:37:58Z",
          "comments": [
            {
              "originalPosition": 295,
              "body": "In structured headers they are the same thing.  Would saying an empty sf-list be more clear?",
              "createdAt": "2021-04-05T18:37:58Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY0NDQy",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:40:37Z",
          "updatedAt": "2021-04-05T18:40:38Z",
          "comments": [
            {
              "originalPosition": 362,
              "body": "```suggestion\r\nIf the hostname connected to by the proxy aliased to one or more CNAMEs,\r\n```",
              "createdAt": "2021-04-05T18:40:37Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY0Nzk2",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:41:08Z",
          "updatedAt": "2021-04-05T18:41:08Z",
          "comments": [
            {
              "originalPosition": 362,
              "body": "(incorporating this but with \"aliased\" rather than \"referred\"",
              "createdAt": "2021-04-05T18:41:08Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY2MjA1",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:43:16Z",
          "updatedAt": "2021-04-05T18:43:16Z",
          "comments": [
            {
              "originalPosition": 421,
              "body": "The redundancy is why I'm include to leave it optional or just get rid of it.  It could be helpful for cases such as DNSSEC in the future, or perhaps if we include NS records or other things,",
              "createdAt": "2021-04-05T18:43:16Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY3NjE4",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:45:19Z",
          "updatedAt": "2021-04-05T18:45:19Z",
          "comments": [
            {
              "originalPosition": 430,
              "body": "Part of why I'm wary of this is that it changes the Proxy behavior and semantics substantially.  Rather than the proxy just returning additional information, here we start fundamentally changing behavior.  (Would doing this count as an \"Update\" to any of the RFCs defining CONNECT, for example?)",
              "createdAt": "2021-04-05T18:45:19Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY4NTk1",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:46:48Z",
          "updatedAt": "2021-04-05T18:46:48Z",
          "comments": [
            {
              "originalPosition": 437,
              "body": "They could do DoH through the proxy, for example.  Or use ODoH.  Or do something else.  We could mention this in security considerations, but it seems like an implementation detail we don't want to get into?  This is already covered in the core SVCB draft in some detail.",
              "createdAt": "2021-04-05T18:46:48Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY4OTU4",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:47:20Z",
          "updatedAt": "2021-04-05T18:47:21Z",
          "comments": [
            {
              "originalPosition": 537,
              "body": "```suggestion\r\n\r\n```",
              "createdAt": "2021-04-05T18:47:20Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY5ODIz",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:48:35Z",
          "updatedAt": "2021-04-05T18:48:36Z",
          "comments": [
            {
              "originalPosition": 556,
              "body": "```suggestion\r\n*TODO*: Move the registries below to the new HTTP-core registry.\r\n\r\nThis document registers the \"Proxy-DNS-Request\" and \"Proxy-DNS-SVCB\",\r\n```",
              "createdAt": "2021-04-05T18:48:35Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDY5OTk1",
          "commit": {
            "abbreviatedOid": "dc5ddd9"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:48:50Z",
          "updatedAt": "2021-04-05T18:48:51Z",
          "comments": [
            {
              "originalPosition": 558,
              "body": "Added a todo",
              "createdAt": "2021-04-05T18:48:50Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDc0MTg1",
          "commit": {
            "abbreviatedOid": "5cc3bbe"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:54:48Z",
          "updatedAt": "2021-04-05T18:54:49Z",
          "comments": [
            {
              "originalPosition": 604,
              "body": "```suggestion\r\n\r\n# Acknowledgments\r\n\r\nThank you to Mike Bishop, Chris Wood, and others for their feedback and suggestions on this draft.\r\n```",
              "createdAt": "2021-04-05T18:54:49Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDc0OTU5",
          "commit": {
            "abbreviatedOid": "3ab0b48"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:55:56Z",
          "updatedAt": "2021-04-05T18:55:57Z",
          "comments": [
            {
              "originalPosition": 609,
              "body": "```suggestion\r\nThank you to Mike Bishop, Chris Wood, \r\nand others for their feedback and suggestions on this draft.\r\n\r\n# Appendix: Additional Examples {#examples}\r\n\r\n```",
              "createdAt": "2021-04-05T18:55:56Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI4MDc2MzI4",
          "commit": {
            "abbreviatedOid": "3ab0b48"
          },
          "author": "enygren",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-04-05T18:57:52Z",
          "updatedAt": "2021-04-05T18:57:53Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "yes, A/AAAA/CNAME records\r\n```suggestion\r\n* u: Clients can indicate whether they want DNS information (A, AAAA,\r\n    and CNAME records) about\r\n```",
              "createdAt": "2021-04-05T18:57:52Z",
              "updatedAt": "2021-04-05T18:58:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85I1-tx",
          "commit": {
            "abbreviatedOid": "b5d1935"
          },
          "author": "Smithad499",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-18T23:24:20Z",
          "updatedAt": "2022-12-18T23:24:20Z",
          "comments": [
            {
              "originalPosition": 68,
              "body": "Great job.",
              "createdAt": "2022-12-18T23:24:20Z",
              "updatedAt": "2022-12-18T23:24:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85I1-um",
          "commit": {
            "abbreviatedOid": "b5d1935"
          },
          "author": "Smithad499",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-12-18T23:24:48Z",
          "updatedAt": "2022-12-18T23:24:48Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "It's DRE",
              "createdAt": "2022-12-18T23:24:48Z",
              "updatedAt": "2022-12-18T23:24:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 10,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE1OTkwOTE1",
      "title": "Shuffle things around, and add some color.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/10",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-19T14:31:47Z",
      "updatedAt": "2021-08-20T18:59:25Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "54c2061230d3c30bd60cab8f599b4a2e5eb6cfde",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/edits",
      "headRefOid": "698456c00aa04a6d0e2ce4382ae8a1d32d64ad53",
      "closedAt": "2021-08-20T18:59:25Z",
      "mergedAt": "2021-08-20T18:59:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0cdb0d7a4f1a9cdfcc2152dae59f45727c94ef0f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM1MzA4NTQx",
          "commit": {
            "abbreviatedOid": "698456c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-08-20T18:59:18Z",
          "updatedAt": "2021-08-20T18:59:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 11,
      "id": "MDExOlB1bGxSZXF1ZXN0NzE4MjY1MDUz",
      "title": "Add more derivation bits",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/11",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-08-23T22:27:38Z",
      "updatedAt": "2021-08-25T17:49:28Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0cdb0d7a4f1a9cdfcc2152dae59f45727c94ef0f",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/more-derivation",
      "headRefOid": "948050648acf798151bdf6e132c4f6c0eced76ee",
      "closedAt": "2021-08-25T17:49:27Z",
      "mergedAt": "2021-08-25T17:49:27Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8e494770ea8a2af4740d9f4be955f1ab9bf942be"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzM4NjYyNDEy",
          "commit": {
            "abbreviatedOid": "9480506"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-08-25T17:49:22Z",
          "updatedAt": "2021-08-25T17:49:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 12,
      "id": "MDExOlB1bGxSZXF1ZXN0NzIyOTE2MTA0",
      "title": "Add examples and more considerations.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/12",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Details about the trust model are perhaps next most important.",
      "createdAt": "2021-08-31T00:24:50Z",
      "updatedAt": "2021-09-02T15:43:19Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "8e494770ea8a2af4740d9f4be955f1ab9bf942be",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/examples-and-considerations",
      "headRefOid": "bf1a624206b3212841a7a9897f8e27d4fe5c824d",
      "closedAt": "2021-09-02T15:43:19Z",
      "mergedAt": "2021-09-02T15:43:19Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f5837325af4974b7f5250c3229f720e0d23f264c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ1MjM0Nzgw",
          "commit": {
            "abbreviatedOid": "bf1a624"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-02T15:43:15Z",
          "updatedAt": "2021-09-02T15:43:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 15,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI2OTk2OTgy",
      "title": "First read nits",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/15",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Larger feedback will come as issues",
      "createdAt": "2021-09-03T17:59:24Z",
      "updatedAt": "2021-09-07T16:05:58Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0563d03eb4318659ebd9a0185e95b6f40604dd5f",
      "headRepository": "smhendrickson/privacy-proxy",
      "headRefName": "patch-1",
      "headRefOid": "1b0be39523c12d293f03b14f5f753455658704b8",
      "closedAt": "2021-09-07T16:05:58Z",
      "mergedAt": "2021-09-07T16:05:58Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9c0e033fbe6e1ce30cfcc24833e4a121f10b11c8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2Mzg0Mjg1",
          "commit": {
            "abbreviatedOid": "a593286"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-03T18:37:21Z",
          "updatedAt": "2021-09-03T18:37:21Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2Mzg0NTI1",
          "commit": {
            "abbreviatedOid": "a593286"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-03T18:37:43Z",
          "updatedAt": "2021-09-03T18:37:44Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nClients MUST NOT change this value across token requests for the same origin. Doing so will result in token issuance\r\n```",
              "createdAt": "2021-09-03T18:37:44Z",
              "updatedAt": "2021-09-03T18:37:44Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ2Mzg0OTE0",
          "commit": {
            "abbreviatedOid": "a593286"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-03T18:38:22Z",
          "updatedAt": "2021-09-03T18:38:22Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nfailure by either mediator or issuer.\r\n```\r\n",
              "createdAt": "2021-09-03T18:38:22Z",
              "updatedAt": "2021-09-03T18:38:22Z"
            }
          ]
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ4MTU4NDUx",
          "commit": {
            "abbreviatedOid": "a593286"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-07T16:04:48Z",
          "updatedAt": "2021-09-07T16:04:48Z",
          "comments": []
        }
      ]
    },
    {
      "number": 17,
      "id": "MDExOlB1bGxSZXF1ZXN0NzI3MTM5MzE5",
      "title": "Split up 'client re-identification' into two use cases",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/17",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It felt like we were trying to express linkability and private authentication in a single case. This splits the cases into their own sections for clarity.",
      "createdAt": "2021-09-03T23:48:05Z",
      "updatedAt": "2021-09-07T16:16:03Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0563d03eb4318659ebd9a0185e95b6f40604dd5f",
      "headRepository": "smhendrickson/privacy-proxy",
      "headRefName": "patch-2",
      "headRefOid": "a795929051d1c2cf605dfcb9641b1d63eb9ca280",
      "closedAt": "2021-09-07T16:16:03Z",
      "mergedAt": "2021-09-07T16:16:03Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a4b7879dc05811add4ec33952ddcc2e2ecbc0cc1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ3OTc3OTk3",
          "commit": {
            "abbreviatedOid": "a795929"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-07T13:30:00Z",
          "updatedAt": "2021-09-07T13:30:00Z",
          "comments": []
        },
        {
          "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzQ4MTY5NDg2",
          "commit": {
            "abbreviatedOid": "a795929"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-07T16:15:50Z",
          "updatedAt": "2021-09-07T16:15:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 29,
      "id": "PR_kwDOEwrMS84ry6q3",
      "title": "Make PATs interactive.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/29",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #20, making interactive the only mode. ",
      "createdAt": "2021-09-15T17:19:33Z",
      "updatedAt": "2021-09-15T23:18:56Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a4b7879dc05811add4ec33952ddcc2e2ecbc0cc1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/interactive",
      "headRefOid": "a0b367c542e8656f509dc1c4e2a235090ca4e72d",
      "closedAt": "2021-09-15T23:18:55Z",
      "mergedAt": "2021-09-15T23:18:55Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "059be16f6be5fce0a5b8c086041ea56f9154643a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tButT",
          "commit": {
            "abbreviatedOid": "3c02770"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T17:26:04Z",
          "updatedAt": "2021-09-15T17:36:11Z",
          "comments": [
            {
              "originalPosition": 110,
              "body": "nit: \"current UNIX epoch time\" ",
              "createdAt": "2021-09-15T17:26:04Z",
              "updatedAt": "2021-09-15T17:36:11Z"
            },
            {
              "originalPosition": 65,
              "body": "Do we want to only have a purely interactive protocol?\r\n\r\nWhile interactivity does improve some of the security properties through immediate redemption binding, it still seems nice to have a non-interactive protocol to avoid high cost latency issues, or even requiring the mediator to have to store state for non-authenticated clients.",
              "createdAt": "2021-09-15T17:32:46Z",
              "updatedAt": "2021-09-15T17:36:11Z"
            },
            {
              "originalPosition": 129,
              "body": "How do the redeemers know what timestamp/redemption_nonce to verify against? There's the approach where you use the same connection to do the followup WWW-Authenticate, but that might take a while until the client does the issuance step, otherwise starting a new connection will need some redeemer state somehow.",
              "createdAt": "2021-09-15T17:35:33Z",
              "updatedAt": "2021-09-15T17:36:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tB3Ct",
          "commit": {
            "abbreviatedOid": "3c02770"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T18:00:37Z",
          "updatedAt": "2021-09-15T18:00:38Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I'm not sure the flexibility is warranted here, but maybe we could support both. ",
              "createdAt": "2021-09-15T18:00:38Z",
              "updatedAt": "2021-09-15T18:00:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tB3MH",
          "commit": {
            "abbreviatedOid": "3c02770"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T18:01:15Z",
          "updatedAt": "2021-09-15T18:01:16Z",
          "comments": [
            {
              "originalPosition": 129,
              "body": "Presumably it would be bound to the session, or clients could echo back the context when presenting a token?",
              "createdAt": "2021-09-15T18:01:16Z",
              "updatedAt": "2021-09-15T18:01:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCmIt",
          "commit": {
            "abbreviatedOid": "3c02770"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T21:52:27Z",
          "updatedAt": "2021-09-15T22:04:29Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I'm thinking that if we only do one, we should do the interactive/challenge mode.\r\n\r\nThe non-interactive mode is good for cases where the client can cache some tokens ahead of time. I am less clear on when the client would want to do that, but having the flexibility would be nice.",
              "createdAt": "2021-09-15T21:52:27Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 110,
              "body": "```suggestion\r\n: The current UNIX epoch time.\r\n```",
              "createdAt": "2021-09-15T21:52:58Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 65,
              "body": "The interactive mode mitigates the concerns around token replay, so it does greatly simplify things.",
              "createdAt": "2021-09-15T21:55:10Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 115,
              "body": "I'm not sure the context should be stuck in the \"realm\" variable. Can we have a new variable here? And we should likely clarify it needs to be a quoted base64 string.",
              "createdAt": "2021-09-15T22:00:16Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 124,
              "body": "```suggestion\r\nAuthorization: PrivacyToken token=abc\r\n```",
              "createdAt": "2021-09-15T22:00:59Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 129,
              "body": "With the interactive mode, I think it would need to be tied to the HTTP session, right?",
              "createdAt": "2021-09-15T22:02:15Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 89,
              "body": "Why is the policy window needed here?",
              "createdAt": "2021-09-15T22:02:34Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            },
            {
              "originalPosition": 90,
              "body": "If this is bound the origin, this may be redundant\u2014or we have it to ensure that the values match.",
              "createdAt": "2021-09-15T22:03:02Z",
              "updatedAt": "2021-09-15T22:04:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCpEG",
          "commit": {
            "abbreviatedOid": "3c02770"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:12:30Z",
          "updatedAt": "2021-09-15T22:15:29Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Yeah, agreed that the interactive one is cleaner/simpler. Maybe just have the interactive mode for now, and maybe add a note somewhere that a non-interactive construction is possible in case an infra/use-case warrants it?",
              "createdAt": "2021-09-15T22:12:31Z",
              "updatedAt": "2021-09-15T22:15:29Z"
            },
            {
              "originalPosition": 115,
              "body": "Maybe just call it \"challenge\" or \"context\". Though if the redemption origin is in the context, we don't need a separate realm?",
              "createdAt": "2021-09-15T22:13:30Z",
              "updatedAt": "2021-09-15T22:15:29Z"
            },
            {
              "originalPosition": 129,
              "body": "Yeah, I don't think the client could be echoing back, otherwise it would lie about the previous nonce (unless you have some sort of signed bit there).",
              "createdAt": "2021-09-15T22:15:23Z",
              "updatedAt": "2021-09-15T22:15:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCp50",
          "commit": {
            "abbreviatedOid": "b8e2efb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:18:56Z",
          "updatedAt": "2021-09-15T22:18:56Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "I'd like to copy this: https://www.rfc-editor.org/rfc/rfc7486.html#section-3",
              "createdAt": "2021-09-15T22:18:56Z",
              "updatedAt": "2021-09-15T22:18:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCqBc",
          "commit": {
            "abbreviatedOid": "b8e2efb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:19:51Z",
          "updatedAt": "2021-09-15T22:19:51Z",
          "comments": [
            {
              "originalPosition": 94,
              "body": "Call this a challenge, not a context?",
              "createdAt": "2021-09-15T22:19:51Z",
              "updatedAt": "2021-09-15T22:19:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCqlA",
          "commit": {
            "abbreviatedOid": "b8e2efb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:24:24Z",
          "updatedAt": "2021-09-15T22:24:24Z",
          "comments": [
            {
              "originalPosition": 89,
              "body": "Let's remove this from the challenge struct for now",
              "createdAt": "2021-09-15T22:24:24Z",
              "updatedAt": "2021-09-15T22:24:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCrQN",
          "commit": {
            "abbreviatedOid": "b8e2efb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:29:46Z",
          "updatedAt": "2021-09-15T22:29:46Z",
          "comments": [
            {
              "originalPosition": 93,
              "body": "I think we can remove the timestamp here, for simplicity",
              "createdAt": "2021-09-15T22:29:46Z",
              "updatedAt": "2021-09-15T22:29:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCrgD",
          "commit": {
            "abbreviatedOid": "b8e2efb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-15T22:31:42Z",
          "updatedAt": "2021-09-15T22:31:43Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Yeah, \"challenge\" is good!",
              "createdAt": "2021-09-15T22:31:43Z",
              "updatedAt": "2021-09-15T22:31:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tCxQl",
          "commit": {
            "abbreviatedOid": "a0b367c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-15T23:18:42Z",
          "updatedAt": "2021-09-15T23:18:42Z",
          "comments": []
        }
      ]
    },
    {
      "number": 30,
      "id": "PR_kwDOEwrMS84rzo-p",
      "title": "Update authors for Private Access Tokens.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/30",
      "state": "MERGED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #28.",
      "createdAt": "2021-09-15T22:10:33Z",
      "updatedAt": "2021-09-15T23:25:44Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a4b7879dc05811add4ec33952ddcc2e2ecbc0cc1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "update-authors",
      "headRefOid": "f35a5b90cbd1db17b1a084d2ef8e3deaa786cc2f",
      "closedAt": "2021-09-15T23:25:44Z",
      "mergedAt": "2021-09-15T23:25:44Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "d1353667ba32d084a22d0190e39a6010ce911cf9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tCx-V",
          "commit": {
            "abbreviatedOid": "f35a5b9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-15T23:25:33Z",
          "updatedAt": "2021-09-15T23:25:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 32,
      "id": "PR_kwDOEwrMS84r0FGK",
      "title": "Make the PrivateAccessToken format stand-alone",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/32",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #31",
      "createdAt": "2021-09-16T03:09:30Z",
      "updatedAt": "2021-09-16T17:59:44Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "d1353667ba32d084a22d0190e39a6010ce911cf9",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-2",
      "headRefOid": "ded853a717c271d9ceb800bf83f4693b4e02b7ae",
      "closedAt": "2021-09-16T17:59:44Z",
      "mergedAt": "2021-09-16T17:59:44Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f8e7a1dc47a4b5f395cdfa2c46d35536b0e16c0d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tExnu",
          "commit": {
            "abbreviatedOid": "001521f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-16T12:21:47Z",
          "updatedAt": "2021-09-16T12:22:55Z",
          "comments": [
            {
              "originalPosition": 62,
              "body": "```suggestion\r\nto the token challenge. The Token is a structure that begins with a\r\n```",
              "createdAt": "2021-09-16T12:21:47Z",
              "updatedAt": "2021-09-16T12:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tF6uM",
          "commit": {
            "abbreviatedOid": "ded853a"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-16T16:33:00Z",
          "updatedAt": "2021-09-16T16:33:00Z",
          "comments": []
        }
      ]
    },
    {
      "number": 38,
      "id": "PR_kwDOEwrMS84r6pO7",
      "title": "Clarify key discovery, remove OHTTP dependency",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/38",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #25\r\nCloses #33\r\nCloses #36\r\n\r\n- Use \"origin\" instead of \"redeemer\" for consistency\r\n- Send the public keys in the challenge\r\n- Validate the public keys on the mediator\r\n- Remove OHTTP dependency, use a key for encrypting the ORIGIN_NAME instead",
      "createdAt": "2021-09-18T03:15:43Z",
      "updatedAt": "2021-09-22T14:00:12Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "83fe7a982e4796d224a931e4e4a1b648d561076c",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/issuer-keys",
      "headRefOid": "5e4e4e5847e3171b3a3a1f662f7b481e7bb10cd7",
      "closedAt": "2021-09-21T19:54:29Z",
      "mergedAt": "2021-09-21T19:54:29Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1ed04b76f493c44dd0c7e532ab06ad30791e268a"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@smhendrickson @dvorak42 please check, I'll plan on merging tomorrow",
          "createdAt": "2021-09-21T03:32:55Z",
          "updatedAt": "2021-09-21T03:32:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tOLuZ",
          "commit": {
            "abbreviatedOid": "016c9fe"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-20T14:17:15Z",
          "updatedAt": "2021-09-20T14:17:15Z",
          "comments": [
            {
              "originalPosition": 305,
              "body": "I'm not sure if this is sufficient? Wouldn't the client be receiving keys immediately before the mediator checks the key against the issuer? (so the issuer can present key A to the client and for the next N minutes present key A to anyone who asks, before rotating to another key?)",
              "createdAt": "2021-09-20T14:17:15Z",
              "updatedAt": "2021-09-20T14:17:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tPPPL",
          "commit": {
            "abbreviatedOid": "016c9fe"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-20T18:33:11Z",
          "updatedAt": "2021-09-20T19:10:30Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "This is fine, but we haven't defined what an Origin tuple is yet. Maybe add an open issue for that?",
              "createdAt": "2021-09-20T18:33:11Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            },
            {
              "originalPosition": 161,
              "body": "```suggestion\r\n```",
              "createdAt": "2021-09-20T18:33:18Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            },
            {
              "originalPosition": 156,
              "body": "```suggestion\r\n- \"name-key\", which contains a base64url encoding of a `KeyConfig` as defined\r\nin {{!OHTTP=I-D.thomson-http-oblivious}} to use when encrypting the ORIGIN_NAME \r\nin issuance requests (ISSUER_NAME_KEY).\r\n```",
              "createdAt": "2021-09-20T18:34:33Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            },
            {
              "originalPosition": 156,
              "body": "Reusing the configuration format only, since that's not OHTTP-specific.",
              "createdAt": "2021-09-20T18:34:52Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            },
            {
              "originalPosition": 262,
              "body": "```suggestion\r\nThe Client then generates an HTTP POST request to send through the Mediator to\r\nthe Issuer, with the AccessTokenRequest as the body. The media type for this request\r\nis \"message/access-token-request\".  The Client includes the \"Token-Origin\" header in\r\nthis request, whose value is ENCRYPTED_ORIGIN_NAME as described in {{POINTER}};\r\nand the \"Anonymous-Origin-ID\" header, whose value is ANON_ORIGIN_ID. The Client sends \r\nthis request to the Mediator's proxy URI.  An example request is shown below, where Nk = 512.\r\n```\r\n\r\nHere's text for {#POINTER}:\r\n\r\nGiven a `KeyConfig` (ISSUER_TOKEN_KEY), Clients produce ENCRYPTED_ORIGIN_NAME \r\nusing the following values:\r\n\r\n- the key identifier from the configuration, keyID, with the corresponding KEM identified by kemID,\r\nthe public key from the configuration, pkR, and;\r\n- a selected combination of KDF, identified by kdfID, and AEAD, identified by aeadID.\r\n\r\nBeyond the key configuration inputs, Clients also require the AccessTokenRequest\r\n`token_request` and ANONYMOUS_ORIGIN_ID `anon_origin_id`. Together, these\r\nare used to encapsulate ORIGIN_NAME `origin_name` and produce \r\n`encrypted_origin` as follows:\r\n\r\n1. Compute an HPKE context using pkR, yielding context and encapsulation key enc.\r\n1. Construct associated data, aad, by concatenating the values of keyID, kemID, kdfID, aeadID, `token_request`, and `anon_origin_id`, as one 8-bit integer, three 16-bit integers, the AccessTokenRequest struct, and the value of ANONYMOUS_ORIGIN_ID, respectively, each in network byte order.\r\n1. Encrypt (seal) request with aad as associated data using context, yielding ciphertext ct.\r\n1. Concatenate the values of aad, enc, and ct, yielding an Encapsulated Request enc_request.\r\n\r\nNote that enc is of fixed-length, so there is no ambiguity in parsing this structure.\r\n\r\nIn pseudocode, this procedure is as follows:\r\n\r\n```\r\nenc, context = SetupBaseS(pkR, \"OriginTokenRequest\")\r\naad = concat(encode(1, keyID),\r\n             encode(2, kemID),\r\n             encode(2, kdfID),\r\n             encode(2, aeadID),\r\n             encode(len(token_request), token_request),\r\n             encode(32, anon_origin_id))\r\nct = context.Seal(aad, origin_name)\r\nencrypted_origin = concat(aad, enc, ct)\r\n```\r\n\r\nENCRYPTED_ORIGIN_NAME is then set to `encrypted_origin`.",
              "createdAt": "2021-09-20T18:52:30Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            },
            {
              "originalPosition": 262,
              "body": "This binds the encryption to the token request and ANON_ORIGIN_ID.",
              "createdAt": "2021-09-20T18:53:09Z",
              "updatedAt": "2021-09-20T19:10:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tPciw",
          "commit": {
            "abbreviatedOid": "016c9fe"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-20T19:37:20Z",
          "updatedAt": "2021-09-20T19:37:20Z",
          "comments": [
            {
              "originalPosition": 124,
              "body": "Need to add a version field here",
              "createdAt": "2021-09-20T19:37:20Z",
              "updatedAt": "2021-09-20T19:37:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZPV",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:30:55Z",
          "updatedAt": "2021-09-21T03:30:55Z",
          "comments": [
            {
              "originalPosition": 305,
              "body": "Added some text at the end of the paragraph to address this",
              "createdAt": "2021-09-21T03:30:55Z",
              "updatedAt": "2021-09-21T03:30:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZRY",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:31:20Z",
          "updatedAt": "2021-09-21T03:31:20Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "Fixed this by adding more detail",
              "createdAt": "2021-09-21T03:31:20Z",
              "updatedAt": "2021-09-21T03:31:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZSt",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:31:38Z",
          "updatedAt": "2021-09-21T03:31:38Z",
          "comments": [
            {
              "originalPosition": 161,
              "body": "Removed =)",
              "createdAt": "2021-09-21T03:31:38Z",
              "updatedAt": "2021-09-21T03:31:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZTs",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:31:51Z",
          "updatedAt": "2021-09-21T03:31:51Z",
          "comments": [
            {
              "originalPosition": 156,
              "body": "Applied",
              "createdAt": "2021-09-21T03:31:51Z",
              "updatedAt": "2021-09-21T03:31:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZUw",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:32:03Z",
          "updatedAt": "2021-09-21T03:32:03Z",
          "comments": [
            {
              "originalPosition": 262,
              "body": "Applied. Thank you so much!",
              "createdAt": "2021-09-21T03:32:03Z",
              "updatedAt": "2021-09-21T03:32:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tQZVa",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T03:32:11Z",
          "updatedAt": "2021-09-21T03:32:11Z",
          "comments": [
            {
              "originalPosition": 124,
              "body": "Added version.",
              "createdAt": "2021-09-21T03:32:11Z",
              "updatedAt": "2021-09-21T03:32:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tSTMy",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-21T13:45:36Z",
          "updatedAt": "2021-09-21T13:55:21Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Maybe somewhere we should toss some wording that consumers should not attempt to parse unknown versions, to try avoiding people just ignoring the version, trying to parse everything else and exploding (*cough* TLS *cough*).",
              "createdAt": "2021-09-21T13:45:36Z",
              "updatedAt": "2021-09-21T13:55:21Z"
            },
            {
              "originalPosition": 67,
              "body": "nit: for each pair",
              "createdAt": "2021-09-21T13:46:54Z",
              "updatedAt": "2021-09-21T13:55:21Z"
            },
            {
              "originalPosition": 127,
              "body": "Does this need a prefix?",
              "createdAt": "2021-09-21T13:53:33Z",
              "updatedAt": "2021-09-21T13:55:21Z"
            },
            {
              "originalPosition": 127,
              "body": "nevermind, I guess the SetupBaseS info is sufficient",
              "createdAt": "2021-09-21T13:54:49Z",
              "updatedAt": "2021-09-21T13:55:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tTUdn",
          "commit": {
            "abbreviatedOid": "84c6b16"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T17:17:04Z",
          "updatedAt": "2021-09-21T17:21:10Z",
          "comments": [
            {
              "originalPosition": 383,
              "body": "Should this instead just check for the unique tuple of {ANON_CLIENT_ID, ORIGIN_NAME}? A collision is highly unlikely, but I think this makes the case less confusing.",
              "createdAt": "2021-09-21T17:17:04Z",
              "updatedAt": "2021-09-21T17:21:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tT3mR",
          "commit": {
            "abbreviatedOid": "daff460"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T19:45:12Z",
          "updatedAt": "2021-09-21T19:45:12Z",
          "comments": [
            {
              "originalPosition": 383,
              "body": "The point here is that the ANON_CLIENT_ID really MUST only be used for a single ORIGIN_NAME, otherwise the mediator calculated it incorrectly. So I think this requirement is correct?",
              "createdAt": "2021-09-21T19:45:12Z",
              "updatedAt": "2021-09-21T19:45:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tT3ta",
          "commit": {
            "abbreviatedOid": "5e4e4e5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T19:45:42Z",
          "updatedAt": "2021-09-21T19:45:43Z",
          "comments": [
            {
              "originalPosition": 67,
              "body": "Fixed!",
              "createdAt": "2021-09-21T19:45:43Z",
              "updatedAt": "2021-09-21T19:45:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tT3z2",
          "commit": {
            "abbreviatedOid": "5e4e4e5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-21T19:46:11Z",
          "updatedAt": "2021-09-21T19:46:12Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Good call. I've added text in all of the places that use version to explain how it is verified and must gate parsing/usage.",
              "createdAt": "2021-09-21T19:46:11Z",
              "updatedAt": "2021-09-21T19:46:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tUzbL",
          "commit": {
            "abbreviatedOid": "5e4e4e5"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks, @tfpauly! Apologies for the late review, but LGTM overall, with one minor nit. I will do a full read through again of the mechanism to ensure that it sits well.",
          "createdAt": "2021-09-22T03:49:53Z",
          "updatedAt": "2021-09-22T04:05:11Z",
          "comments": [
            {
              "originalPosition": 338,
              "body": "I would add this to Security Considerations section, with some general notion of what a Mediator could do. Noting the problem is useful, and it's even more useful if an outline of a solution is present.",
              "createdAt": "2021-09-22T03:49:53Z",
              "updatedAt": "2021-09-22T04:05:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tW0uL",
          "commit": {
            "abbreviatedOid": "5e4e4e5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-22T14:00:11Z",
          "updatedAt": "2021-09-22T14:00:12Z",
          "comments": [
            {
              "originalPosition": 338,
              "body": "Agreed! Filed #44.",
              "createdAt": "2021-09-22T14:00:12Z",
              "updatedAt": "2021-09-22T14:00:12Z"
            }
          ]
        }
      ]
    },
    {
      "number": 39,
      "id": "PR_kwDOEwrMS84r6qP5",
      "title": "First pass through Intro and Overview sections",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/39",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I've not restructured much yet, but did an editorial pass of the Intro and Overview sections.\r\n\r\nNext, I intend to:\r\n- move a version of the Use Cases Section up to after the Intro Section.\r\n- add a picture to the Overview Section describing this architecture. I might try to break out the Overview into a Functional Overview and a Protocol Overview.\r\n\r\nWe should consider a name for the architecture. It's all about Private Address Tokens, but that's not the architecture or the protocol name.",
      "createdAt": "2021-09-18T03:20:21Z",
      "updatedAt": "2021-09-22T01:46:23Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "1ed04b76f493c44dd0c7e532ab06ad30791e268a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/start-edits",
      "headRefOid": "4478a267224dedb5d757065ad6ebcd67cab1378b",
      "closedAt": "2021-09-22T01:46:23Z",
      "mergedAt": "2021-09-22T01:46:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "53c4ee5c95a32eac0466159204fdd40d8e67b3fa"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Thank you!\r\n\r\nTo note, I've moved from Redeemer to be consistent with Origin in #38, so we'll need to deconflict the branches at some point.",
          "createdAt": "2021-09-18T05:08:14Z",
          "updatedAt": "2021-09-18T05:08:14Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tUIy1",
          "commit": {
            "abbreviatedOid": "e709085"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-21T21:06:18Z",
          "updatedAt": "2021-09-21T21:10:37Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\r\naccess services and content, since without a stable and unique identifier, servers might\r\n```",
              "createdAt": "2021-09-21T21:06:18Z",
              "updatedAt": "2021-09-21T21:10:37Z"
            },
            {
              "originalPosition": 48,
              "body": "Using a proxy service doesn't necessarily mean that the identifier is unstable. It could be stable, just shared amongst many others. (Hence my suggestion to add \"and unique\")",
              "createdAt": "2021-09-21T21:06:50Z",
              "updatedAt": "2021-09-21T21:10:37Z"
            },
            {
              "originalPosition": 56,
              "body": "We should add an issue to describe the relation to Privacy Pass, since, at this point, people might ask \"why not use Privacy Pass?!\"",
              "createdAt": "2021-09-21T21:07:44Z",
              "updatedAt": "2021-09-21T21:10:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tURup",
          "commit": {
            "abbreviatedOid": "e709085"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-21T21:58:30Z",
          "updatedAt": "2021-09-21T21:59:31Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nusing a proxy service or a VPN. However, doing so severely limits the client's ability to\r\n```",
              "createdAt": "2021-09-21T21:58:30Z",
              "updatedAt": "2021-09-21T21:59:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tUoNr",
          "commit": {
            "abbreviatedOid": "e709085"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-22T01:39:23Z",
          "updatedAt": "2021-09-22T01:39:23Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Filed https://github.com/tfpauly/privacy-proxy/issues/41.",
              "createdAt": "2021-09-22T01:39:23Z",
              "updatedAt": "2021-09-22T01:39:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 40,
      "id": "PR_kwDOEwrMS84r-pMy",
      "title": "Add single issuer-mediator considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/40",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Feels a bit wordy. @dvorak42, is there a specific link for the privacy promises of privacy pass?\r\n\r\nShould we just use https://datatracker.ietf.org/doc/draft-ietf-privacypass-protocol/ ?",
      "createdAt": "2021-09-20T18:53:53Z",
      "updatedAt": "2021-09-20T19:40:38Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "83fe7a982e4796d224a931e4e4a1b648d561076c",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "smhendrickson-patch-1",
      "headRefOid": "fc5c6bc191b3348b61cab9348c6f8f92774828ba",
      "closedAt": "2021-09-20T19:40:38Z",
      "mergedAt": "2021-09-20T19:40:38Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "422ba7d451aa41202eb19c8b701af732f696981c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tPWBQ",
          "commit": {
            "abbreviatedOid": "f923313"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-20T19:04:31Z",
          "updatedAt": "2021-09-20T19:04:31Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIssuers and Mediators should be run by mutually distinct organizations to limit\r\n```",
              "createdAt": "2021-09-20T19:04:31Z",
              "updatedAt": "2021-09-20T19:04:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tPZO8",
          "commit": {
            "abbreviatedOid": "fc5c6bc"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-20T19:20:25Z",
          "updatedAt": "2021-09-20T19:20:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 42,
      "id": "PR_kwDOEwrMS84sG4qN",
      "title": "Add motivating use cases",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/42",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-22T03:41:43Z",
      "updatedAt": "2021-09-27T21:22:15Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "53c4ee5c95a32eac0466159204fdd40d8e67b3fa",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/motivation",
      "headRefOid": "fbc62816d92e3b270cd7cbc083cd43538beead09",
      "closedAt": "2021-09-23T18:31:15Z",
      "mergedAt": "2021-09-23T18:31:15Z",
      "mergedBy": "janaiyengar",
      "mergeCommit": {
        "oid": "27f55579b649e83b444df61fa52a17bd74515a8a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tW4Rg",
          "commit": {
            "abbreviatedOid": "28fb056"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-22T14:10:41Z",
          "updatedAt": "2021-09-22T14:10:41Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "We were discussing this case a bit with @dvorak42 and @smhendrickson; as long as Issuers are willing to maintain a key per geo (as we do in Private Relay), this only needs to change the mechanism by having a new property that the Mediator can check from the Issuer to understand the geo-policy to enforce per key.\r\n\r\nThere was a discussion of if this should a mechanism that's described in this document, or a small extension document that focuses on the geolocation use case specifically. Thoughts?",
              "createdAt": "2021-09-22T14:10:41Z",
              "updatedAt": "2021-09-22T14:10:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tXTSI",
          "commit": {
            "abbreviatedOid": "28fb056"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "These use cases are very clearly written -- nice! I wonder if we should de-dupe the now redundant text in the example policy section?",
          "createdAt": "2021-09-22T15:31:55Z",
          "updatedAt": "2021-09-22T15:32:44Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nuse a stable and unique client identifier for enforcing attribute-based policy. Hiding these\r\n```\r\n\r\nAttributes are listed below in the use cases and include geo/region, service account existence, etc.",
              "createdAt": "2021-09-22T15:31:55Z",
              "updatedAt": "2021-09-22T15:32:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tXU8d",
          "commit": {
            "abbreviatedOid": "28fb056"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-22T15:37:22Z",
          "updatedAt": "2021-09-22T15:37:22Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "As discussed we didn't feel the geolocation case scales well beyond country, due to the number of keys required. We felt public metadata was a stronger approach, but requires different crypto to be standardized first.\r\n\r\nI think it is ok to leave this example because using different keysets should be supported as an interim approach. We should however assume any of these examples will need a bit of extension standards to operate smoothly. Geo is a great place to start.",
              "createdAt": "2021-09-22T15:37:22Z",
              "updatedAt": "2021-09-22T15:37:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tYk99",
          "commit": {
            "abbreviatedOid": "28fb056"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Adding some suggestions to bring in the captcha case (which would address #34). I also think we can remove the \"Policies and Uses Cases\" section with this change.",
          "createdAt": "2021-09-22T21:19:30Z",
          "updatedAt": "2021-09-22T21:25:25Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nOne example of this use case is a metered paywall, where an origin limits\r\n```",
              "createdAt": "2021-09-22T21:19:30Z",
              "updatedAt": "2021-09-22T21:25:25Z"
            },
            {
              "originalPosition": 41,
              "body": "```suggestion\r\nAnother example of rate-limited access is in fraud-prevention mechanisms. Operations that \r\nare sensitive to fraudulent abuse, like using a website to create an account, often want to\r\nrate-limit access, and start displaying captchas or require extra verification if a rate-limit\r\nis exceeded.\r\n\r\n```",
              "createdAt": "2021-09-22T21:22:23Z",
              "updatedAt": "2021-09-22T21:25:25Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nOrigins routinely use client IP addresses for this purpose. The per-client policy enforcement\r\npossible with Private Access Tokens allows for rate-limiting on the level of a client device or\r\nuser account, instead of client IP address.\r\n```",
              "createdAt": "2021-09-22T21:24:14Z",
              "updatedAt": "2021-09-22T21:25:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tY0oz",
          "commit": {
            "abbreviatedOid": "28fb056"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-22T23:10:00Z",
          "updatedAt": "2021-09-22T23:10:00Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "I don't think you should add this text here. This belongs in {{examples}}, where the solution using PATs is described.",
              "createdAt": "2021-09-22T23:10:00Z",
              "updatedAt": "2021-09-22T23:10:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tZBH_",
          "commit": {
            "abbreviatedOid": "e34f407"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-23T01:38:52Z",
          "updatedAt": "2021-09-23T01:38:53Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "I am not sure I follow (and this could well be because I missed the discussion and/or I am missing something more fundamental). I think I'm confused in part by @smhendrickson 's statement of \"ok to leave this example\", which parses ambiguously in my mind. Did you mean \"leave it in\" or \"leave it out\"?\r\n\r\nLet me share my thoughts on two things anyway:\r\n\r\n- I think this depends in part on what this document is outlining. I think it outlines an architecture as well as a protocol. Given it does both, I would argue that the architecture is employed here for _all_ of these use cases.\r\n\r\n- I agree that the solution here is going to be limited to per-country or per-region and not arbitrary geo-location. I'm not sure I understand the proposal though, since at the moment the only way we can do this now is with key per region, and I agree that this won't scale beyond per country-ish numbers. However, you can either do it or not... and we don't have the other necessary crypto bits yet. I would love to work on that separately (and understand where the crypto required for that stands), but per-country geo locating, while a bit limited, is a pretty important use case.",
              "createdAt": "2021-09-23T01:38:52Z",
              "updatedAt": "2021-09-23T01:38:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tbx0-",
          "commit": {
            "abbreviatedOid": "fbc6281"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-23T16:34:44Z",
          "updatedAt": "2021-09-23T16:34:44Z",
          "comments": [
            {
              "originalPosition": 42,
              "body": "Fair, that works",
              "createdAt": "2021-09-23T16:34:44Z",
              "updatedAt": "2021-09-23T16:34:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tbyFo",
          "commit": {
            "abbreviatedOid": "fbc6281"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-23T16:35:47Z",
          "updatedAt": "2021-09-23T16:35:48Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "@janaiyengar my impression is that @smhendrickson was saying to \"leave it in\", and keep the example.",
              "createdAt": "2021-09-23T16:35:47Z",
              "updatedAt": "2021-09-23T16:35:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tbyIY",
          "commit": {
            "abbreviatedOid": "fbc6281"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-23T16:35:57Z",
          "updatedAt": "2021-09-23T16:35:57Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84tcM9z",
          "commit": {
            "abbreviatedOid": "fbc6281"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-23T18:30:20Z",
          "updatedAt": "2021-09-23T18:30:21Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Apologies for being dense, @smhendrickson :-)",
              "createdAt": "2021-09-23T18:30:21Z",
              "updatedAt": "2021-09-23T18:30:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tlWL_",
          "commit": {
            "abbreviatedOid": "fbc6281"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-27T21:22:15Z",
          "updatedAt": "2021-09-27T21:22:15Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "Sorry just seeing this. Yup, I meant leave it in because we don't yet have the crypto to support something fancier.\r\n\r\n@janaiyengar no worries :) ",
              "createdAt": "2021-09-27T21:22:15Z",
              "updatedAt": "2021-09-27T21:22:15Z"
            }
          ]
        }
      ]
    },
    {
      "number": 45,
      "id": "PR_kwDOEwrMS84sNi9t",
      "title": "Expand token security considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/45",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #44 \r\nCloses #19 \r\nCloses #14 \r\n",
      "createdAt": "2021-09-23T21:40:43Z",
      "updatedAt": "2021-09-24T20:48:41Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "27f55579b649e83b444df61fa52a17bd74515a8a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/token-security-considerations",
      "headRefOid": "c5021662d633ee63175246488312bc2f198df502",
      "closedAt": "2021-09-24T20:48:41Z",
      "mergedAt": "2021-09-24T20:48:41Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b04ace7537532b020da04466ff1892c585f14365"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tdPPP",
          "commit": {
            "abbreviatedOid": "eadbfb0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "Thanks! Looks good modulo a couple suggestions and one point about the challenge. ",
          "createdAt": "2021-09-24T02:13:03Z",
          "updatedAt": "2021-09-24T02:23:26Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\n## Channel Security\r\n```",
              "createdAt": "2021-09-24T02:13:03Z",
              "updatedAt": "2021-09-24T02:23:26Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nAn attacker that can act as a intermediate Mediator or Issuer communication via impersonation or any other means can\r\n```",
              "createdAt": "2021-09-24T02:13:35Z",
              "updatedAt": "2021-09-24T02:23:26Z"
            },
            {
              "originalPosition": 18,
              "body": "```suggestion\r\nAll communication channels MUST use server-authenticated HTTPS. Where appropriate, e.g., between\r\nClients and Mediators, connections MAY mutually authenticate both client and server, or use mechanisms\r\nsuch as TLS certificate pinning, to mitigate the risk of channel compromise.\r\n```",
              "createdAt": "2021-09-24T02:14:49Z",
              "updatedAt": "2021-09-24T02:23:26Z"
            },
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nAn attacker than can intermediate the channel between Client and Origin can\r\n```",
              "createdAt": "2021-09-24T02:19:06Z",
              "updatedAt": "2021-09-24T02:23:26Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nto an Origin. Scoping the TokenChallenge nonce to the Client HTTP session prevents\r\nTokens being collected in one session and then presented to the Origin in another. \r\nNote that an Origin cannot distinguish between a connection to a single Client and \r\na connection to an attacker intermediating multiple Clients. Thus, it is possible for\r\nan attacker to collect and later present Tokens from multiple clients over the same \r\nOrigin session.\r\n```",
              "createdAt": "2021-09-24T02:21:12Z",
              "updatedAt": "2021-09-24T14:13:54Z"
            },
            {
              "originalPosition": 43,
              "body": "```suggestion\r\nat specific Clients or sets of Clients. In order to mitigate this risk, the Mediator can \r\nobserve and validate the key_id presented by the Client to the Issuer. As described in\r\n```",
              "createdAt": "2021-09-24T02:22:12Z",
              "updatedAt": "2021-09-24T02:23:26Z"
            },
            {
              "originalPosition": 44,
              "body": "```suggestion\r\n{{issuance}}, Mediators MUST validate that the key_id in the Client's AccessTokenRequest\r\n```",
              "createdAt": "2021-09-24T02:22:28Z",
              "updatedAt": "2021-09-24T02:23:27Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nmatches a known public key for the Issuer. This validation allows for key rotation across\r\n```",
              "createdAt": "2021-09-24T02:22:48Z",
              "updatedAt": "2021-09-24T02:23:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdQta",
          "commit": {
            "abbreviatedOid": "eadbfb0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T02:31:29Z",
          "updatedAt": "2021-09-24T02:31:30Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nAn attacker that can act as an intermediate between Mediator and Issuer communication can\r\n```",
              "createdAt": "2021-09-24T02:31:29Z",
              "updatedAt": "2021-09-24T02:31:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdQxw",
          "commit": {
            "abbreviatedOid": "eadbfb0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T02:32:22Z",
          "updatedAt": "2021-09-24T02:32:23Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "\ud83e\udd26 \r\n",
              "createdAt": "2021-09-24T02:32:23Z",
              "updatedAt": "2021-09-24T02:32:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdQ_r",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T02:35:21Z",
          "updatedAt": "2021-09-24T02:35:22Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "@chris-wood hm, I'd like to have a bit of a better answer here rather than declaring we can't protect against it.\r\n\r\nThe main point, from the issue, was not to prevent the client-origin communication from having an intermediary watching things, but to stop the intermediary from harvesting tokens that it could then use in _other_ connections/sessions/contexts as its own client.\r\n\r\nIf the origin can require that the challenge/nonce is specific to a given session, can't it prove that this wasn't a token harvested on behalf of an unrelated connection?",
              "createdAt": "2021-09-24T02:35:22Z",
              "updatedAt": "2021-09-24T02:35:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdRPy",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T02:38:24Z",
          "updatedAt": "2021-09-24T02:38:24Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "> If the origin can require that the challenge/nonce is specific to a given session, can't it prove that this wasn't a token harvested on behalf of an unrelated connection?\r\n\r\nWhen the connection is MITM'd, the session is with the attacker, not the client, so this just doesn't seem to work. A workaround would be to derive the nonce _from_ the connection via [the Export API](https://datatracker.ietf.org/doc/html/rfc8446#section-7.5) (client and server independently call the API to get a nonce and if they disagree they know there's a TLS interceptor), but that's pretty uncommon. Things like WebAuthn have [slots for this type of binding](https://www.w3.org/TR/webauthn-2/#dom-collectedclientdata-tokenbinding) but it's basically never used in practice. ",
              "createdAt": "2021-09-24T02:38:24Z",
              "updatedAt": "2021-09-24T02:40:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdVGy",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T03:27:49Z",
          "updatedAt": "2021-09-24T03:27:49Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Right, the session is with the attacker, and then the client behind the attacker. Ah, so you\u2019re saying the attacker could have other clients that it\u2019s trying to squash together into one session?",
              "createdAt": "2021-09-24T03:27:49Z",
              "updatedAt": "2021-09-24T03:27:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tdDpz",
          "commit": {
            "abbreviatedOid": "eadbfb0"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few comments",
          "createdAt": "2021-09-23T23:47:12Z",
          "updatedAt": "2021-09-24T05:21:23Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nAn attacker that can act as a man-in-the-middle for Client/Origin communication can\r\n```",
              "createdAt": "2021-09-23T23:47:12Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 15,
              "body": "\"machine-in-the-middle attacker\"?",
              "createdAt": "2021-09-24T04:36:11Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 19,
              "body": "Is it possible for a Mediator to be spoofed, causing denial-of-service to a user? I _think_ so. If so, you want client auth as well for the Mediator at the Issuer, right?",
              "createdAt": "2021-09-24T04:38:05Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 21,
              "body": "```suggestion\r\nAn attacker that can intermediate the channel between Client and Origin can\r\n```",
              "createdAt": "2021-09-24T04:38:24Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 47,
              "body": "```suggestion\r\nall Clients, but not allow for per-Client keys.\r\n```",
              "createdAt": "2021-09-24T04:43:18Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 47,
              "body": "I would suggest moving the text from lines 501-504 down here with some massaging, with a note at line 501 saying something like \"Note that Mediators need to be careful in cases of key rotation; see {{privacy-considerations}}.\"",
              "createdAt": "2021-09-24T04:45:27Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            },
            {
              "originalPosition": 25,
              "body": "Do I understand correctly that this is a machine-on-the-side attacker, not a MITM attacker? AIUI, the attacker:\r\n- watches the challenge and the token go by, harvesting both; and\r\n- later spoofs a client to reach the origin and uses a token that matches the origin's challenge.\r\n\r\nIf my understanding is correct, then the crux of the issue is the risk that the nonce might repeat (which makes it a bad nonce.)\r\n\r\nIf so, it seems to me that @tfpauly's text suggests that an Origin can make a strong nonce by deriving it from something unique to the session as seen by the Origin (for example: timestamp + H(session key) + H(some client info)). I could of course be misunderstanding the issue and the text :-) ",
              "createdAt": "2021-09-24T05:20:44Z",
              "updatedAt": "2021-09-24T05:21:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84te-dd",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T13:42:36Z",
          "updatedAt": "2021-09-24T13:42:36Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Intermediation is what happens when the attacker is in the middle and is the thing we're concerned with here, so I'd be inclined to stick with what's here.",
              "createdAt": "2021-09-24T13:42:36Z",
              "updatedAt": "2021-09-24T13:42:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84te-wj",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T13:43:43Z",
          "updatedAt": "2021-09-24T13:43:44Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Network attackers can also just block connections to mediators or issuers, so I'm not sure client auth helps for that particular problem.",
              "createdAt": "2021-09-24T13:43:44Z",
              "updatedAt": "2021-09-24T13:43:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tfHKW",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T14:14:18Z",
          "updatedAt": "2021-09-24T14:14:19Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "@tfpauly I updated my suggestion to try and make the limitation (and open problem) more clear.",
              "createdAt": "2021-09-24T14:14:18Z",
              "updatedAt": "2021-09-24T14:14:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tfHVJ",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T14:14:56Z",
          "updatedAt": "2021-09-24T14:14:56Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "@janaiyengar the attacker needs to intercept TLS to see the challenge and resulting Token, so it's not enough to be on the side, but maybe I misunderstood you?",
              "createdAt": "2021-09-24T14:14:56Z",
              "updatedAt": "2021-09-24T14:14:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tf4fb",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T17:43:27Z",
          "updatedAt": "2021-09-24T17:43:28Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "The concern might be if a party pretending to be the mediator asserts something about some client ID causing the issuer to think they've hit some policy limit. Though similarly a malicious mediator can do the same.",
              "createdAt": "2021-09-24T17:43:27Z",
              "updatedAt": "2021-09-24T17:43:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tf7zP",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T18:00:32Z",
          "updatedAt": "2021-09-24T18:07:14Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Does the extra ability to present multiple tokens in the same session, versus the attacker just mitming the individual connections and intercepting/replaying the tokens separately there introduce much of an issue? Though you can sort of solve both with the exporter secret solution from the TLS session.",
              "createdAt": "2021-09-24T18:00:32Z",
              "updatedAt": "2021-09-24T18:07:14Z"
            },
            {
              "originalPosition": 46,
              "body": "Probably as a separate issue this probably needs to be more nuanced. The issuer could decide to do a key rotation when a specific user/event happens (tracking the first 100 users vs the next set of user).\r\n\r\nMediators may almost need their own key rotation policy (or they delegate that to whatever known key service they use).",
              "createdAt": "2021-09-24T18:07:01Z",
              "updatedAt": "2021-09-24T18:07:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgXY9",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T20:40:07Z",
          "updatedAt": "2021-09-24T20:40:07Z",
          "comments": [
            {
              "originalPosition": 47,
              "body": "Moved the key rotation down to privacy considerations",
              "createdAt": "2021-09-24T20:40:07Z",
              "updatedAt": "2021-09-24T20:40:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgXdV",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T20:40:33Z",
          "updatedAt": "2021-09-24T20:40:34Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Modified the text a bit on Jana's suggestion, but yes, we can continue to improve it.",
              "createdAt": "2021-09-24T20:40:34Z",
              "updatedAt": "2021-09-24T20:40:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgXkS",
          "commit": {
            "abbreviatedOid": "686d5b1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T20:41:16Z",
          "updatedAt": "2021-09-24T20:41:16Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yeah, I don't know if we want specific client auth, beyond however the client would naturally authenticate to the mediator (device attestation, etc).",
              "createdAt": "2021-09-24T20:41:16Z",
              "updatedAt": "2021-09-24T20:41:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgX0N",
          "commit": {
            "abbreviatedOid": "c502166"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-24T20:42:49Z",
          "updatedAt": "2021-09-24T20:42:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 46,
      "id": "PR_kwDOEwrMS84sQQxa",
      "title": "Describe Issuer decryption steps",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/46",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-24T19:31:57Z",
      "updatedAt": "2021-09-24T20:52:14Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "27f55579b649e83b444df61fa52a17bd74515a8a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/finish-decryption",
      "headRefOid": "ca79f4f453b302462ef1d627b361680f1489dbbc",
      "closedAt": "2021-09-24T20:52:14Z",
      "mergedAt": "2021-09-24T20:52:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "dd484732b58a4b035cc070cfa4bb9849707ade06"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tgSbm",
          "commit": {
            "abbreviatedOid": "ca79f4f"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-24T20:08:57Z",
          "updatedAt": "2021-09-24T20:08:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 47,
      "id": "PR_kwDOEwrMS84sQUUl",
      "title": "Describe how to instantiate motivating use cases",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/47",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I don't love the geolocation exchange here. Mediators probably should not send anything that client's don't want them to send, so maybe that means clients opt-in to allowing their geohash to be forwarded. And maybe they decide to do that if Origins request tokens that need to be region specific? (Origins could maybe send that via the Accept-CH header in their challenge, and Clients could use that to send to the Mediator? I dunno.)\r\n\r\nI also cut Client Linking as a use case.",
      "createdAt": "2021-09-24T20:01:00Z",
      "updatedAt": "2021-09-27T19:05:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "27f55579b649e83b444df61fa52a17bd74515a8a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/instantiations",
      "headRefOid": "99e5abe07005e80afe6badf3e590cc14f5aee8cb",
      "closedAt": "2021-09-27T19:05:54Z",
      "mergedAt": "2021-09-27T19:05:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ab6adff2894479e1c9847101b35e02b904772f2c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tgTCg",
          "commit": {
            "abbreviatedOid": "b25fe9d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2021-09-24T20:12:39Z",
          "updatedAt": "2021-09-24T20:16:49Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "I'd leave this out for now from this part and only mention it below.\r\n\r\n```suggestion\r\n\"Anonymous-Origin-ID\". The mediator MAY also add additional context information, but MUST\r\nNOT add information that will uniquely identify a client.\r\n```",
              "createdAt": "2021-09-24T20:12:39Z",
              "updatedAt": "2021-09-24T20:16:49Z"
            },
            {
              "originalPosition": 24,
              "body": "Can we mention this in privacy considerations, and say that a Client replaying tokens (and origins accepting that) would allow this happen again.",
              "createdAt": "2021-09-24T20:13:50Z",
              "updatedAt": "2021-09-24T20:16:49Z"
            },
            {
              "originalPosition": 115,
              "body": "I don't know if the mediator would be sending the geohash to the Issuer here\u2014instead, it should have a URI to look up on an issuer what key_id should be expected for each region, so it can verify the key is correct.",
              "createdAt": "2021-09-24T20:16:35Z",
              "updatedAt": "2021-09-24T20:16:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgW3Z",
          "commit": {
            "abbreviatedOid": "7f168b7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T20:37:01Z",
          "updatedAt": "2021-09-24T20:37:01Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Ah, that's much better!",
              "createdAt": "2021-09-24T20:37:01Z",
              "updatedAt": "2021-09-24T20:37:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tgZUy",
          "commit": {
            "abbreviatedOid": "99e5abe"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-24T20:52:36Z",
          "updatedAt": "2021-09-24T20:52:37Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "I'll address this in a followup PR.",
              "createdAt": "2021-09-24T20:52:37Z",
              "updatedAt": "2021-09-24T20:52:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tk4x6",
          "commit": {
            "abbreviatedOid": "99e5abe"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-27T19:03:06Z",
          "updatedAt": "2021-09-27T19:03:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 53,
      "id": "PR_kwDOEwrMS84sd--d",
      "title": "Make token keys per-origin",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/53",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #51",
      "createdAt": "2021-09-29T18:59:17Z",
      "updatedAt": "2021-10-01T20:54:20Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ab6adff2894479e1c9847101b35e02b904772f2c",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-3",
      "headRefOid": "666ecf8789b9c8122e54e6d662536c31ea393feb",
      "closedAt": "2021-10-01T20:54:20Z",
      "mergedAt": "2021-10-01T20:54:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0c79b5e44c8e8df09568cbfe3b8a36d7656a56bc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tuwVR",
          "commit": {
            "abbreviatedOid": "e3f5e5a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-29T22:07:30Z",
          "updatedAt": "2021-09-29T22:12:26Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "We can probably just delete this struct now and use `KeyConfig` directly.",
              "createdAt": "2021-09-29T22:07:30Z",
              "updatedAt": "2021-09-29T22:12:26Z"
            },
            {
              "originalPosition": 87,
              "body": "```suggestion\r\n    uint8_t encrypted_origin_name<1..2^16-1>;\r\n```\r\nThis will probably be variable length.",
              "createdAt": "2021-09-29T22:09:18Z",
              "updatedAt": "2021-09-29T22:12:26Z"
            },
            {
              "originalPosition": 97,
              "body": "```suggestion\r\nkey, generated as SHA256(KeyConfig).\r\n```\r\n(And then deleting following line)",
              "createdAt": "2021-09-29T22:09:36Z",
              "updatedAt": "2021-09-29T22:12:26Z"
            },
            {
              "originalPosition": 154,
              "body": "```suggestion\r\n- For version 1, the AccessTokenRequest.name_key_id corresponds to the ID of the ISSUER_NAME_KEY held by the Issuer\r\n```",
              "createdAt": "2021-09-29T22:10:32Z",
              "updatedAt": "2021-09-29T22:12:26Z"
            },
            {
              "originalPosition": 168,
              "body": "```suggestion\r\nthe request. Clients do not indicate the ORIGIN_TOKEN_KEY to use, to prevent Origins from choosing per-client keys.\r\n```",
              "createdAt": "2021-09-29T22:11:50Z",
              "updatedAt": "2021-09-29T22:12:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84tu8PZ",
          "commit": {
            "abbreviatedOid": "666ecf8"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-09-29T23:47:10Z",
          "updatedAt": "2021-09-29T23:47:10Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "@chris-wood updated, please check!",
              "createdAt": "2021-09-29T23:47:10Z",
              "updatedAt": "2021-09-29T23:47:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 56,
      "id": "PR_kwDOEwrMS84shKn8",
      "title": "Rename draft-geohash-hint to draft-pauly-httpbis-geohash-hint and add dschinazi as co-author",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/56",
      "state": "MERGED",
      "author": "DavidSchinazi",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-09-30T17:09:34Z",
      "updatedAt": "2021-09-30T17:13:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ab6adff2894479e1c9847101b35e02b904772f2c",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "dschinazi_geohash",
      "headRefOid": "f0960576e3828d517cf81d33e2f540af48c9e152",
      "closedAt": "2021-09-30T17:13:48Z",
      "mergedAt": "2021-09-30T17:13:48Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "455f206ddd1caaf7ede8447001b64c9a3ff9bfab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84tyM77",
          "commit": {
            "abbreviatedOid": "f096057"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-09-30T17:13:41Z",
          "updatedAt": "2021-09-30T17:13:41Z",
          "comments": []
        }
      ]
    },
    {
      "number": 61,
      "id": "PR_kwDOEwrMS84slSqL",
      "title": "Adding self to draft",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/61",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-01T22:09:18Z",
      "updatedAt": "2021-10-01T23:32:09Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "12d2db259a0d738aebdb19eaf391038baf2ad45e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/add-self",
      "headRefOid": "f2b869837c01a3f4629c2c8bbaee30bade34cc50",
      "closedAt": "2021-10-01T23:32:09Z",
      "mergedAt": "2021-10-01T23:32:09Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "24716959b71f2c36756cfab5e935afdabdea85c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84t3JmW",
          "commit": {
            "abbreviatedOid": "f2b8698"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-01T23:32:04Z",
          "updatedAt": "2021-10-01T23:32:04Z",
          "comments": []
        }
      ]
    },
    {
      "number": 62,
      "id": "PR_kwDOEwrMS84slWmL",
      "title": "Nits and fix",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/62",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Fixes #59, and offers a couple of modifications elsewhere.",
      "createdAt": "2021-10-01T23:00:09Z",
      "updatedAt": "2021-10-01T23:33:02Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "12d2db259a0d738aebdb19eaf391038baf2ad45e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/nohttp",
      "headRefOid": "7f685c4c7b34c132a133bfeba8e92f1dd8c209c2",
      "closedAt": "2021-10-01T23:33:02Z",
      "mergedAt": "2021-10-01T23:33:02Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ff4008819648b215e1eca54b33a3316f1b88ad16"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84t3Jp0",
          "commit": {
            "abbreviatedOid": "7f685c4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-01T23:32:57Z",
          "updatedAt": "2021-10-01T23:32:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 63,
      "id": "PR_kwDOEwrMS84slkKd",
      "title": "Private Access Token protocol rework",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/63",
      "state": "CLOSED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #55\r\nCloses #58\r\n\r\nThis is a very large rework of the protocol, as I discussed with @chris-wood and @janaiyengar. We can discuss more in detail, and motivation, but this solves some major issues (like #55) as well as the ability for Origins and Issuers to use timing collusion to identify clients.",
      "createdAt": "2021-10-02T04:02:33Z",
      "updatedAt": "2021-10-11T19:28:37Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ff4008819648b215e1eca54b33a3316f1b88ad16",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/protocol-rework",
      "headRefOid": "8d48487ba2a27d898ec7e9316a23c91556991266",
      "closedAt": "2021-10-11T19:28:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "For easy to read version: https://tfpauly.github.io/privacy-proxy/tfp/protocol-rework/draft-private-access-tokens.html",
          "createdAt": "2021-10-02T04:03:42Z",
          "updatedAt": "2021-10-02T04:03:42Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@janaiyengar I think I've addressed your comments, please take a look!",
          "createdAt": "2021-10-08T03:13:23Z",
          "updatedAt": "2021-10-08T03:13:23Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84t_eSS",
          "commit": {
            "abbreviatedOid": "94e7782"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T15:32:43Z",
          "updatedAt": "2021-10-05T15:57:30Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "nit: \"identity,\" (extra space)",
              "createdAt": "2021-10-05T15:32:44Z",
              "updatedAt": "2021-10-05T15:57:30Z"
            },
            {
              "originalPosition": 284,
              "body": "Is there is a difference between a mediator just having two groups or a single group per epoch? Or does the issuer need some way to indicate a minimum number of groups it expects to see?",
              "createdAt": "2021-10-05T15:54:20Z",
              "updatedAt": "2021-10-05T15:57:30Z"
            },
            {
              "originalPosition": 392,
              "body": "Does this get leaked by the choice of key that the ENCRYPTED_ORIGIN_NAME was encrypted to? (can't the Origin provide per-client ISSUER_NAME_KEYs?)",
              "createdAt": "2021-10-05T15:55:11Z",
              "updatedAt": "2021-10-05T15:57:30Z"
            },
            {
              "originalPosition": 516,
              "body": "Might need to expand on the privacy/security implications in the considerations sections below on the mediator's choice of group size? It seems like group sizes of 1 or infinity (all the clients within an epoch) could have some slight concerns without the Issuer enforcing some size requirements?",
              "createdAt": "2021-10-05T15:57:26Z",
              "updatedAt": "2021-10-05T15:57:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uAAVs",
          "commit": {
            "abbreviatedOid": "94e7782"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:41:17Z",
          "updatedAt": "2021-10-05T17:41:17Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\nThe Mediator knows the Client's identity, the Issuer being targeted\r\n```",
              "createdAt": "2021-10-05T17:41:17Z",
              "updatedAt": "2021-10-05T17:41:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uAAgH",
          "commit": {
            "abbreviatedOid": "94e7782"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:41:58Z",
          "updatedAt": "2021-10-05T17:41:58Z",
          "comments": [
            {
              "originalPosition": 284,
              "body": "Yeah, there does need to be an effective minimum. I don't know if we need to have it communicated (it could go in issuer policy, with the policy window, if it does), or we should just have a minimum in the protocol as a MUST.",
              "createdAt": "2021-10-05T17:41:58Z",
              "updatedAt": "2021-10-05T17:41:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uAAqI",
          "commit": {
            "abbreviatedOid": "94e7782"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:42:37Z",
          "updatedAt": "2021-10-05T17:42:37Z",
          "comments": [
            {
              "originalPosition": 392,
              "body": "The Mediator is responsible for checking the key ID of ISSUER_NAME_KEY to prevent this. ",
              "createdAt": "2021-10-05T17:42:37Z",
              "updatedAt": "2021-10-05T17:42:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uAAtE",
          "commit": {
            "abbreviatedOid": "94e7782"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-05T17:42:49Z",
          "updatedAt": "2021-10-05T17:42:49Z",
          "comments": [
            {
              "originalPosition": 516,
              "body": "Yes, agreed.",
              "createdAt": "2021-10-05T17:42:49Z",
              "updatedAt": "2021-10-05T17:42:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uGCW_",
          "commit": {
            "abbreviatedOid": "b3d3085"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This is really nice! I especially like the new structure and simplified steps of the protocol. \r\n\r\nI filed #67 to track token-count related questions.",
          "createdAt": "2021-10-07T00:14:28Z",
          "updatedAt": "2021-10-07T00:14:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uFwJL",
          "commit": {
            "abbreviatedOid": "b3d3085"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Thanks for writing this up, @tfpauly ! I think it works. I've provided some suggestions and discussion points in my comments.",
          "createdAt": "2021-10-06T21:51:51Z",
          "updatedAt": "2021-10-07T02:58:45Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nstarts when the Client first sends a request associated with an Issuer.\r\n```",
              "createdAt": "2021-10-06T21:51:51Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 86,
              "body": "The purpose of this should be to allow the Mediator and the Issuer to communicate about the Origin, including for the Mediator to enforce the Issuer's policy, right?",
              "createdAt": "2021-10-07T02:10:10Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 104,
              "body": "```suggestion\r\nThe policy window (ISSUER_POLICY_WINDOW) is a resource of media type \"application/json\",\r\n```\r\n\r\nThis can be stored at the Mediator and Issuer in any form; it's just communicated as app/json",
              "createdAt": "2021-10-07T02:11:25Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 118,
              "body": "Why is this a template? The example is simply a URL.",
              "createdAt": "2021-10-07T02:13:24Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nsingle-use token from a specific Issuer. Once a Client has received a token\r\nfrom that Issuer, it presents the token to the Origin.\r\n```",
              "createdAt": "2021-10-07T02:14:26Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 152,
              "body": "```suggestion\r\nWhen used in an authentication challenge, the \"PrivateAccessToken\" scheme uses the\r\n```",
              "createdAt": "2021-10-07T02:17:14Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 164,
              "body": "```suggestion\r\nUpon receipt of this challenge, a Client uses the message and keys in the Issuance protocol\r\n(see {{issuance}}). If the TokenChallenge has a version field the Client\r\n```",
              "createdAt": "2021-10-07T02:18:50Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 172,
              "body": "```suggestion\r\nThe output of the issuance protocol is a token that corresponds to the Origin's challenge (see {{challenge}}).\r\n```",
              "createdAt": "2021-10-07T02:19:52Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 134,
              "body": "```suggestion\r\n### Token Challenge {#challenge}\r\n```",
              "createdAt": "2021-10-07T02:20:13Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 173,
              "body": "```suggestion\r\nA token is a structure that begins with a single byte that indicates a version, which\r\n```",
              "createdAt": "2021-10-07T02:21:02Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 182,
              "body": "```suggestion\r\n1. The Client sends a token request to the Mediator, encrypted using an Issuer-specific key\r\n```",
              "createdAt": "2021-10-07T02:22:05Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 184,
              "body": "```suggestion\r\n1. The Mediator validates the request and proxies the request to the Issuer\r\n```",
              "createdAt": "2021-10-07T02:22:43Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 186,
              "body": "```suggestion\r\n1. The Issuer decrypts the request and sends a response back to the Mediator\r\n```",
              "createdAt": "2021-10-07T02:22:59Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 188,
              "body": "```suggestion\r\n1. The Mediator verifies the response and proxies the response to the Client\r\n```",
              "createdAt": "2021-10-07T02:23:09Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 221,
              "body": "```suggestion\r\nIssuance requires Mediators to maintain state for each Client. The mechanism\r\n```",
              "createdAt": "2021-10-07T02:27:58Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 230,
              "body": "```suggestion\r\nFor each Client-Issuer pair, a Mediator maintains a policy window\r\nstart and end time for each Issuer from which a Client requests a token.  Associated with this window,\r\n```",
              "createdAt": "2021-10-07T02:32:40Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 232,
              "body": "```suggestion\r\nchanges every time the policy window elapses. For each Client, the Mediator maintains\r\n```",
              "createdAt": "2021-10-07T02:35:08Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 238,
              "body": "Say something about the group size -- that the Mediator chooses them, and the tradeoff is that an overly large group size makes it possible for a Mediator to learn about the Origin, and that an overly small group size makes it possible for the Issuer to learn about the Client. A Mediator SHOULD start by spreading users among as many groups as it can. With a large enough number of Clients, a Mediator SHOULD use at least ten groups at any given time, with each group having no fewer than thousands of Clients in it.",
              "createdAt": "2021-10-07T02:47:40Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 253,
              "body": "When should this be reaped? Perhaps after a large enough period of time, say ten times the policy window period?",
              "createdAt": "2021-10-07T02:49:56Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 272,
              "body": "```suggestion\r\nCLIENT_GROUP_ID within a policy window period.\r\n```\r\n\r\nThis can change if the CLIENT_GROUP_ID has been reaped and is being reused after a while.",
              "createdAt": "2021-10-07T02:51:51Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 280,
              "body": "Over what period of time? Meaning, when does the Issuer stop tracking the CLIENT_GROUP_ID? This should be the same time as the Mediator is prohibited from reusing it -- \"ten times the policy window\".",
              "createdAt": "2021-10-07T02:54:09Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 284,
              "body": "I've proposed above. It's best if we recommend a value here to start with, since Mediators will have no idea of how to determine this value.",
              "createdAt": "2021-10-07T02:57:41Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            },
            {
              "originalPosition": 205,
              "body": "It's not clear to me how this results in token issuance failure.",
              "createdAt": "2021-10-07T02:57:58Z",
              "updatedAt": "2021-10-07T02:58:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uJObI",
          "commit": {
            "abbreviatedOid": "b3d3085"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-07T16:55:54Z",
          "updatedAt": "2021-10-07T16:55:54Z",
          "comments": [
            {
              "originalPosition": 238,
              "body": "The incentives for choosing a group size are a bit odd, that it seems like the mediator should always want to minimzize it, while the issuer wants to maximize it. I guess issuers will have minimum requirements for mediators that partner with them and vice versa.",
              "createdAt": "2021-10-07T16:55:54Z",
              "updatedAt": "2021-10-07T16:55:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uJPh2",
          "commit": {
            "abbreviatedOid": "b3d3085"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-07T17:00:21Z",
          "updatedAt": "2021-10-07T17:00:21Z",
          "comments": [
            {
              "originalPosition": 238,
              "body": "It's not clear to me how a large group reveals information about the origin. @janaiyengar, can you elaborate?",
              "createdAt": "2021-10-07T17:00:21Z",
              "updatedAt": "2021-10-07T17:00:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKrm6",
          "commit": {
            "abbreviatedOid": "d67333a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T02:56:41Z",
          "updatedAt": "2021-10-08T02:56:41Z",
          "comments": [
            {
              "originalPosition": 86,
              "body": "It's just for the issuer to communicate to the mediator something about the origin that lets the mediator detect client's trying to abuse the system. The actual per-origin limit is enforce by the issuer.",
              "createdAt": "2021-10-08T02:56:41Z",
              "updatedAt": "2021-10-08T02:56:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKsYI",
          "commit": {
            "abbreviatedOid": "d67333a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:05:58Z",
          "updatedAt": "2021-10-08T03:05:58Z",
          "comments": [
            {
              "originalPosition": 238,
              "body": "@dvorak42 in order to learn info, I think it would actually be mediators preferring fewer larger groups (to learn about origins) and issuers preferring more smaller groups (to track clients)",
              "createdAt": "2021-10-08T03:05:58Z",
              "updatedAt": "2021-10-08T03:05:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs0y",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:11:12Z",
          "updatedAt": "2021-10-08T03:11:13Z",
          "comments": [
            {
              "originalPosition": 118,
              "body": "Fixed!",
              "createdAt": "2021-10-08T03:11:12Z",
              "updatedAt": "2021-10-08T03:11:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs20",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:11:37Z",
          "updatedAt": "2021-10-08T03:11:37Z",
          "comments": [
            {
              "originalPosition": 253,
              "body": "Clarified, and gave 10x policy window as the minimum",
              "createdAt": "2021-10-08T03:11:37Z",
              "updatedAt": "2021-10-08T03:11:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs3c",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:11:45Z",
          "updatedAt": "2021-10-08T03:11:46Z",
          "comments": [
            {
              "originalPosition": 280,
              "body": "Clarified, and gave 10x policy window as the minimum",
              "createdAt": "2021-10-08T03:11:45Z",
              "updatedAt": "2021-10-08T03:11:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs42",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:12:00Z",
          "updatedAt": "2021-10-08T03:12:01Z",
          "comments": [
            {
              "originalPosition": 205,
              "body": "Clarified how this leads to a failure",
              "createdAt": "2021-10-08T03:12:00Z",
              "updatedAt": "2021-10-08T03:12:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs7u",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:12:35Z",
          "updatedAt": "2021-10-08T03:12:35Z",
          "comments": [
            {
              "originalPosition": 284,
              "body": "I've updated the text for the mediator requirements",
              "createdAt": "2021-10-08T03:12:35Z",
              "updatedAt": "2021-10-08T03:12:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uKs-A",
          "commit": {
            "abbreviatedOid": "8d48487"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-08T03:13:03Z",
          "updatedAt": "2021-10-08T03:13:03Z",
          "comments": [
            {
              "originalPosition": 238,
              "body": "@janaiyengar I've taken your text and added it in here.",
              "createdAt": "2021-10-08T03:13:03Z",
              "updatedAt": "2021-10-08T03:13:03Z"
            }
          ]
        }
      ]
    },
    {
      "number": 68,
      "id": "PR_kwDOEwrMS84s9wqF",
      "title": "Second pass at protocol rework",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/68",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Branched off of #63 \r\n\r\nRemoves groups, replaces it with new verification checks to ensure that clients cannot forge values",
      "createdAt": "2021-10-08T23:04:28Z",
      "updatedAt": "2021-10-12T15:50:12Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a030580160122ed264188c8c20a00ab2e8273cd6",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/protocol-rework-2",
      "headRefOid": "eaed209748443793ae8797905b77d4fc109a5931",
      "closedAt": "2021-10-12T15:50:12Z",
      "mergedAt": "2021-10-12T15:50:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1b4f4f3ca5b83381e9e659a79de3e1ea2127b481"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uR_QE",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Generally looks good, simpler than the group approach.",
          "createdAt": "2021-10-11T16:18:28Z",
          "updatedAt": "2021-10-11T16:44:57Z",
          "comments": [
            {
              "originalPosition": 271,
              "body": "Should this be rotating as part of the policy window?",
              "createdAt": "2021-10-11T16:18:28Z",
              "updatedAt": "2021-10-11T16:44:57Z"
            },
            {
              "originalPosition": 560,
              "body": "Should this also pull in the version in the request? (to avoid collisions between future encrypted names (though only really an issue for long lived keys).",
              "createdAt": "2021-10-11T16:33:22Z",
              "updatedAt": "2021-10-11T16:44:57Z"
            },
            {
              "originalPosition": 508,
              "body": "This search only needs to be against the ANON_ORIGIN_ID for this client, right? Otherwise needing to search against all seen ANON_ORIGIN_ID pairs might become expensive.\r\n\r\n",
              "createdAt": "2021-10-11T16:39:23Z",
              "updatedAt": "2021-10-11T16:44:57Z"
            },
            {
              "originalPosition": 379,
              "body": "AFAIU, its a little odd that the mediator needs to look up the Client based on a \"client ID\" it has for the client (device identity, IP, etc), which is different from the new \"CLIENT_ID\" that the client has provided? ",
              "createdAt": "2021-10-11T16:43:58Z",
              "updatedAt": "2021-10-11T16:44:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSLqd",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T17:22:42Z",
          "updatedAt": "2021-10-11T17:22:42Z",
          "comments": [
            {
              "originalPosition": 560,
              "body": "Not sure it'd be needed. I removed the token request, since this field is in the token request itself. I imagine the blinded req is sufficient?",
              "createdAt": "2021-10-11T17:22:42Z",
              "updatedAt": "2021-10-11T17:22:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSLsd",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T17:22:51Z",
          "updatedAt": "2021-10-11T17:22:52Z",
          "comments": [
            {
              "originalPosition": 560,
              "body": "@chris-wood ?",
              "createdAt": "2021-10-11T17:22:51Z",
              "updatedAt": "2021-10-11T17:22:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSL0i",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T17:23:35Z",
          "updatedAt": "2021-10-11T17:23:35Z",
          "comments": [
            {
              "originalPosition": 508,
              "body": "The ANON_ISSUER_ORIGIN_ID should not show up for any other ANON_ORIGIN_ID by this particular client. You could make that cheap by having a hash table from ANON_ISSUER_ORIGIN_ID  to ANON_ORIGIN_ID.",
              "createdAt": "2021-10-11T17:23:35Z",
              "updatedAt": "2021-10-11T17:23:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSL5Z",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T17:24:00Z",
          "updatedAt": "2021-10-11T17:24:00Z",
          "comments": [
            {
              "originalPosition": 379,
              "body": "Yes, it needs its own notion of the client...",
              "createdAt": "2021-10-11T17:24:00Z",
              "updatedAt": "2021-10-11T17:24:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSL9W",
          "commit": {
            "abbreviatedOid": "8eb6dc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T17:24:19Z",
          "updatedAt": "2021-10-11T17:24:19Z",
          "comments": [
            {
              "originalPosition": 271,
              "body": "The policy window rotates individually for clients, so the issuer wouldn't know that.",
              "createdAt": "2021-10-11T17:24:19Z",
              "updatedAt": "2021-10-11T17:24:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSYmR",
          "commit": {
            "abbreviatedOid": "cd3e78c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T18:39:29Z",
          "updatedAt": "2021-10-11T18:39:29Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "@chris-wood was this intended to describe how ISSUER_SECRET is calculated?",
              "createdAt": "2021-10-11T18:39:29Z",
              "updatedAt": "2021-10-11T18:39:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSZgp",
          "commit": {
            "abbreviatedOid": "c261828"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T18:45:19Z",
          "updatedAt": "2021-10-11T18:45:20Z",
          "comments": [
            {
              "originalPosition": 65,
              "body": "Yep :) Will push",
              "createdAt": "2021-10-11T18:45:19Z",
              "updatedAt": "2021-10-11T18:45:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSZ-L",
          "commit": {
            "abbreviatedOid": "c261828"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T18:48:13Z",
          "updatedAt": "2021-10-11T18:48:13Z",
          "comments": [
            {
              "originalPosition": 560,
              "body": "We should probably just bind as much as we can to the ciphertext. I'll update this to include the mapping stuff.",
              "createdAt": "2021-10-11T18:48:13Z",
              "updatedAt": "2021-10-11T18:48:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uSfWi",
          "commit": {
            "abbreviatedOid": "909756b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T19:22:55Z",
          "updatedAt": "2021-10-11T19:22:56Z",
          "comments": [
            {
              "originalPosition": 391,
              "body": "```suggestion\r\nthe Issuer, with the AccessTokenRequest as the body. The media type for this request\r\n```",
              "createdAt": "2021-10-11T19:22:55Z",
              "updatedAt": "2021-10-11T19:22:56Z"
            }
          ]
        }
      ]
    },
    {
      "number": 72,
      "id": "PR_kwDOEwrMS84tCkg8",
      "title": "Formalize HTTP headers",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/72",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #64",
      "createdAt": "2021-10-11T21:55:55Z",
      "updatedAt": "2021-10-13T02:11:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "1b4f4f3ca5b83381e9e659a79de3e1ea2127b481",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/structured-fields",
      "headRefOid": "ffc47a4956d6b538c1d19180e3f8322caff6b51f",
      "closedAt": "2021-10-12T15:50:45Z",
      "mergedAt": "2021-10-12T15:50:45Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6c82219c53db9c811aa29d43e1bcafc794721421"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uS2DI",
          "commit": {
            "abbreviatedOid": "ffc47a4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-11T21:58:45Z",
          "updatedAt": "2021-10-11T21:58:45Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uS63f",
          "commit": {
            "abbreviatedOid": "ffc47a4"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-11T22:30:58Z",
          "updatedAt": "2021-10-11T22:30:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uVjXK",
          "commit": {
            "abbreviatedOid": "ffc47a4"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-12T13:41:50Z",
          "updatedAt": "2021-10-12T13:41:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uX7Yp",
          "commit": {
            "abbreviatedOid": "ffc47a4"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Late, but LGTM.",
          "createdAt": "2021-10-13T02:11:55Z",
          "updatedAt": "2021-10-13T02:11:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 73,
      "id": "PR_kwDOEwrMS84tCxVq",
      "title": "Describe user interaction guidelines",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/73",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #65 ",
      "createdAt": "2021-10-11T23:25:58Z",
      "updatedAt": "2021-10-13T02:11:38Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a030580160122ed264188c8c20a00ab2e8273cd6",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/user-interaction",
      "headRefOid": "470c060116c38a1826d238e09659e47f8156c115",
      "closedAt": "2021-10-12T17:16:41Z",
      "mergedAt": "2021-10-12T17:16:41Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "26b18974761e8473b3494863b9c08afe3ae83e8a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uTIp1",
          "commit": {
            "abbreviatedOid": "61a5425"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-11T23:28:18Z",
          "updatedAt": "2021-10-11T23:32:06Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "```suggestion\r\nOrigins SHOULD NOT block useful work on token authentication.\r\n```",
              "createdAt": "2021-10-11T23:28:18Z",
              "updatedAt": "2021-10-11T23:32:06Z"
            },
            {
              "originalPosition": 23,
              "body": "```suggestion\r\nInstead, token authentication can be used in similar ways to CAPTCHA\r\n```",
              "createdAt": "2021-10-11T23:28:47Z",
              "updatedAt": "2021-10-11T23:32:06Z"
            },
            {
              "originalPosition": 22,
              "body": "Trying to de-emphasize the web context, and focus more on generic contexts in which access tokens may be needed.",
              "createdAt": "2021-10-11T23:31:14Z",
              "updatedAt": "2021-10-11T23:32:06Z"
            },
            {
              "originalPosition": 18,
              "body": "What if the mediator needs to authenticate the user? That might involve a challenge, which could be user-facing depending on the mode. I'm not sure we should say \"there is no need...\" here. Maybe \"there is no need for per-challenge user interaction when Clients have authenticated connections to Mediators\"? \ud83e\udd37 ",
              "createdAt": "2021-10-11T23:31:29Z",
              "updatedAt": "2021-10-11T23:32:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uTY4E",
          "commit": {
            "abbreviatedOid": "e8f2566"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T02:38:24Z",
          "updatedAt": "2021-10-12T02:38:24Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "Clarified with an extra statement here. I think it's a bit orthogonal to the website interaction, but good to clarify.",
              "createdAt": "2021-10-12T02:38:24Z",
              "updatedAt": "2021-10-12T02:38:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uVDNJ",
          "commit": {
            "abbreviatedOid": "5009f50"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-12T11:40:55Z",
          "updatedAt": "2021-10-12T11:41:07Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "```suggestion\r\nuser interaction. Note that the Issuance flow may separately involve user interaction if\r\nthe Mediator needs to authenticate the Client.\r\n```",
              "createdAt": "2021-10-12T11:40:55Z",
              "updatedAt": "2021-10-12T11:41:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uVi9t",
          "commit": {
            "abbreviatedOid": "5009f50"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-12T13:40:35Z",
          "updatedAt": "2021-10-12T13:40:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uX7Wx",
          "commit": {
            "abbreviatedOid": "470c060"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Late, but LGTM.",
          "createdAt": "2021-10-13T02:11:38Z",
          "updatedAt": "2021-10-13T02:11:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 74,
      "id": "PR_kwDOEwrMS84tCygy",
      "title": "Add discussion of tracking using client token state.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/74",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "First cut at #67.",
      "createdAt": "2021-10-11T23:40:55Z",
      "updatedAt": "2021-10-12T17:21:37Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a030580160122ed264188c8c20a00ab2e8273cd6",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/tracking",
      "headRefOid": "4bcd44965c7bda383b6d402739708c6d45d46de7",
      "closedAt": "2021-10-12T17:21:37Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uVkCj",
          "commit": {
            "abbreviatedOid": "47746cc"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T13:43:56Z",
          "updatedAt": "2021-10-12T13:43:56Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Might be worth specifying what counts as a context, specifically whether it's limited to the policy window.",
              "createdAt": "2021-10-12T13:43:56Z",
              "updatedAt": "2021-10-12T13:43:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWSc3",
          "commit": {
            "abbreviatedOid": "47746cc"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T16:12:07Z",
          "updatedAt": "2021-10-12T16:12:07Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I gave an example after the comma -- \"such as a website load event\" -- do you think more is needed here?",
              "createdAt": "2021-10-12T16:12:07Z",
              "updatedAt": "2021-10-12T16:12:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWgtR",
          "commit": {
            "abbreviatedOid": "47746cc"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T17:10:48Z",
          "updatedAt": "2021-10-12T17:14:29Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "```suggestion\r\nTokens from being collected in one session and then presented to the Origin in another.\r\n```",
              "createdAt": "2021-10-12T17:10:48Z",
              "updatedAt": "2021-10-12T17:14:29Z"
            },
            {
              "originalPosition": 35,
              "body": "It's very specifically not a policy window\u2014there can be many challenges in a window. \r\n\r\nI'd suggest maybe phrasing this all as: \"Origins SHOULD only generate token challenges based on client action, such as when a user loads a website. Clients SHOULD ignore token challenges if an Origin tries to force the client to present tokens multiple times without any new client-initiated action.\"",
              "createdAt": "2021-10-12T17:14:15Z",
              "updatedAt": "2021-10-12T17:14:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWiql",
          "commit": {
            "abbreviatedOid": "3951ff0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T17:19:38Z",
          "updatedAt": "2021-10-12T17:19:38Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "That works for me. We should probably describe contexts in the intro somewhere, too.",
              "createdAt": "2021-10-12T17:19:38Z",
              "updatedAt": "2021-10-12T17:19:38Z"
            }
          ]
        }
      ]
    },
    {
      "number": 75,
      "id": "PR_kwDOEwrMS84tFbLQ",
      "title": "Clarify client guardrails for tracking",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/75",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #67. I botched the other branch. \ud83e\udd37 ",
      "createdAt": "2021-10-12T17:27:07Z",
      "updatedAt": "2021-10-12T17:29:59Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "26b18974761e8473b3494863b9c08afe3ae83e8a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/tracking-redux",
      "headRefOid": "4a9f679f09236562f0a88f539448c8cbd9b9f55e",
      "closedAt": "2021-10-12T17:29:59Z",
      "mergedAt": "2021-10-12T17:29:59Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f60b87e67dcf103d62d8b1597e7875b8c69317a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uWknB",
          "commit": {
            "abbreviatedOid": "4a9f679"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-12T17:28:20Z",
          "updatedAt": "2021-10-12T17:28:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 76,
      "id": "PR_kwDOEwrMS84tFjX7",
      "title": "Token key ID and rotation",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/76",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #57.",
      "createdAt": "2021-10-12T18:13:38Z",
      "updatedAt": "2021-10-13T19:49:50Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "f60b87e67dcf103d62d8b1597e7875b8c69317a9",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/dangling-content",
      "headRefOid": "330e38c94550666110702968dae0371c3ba64ec3",
      "closedAt": "2021-10-13T11:56:59Z",
      "mergedAt": "2021-10-13T11:56:59Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "3130b7f806005937e47de8998ed5bc34bf848a67"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uWvTu",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:17:45Z",
          "updatedAt": "2021-10-12T18:17:45Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "A nit, but why support 3072 instead of jumping straight to 4096?",
              "createdAt": "2021-10-12T18:17:45Z",
              "updatedAt": "2021-10-12T18:17:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWw0M",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:24:50Z",
          "updatedAt": "2021-10-12T18:24:50Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "Mainly to let cost scale as needed, but I agree that 256/512 is probably sufficient.",
              "createdAt": "2021-10-12T18:24:50Z",
              "updatedAt": "2021-10-12T18:24:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWwNn",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:21:55Z",
          "updatedAt": "2021-10-12T18:25:42Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Should we be more strict here?\r\n\r\nIssuers should publish their expected rotation schedule, which would include the hard deadline origins must pick up new keys by.",
              "createdAt": "2021-10-12T18:21:55Z",
              "updatedAt": "2021-10-12T18:25:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWxLs",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:26:38Z",
          "updatedAt": "2021-10-12T18:26:38Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Possibly, though that seems external to the protocol details. Maybe something to note in a \"deployment considerations\" section?",
              "createdAt": "2021-10-12T18:26:38Z",
              "updatedAt": "2021-10-12T18:26:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWx21",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:29:46Z",
          "updatedAt": "2021-10-12T18:30:15Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Is 8 bits sufficiently short to not allow origin tagging? It seems like this would allow a fair amount of correlation across clients. Could we go lower?",
              "createdAt": "2021-10-12T18:29:46Z",
              "updatedAt": "2021-10-12T18:30:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWyTh",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:31:55Z",
          "updatedAt": "2021-10-12T18:31:56Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "Sure, 8 was just a placeholder. We can probably get away with one or two. ",
              "createdAt": "2021-10-12T18:31:55Z",
              "updatedAt": "2021-10-12T18:31:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWzp5",
          "commit": {
            "abbreviatedOid": "058171d"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:38:35Z",
          "updatedAt": "2021-10-12T18:38:35Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Added below.",
              "createdAt": "2021-10-12T18:38:35Z",
              "updatedAt": "2021-10-12T18:38:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uWz9T",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:40:05Z",
          "updatedAt": "2021-10-12T18:40:05Z",
          "comments": [
            {
              "originalPosition": 87,
              "body": "I'd recommend keeping it at 8 bits for now and then letting the WG bash out the number of bits we care about.",
              "createdAt": "2021-10-12T18:40:05Z",
              "updatedAt": "2021-10-12T18:40:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uW0DC",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:40:31Z",
          "updatedAt": "2021-10-12T18:40:32Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "@smhendrickson since we need to avoid collisions in the key IDs, can we say something about rejection sampling during key rotation?",
              "createdAt": "2021-10-12T18:40:31Z",
              "updatedAt": "2021-10-12T18:40:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uW0mn",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:43:18Z",
          "updatedAt": "2021-10-12T18:43:18Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "Where the scope is all keys (across all origins) an individual issuer is responsible for?",
              "createdAt": "2021-10-12T18:43:18Z",
              "updatedAt": "2021-10-12T18:43:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uW07M",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-12T18:44:45Z",
          "updatedAt": "2021-10-12T18:44:45Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "I think just a single origin, since the issuer is basically using the tuple (origin_name, token_key_id) to figure out what private key to use. The issuer only needs to ensure that token_key_id values are distinct for the same origin.",
              "createdAt": "2021-10-12T18:44:45Z",
              "updatedAt": "2021-10-12T18:44:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uXcLJ",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-12T21:50:54Z",
          "updatedAt": "2021-10-12T21:50:54Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uX-E2",
          "commit": {
            "abbreviatedOid": "e38caf5"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "A few minor points, but LGTM.",
          "createdAt": "2021-10-13T02:37:08Z",
          "updatedAt": "2021-10-13T02:48:50Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "Normally, this would be a server workflow, would it not? Clients may not have a workflow here... perhaps the Client could respond with an empty response and allow the Server to follow the auth failure workflow as necessary?",
              "createdAt": "2021-10-13T02:37:08Z",
              "updatedAt": "2021-10-13T02:48:50Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nmapping_generator, mapping_proof, blinded_req, and origin information.\r\n```",
              "createdAt": "2021-10-13T02:40:19Z",
              "updatedAt": "2021-10-13T02:48:50Z"
            },
            {
              "originalPosition": 128,
              "body": "```suggestion\r\n- For version 1, the AccessTokenRequest.token_key_id corresponds to the ID of the ORIGIN_TOKEN_KEY\r\nfor the corresponding ORIGIN_NAME\r\n```\r\n... unless I'm missing something",
              "createdAt": "2021-10-13T02:45:11Z",
              "updatedAt": "2021-10-13T02:48:50Z"
            },
            {
              "originalPosition": 255,
              "body": "```suggestion\r\n# Deployment Considerations {#deploy}\r\n```",
              "createdAt": "2021-10-13T02:48:06Z",
              "updatedAt": "2021-10-13T02:48:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uZneb",
          "commit": {
            "abbreviatedOid": "69ec8e0"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T11:56:15Z",
          "updatedAt": "2021-10-13T11:56:15Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "There can be multiple token keys for the origin (considering rotation), so I think the current text captures that better.",
              "createdAt": "2021-10-13T11:56:15Z",
              "updatedAt": "2021-10-13T11:56:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ubtek",
          "commit": {
            "abbreviatedOid": "330e38c"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T19:41:28Z",
          "updatedAt": "2021-10-13T19:41:28Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "Ah, then it should be \"the ID of an ORIGIN_TOKEN_KEY for the corresponding ORIGIN_NAME\". There can be multiple instances of only the ORIGIN_TOKEN_KEY, the rest of them (the ID for a given key, the name of the origin) should be singular.",
              "createdAt": "2021-10-13T19:41:28Z",
              "updatedAt": "2021-10-13T19:41:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ubvPg",
          "commit": {
            "abbreviatedOid": "330e38c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T19:49:49Z",
          "updatedAt": "2021-10-13T19:49:50Z",
          "comments": [
            {
              "originalPosition": 128,
              "body": "Yep, that's fine too!",
              "createdAt": "2021-10-13T19:49:49Z",
              "updatedAt": "2021-10-13T19:49:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 79,
      "id": "PR_kwDOEwrMS84tKmdM",
      "title": "ORIGIN_TOKEN_KEY rotation deployment info",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/79",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This brings up a few more questions:\r\n - Should we update the API Endpoints section to contain APIs for querying these keys per origin?\r\n - Does the ISSUER_KEY need a well defined rotation policy?\r\n\r\n#57 related",
      "createdAt": "2021-10-13T20:36:31Z",
      "updatedAt": "2021-10-14T18:33:39Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "3130b7f806005937e47de8998ed5bc34bf848a67",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "smhendrickson-patch-2",
      "headRefOid": "0409bebb6c5ea98b463778114433ec5f3361d9c2",
      "closedAt": "2021-10-14T17:00:22Z",
      "mergedAt": "2021-10-14T17:00:22Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "227ee1a8785d2c6308b5e0972770c14ea43e7da4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ub7Qv",
          "commit": {
            "abbreviatedOid": "b6f7d38"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T20:45:50Z",
          "updatedAt": "2021-10-13T20:46:22Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "```suggestion\r\nIssuers SHOULD generate a new (ORIGIN_TOKEN_KEY, ORIGIN_SECRET) regularly, and SHOULD maintain old and new secrets to allow for graceful updates. The RECOMMENDED rotation interval is two times the length of the policy window for that information. During generation, issuers must ensure the `token_key_id` (the 8-bit prefix of SHA256(ORIGIN_TOKEN_KEY) is different from all other `token_key_id` values for that origin current in rotation. One way to ensure this uniqueness is via rejection sampling.\r\n```",
              "createdAt": "2021-10-13T20:45:50Z",
              "updatedAt": "2021-10-13T20:46:22Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\n```\r\n\r\nWith the suggestion above, I _think_ we can drop this bit!",
              "createdAt": "2021-10-13T20:46:19Z",
              "updatedAt": "2021-10-13T20:46:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ucCiC",
          "commit": {
            "abbreviatedOid": "26b638a"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-13T21:22:23Z",
          "updatedAt": "2021-10-13T21:22:23Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "Beautiful. Relaxes the constraints a bit, but that is fine.",
              "createdAt": "2021-10-13T21:22:23Z",
              "updatedAt": "2021-10-13T21:22:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ucsnH",
          "commit": {
            "abbreviatedOid": "26b638a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "You may want to wrap this onto multiple lines, but I don't mind terribly much.",
          "createdAt": "2021-10-14T03:24:34Z",
          "updatedAt": "2021-10-14T03:24:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ufkXZ",
          "commit": {
            "abbreviatedOid": "26b638a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T17:00:08Z",
          "updatedAt": "2021-10-14T17:00:09Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\nIssuers SHOULD generate a new (ORIGIN_TOKEN_KEY, ORIGIN_SECRET) regularly, and\r\nSHOULD maintain old and new secrets to allow for graceful updates. The RECOMMENDED\r\nrotation interval is two times the length of the policy window for that\r\ninformation. During generation, issuers must ensure the `token_key_id` (the 8-bit\r\nprefix of SHA256(ORIGIN_TOKEN_KEY) is different from all other `token_key_id`\r\nvalues for that origin currently in rotation. One way to ensure this uniqueness\r\nis via rejection sampling.\r\n```\r\n(wrap and typo fix)",
              "createdAt": "2021-10-14T17:00:08Z",
              "updatedAt": "2021-10-14T17:00:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ufkYV",
          "commit": {
            "abbreviatedOid": "26b638a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-14T17:00:12Z",
          "updatedAt": "2021-10-14T17:00:12Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ufxLi",
          "commit": {
            "abbreviatedOid": "0409beb"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A bit late, but LGTM, with one comment.",
          "createdAt": "2021-10-14T17:54:36Z",
          "updatedAt": "2021-10-14T17:54:50Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "For clarity, I would propose adding some more text here instead of just saying \"rejection sampling\", or remove that sentence entirely.",
              "createdAt": "2021-10-14T17:54:36Z",
              "updatedAt": "2021-10-14T17:54:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ufyy-",
          "commit": {
            "abbreviatedOid": "0409beb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T18:01:33Z",
          "updatedAt": "2021-10-14T18:01:34Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "\ud83d\udc4d @smhendrickson would you mind adding some more color in a followup PR?",
              "createdAt": "2021-10-14T18:01:33Z",
              "updatedAt": "2021-10-14T18:01:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uf5z1",
          "commit": {
            "abbreviatedOid": "0409beb"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T18:33:39Z",
          "updatedAt": "2021-10-14T18:33:39Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Sent https://github.com/tfpauly/privacy-proxy/pull/81",
              "createdAt": "2021-10-14T18:33:39Z",
              "updatedAt": "2021-10-14T18:33:39Z"
            }
          ]
        }
      ]
    },
    {
      "number": 80,
      "id": "PR_kwDOEwrMS84tNtLd",
      "title": "Dependency pointers and implementation requirement clarification",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/80",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The NIZK proof section is sort of dangling on its own, so we may want to further shuffle things around. What do folks think about this structure?",
      "createdAt": "2021-10-14T17:48:05Z",
      "updatedAt": "2021-10-14T18:54:24Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "227ee1a8785d2c6308b5e0972770c14ea43e7da4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/dependencies",
      "headRefOid": "a4ff4a5698c11a9e4294aaf40b79f4c88e561c66",
      "closedAt": "2021-10-14T18:54:24Z",
      "mergedAt": "2021-10-14T18:54:24Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2ce31e4145695b4cd0f6f9f07e192ab7ca1e68bb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ufyB3",
          "commit": {
            "abbreviatedOid": "a4ff4a5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good, thanks!",
          "createdAt": "2021-10-14T17:58:13Z",
          "updatedAt": "2021-10-14T17:58:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84uf8QL",
          "commit": {
            "abbreviatedOid": "a4ff4a5"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-14T18:42:15Z",
          "updatedAt": "2021-10-14T18:42:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 81,
      "id": "PR_kwDOEwrMS84tN0nE",
      "title": "Merge pull request #79 from tfpauly/smhendrickson-patch-2",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/81",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Describe rejection sampling technique for ORIGIN_TOKEN_KEY generation",
      "createdAt": "2021-10-14T18:32:46Z",
      "updatedAt": "2021-10-14T20:47:40Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "227ee1a8785d2c6308b5e0972770c14ea43e7da4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "rejectionsampling",
      "headRefOid": "023d97b05fc2acdb7129dc430a978e11df280fda",
      "closedAt": "2021-10-14T20:47:40Z",
      "mergedAt": "2021-10-14T20:47:40Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5cff56649f94d601080de0eee76404ff51b0df34"
      },
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "@janaiyengar PTAL",
          "createdAt": "2021-10-14T18:33:25Z",
          "updatedAt": "2021-10-14T18:33:25Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uf_Cy",
          "commit": {
            "abbreviatedOid": "023d97b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-14T18:55:04Z",
          "updatedAt": "2021-10-14T18:55:04Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ugWbB",
          "commit": {
            "abbreviatedOid": "023d97b"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Thanks, @smhendrickson -- this is great!",
          "createdAt": "2021-10-14T20:46:17Z",
          "updatedAt": "2021-10-14T20:46:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 82,
      "id": "PR_kwDOEwrMS84tN99n",
      "title": "Adds architecture section",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/82",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "... and restructures the top part a bit. I've also introduced PAT as an acronym, but I'm not wedded to it. For consistency though, it's best if we choose a term (Private Access Tokens, Access Tokens, Tokens, PATs) and stick to it.\r\n\r\nThe [rendered version](https://tfpauly.github.io/privacy-proxy/jri/arch/draft-private-access-tokens.html) might be easier to read.\r\n\r\nCloses #35.",
      "createdAt": "2021-10-14T19:27:22Z",
      "updatedAt": "2021-10-15T01:47:43Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5cff56649f94d601080de0eee76404ff51b0df34",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/arch",
      "headRefOid": "4b0081d2e90decda8491b38e40a05782d2412a58",
      "closedAt": "2021-10-15T01:47:42Z",
      "mergedAt": "2021-10-15T01:47:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "fe1c8ffa10d6485cde3d4550f4d371a27a60f2a7"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ugHEW",
          "commit": {
            "abbreviatedOid": "4ce758e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Great first start!",
          "createdAt": "2021-10-14T19:32:43Z",
          "updatedAt": "2021-10-14T19:40:56Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "```suggestion\r\n1. Issuer: issues PATs to an anonymized Client on behalf of an Origin. Anonymizes Origin\r\n   to the Mediator and Enforces the Origin's policy.\r\n```",
              "createdAt": "2021-10-14T19:32:43Z",
              "updatedAt": "2021-10-14T19:40:56Z"
            },
            {
              "originalPosition": 121,
              "body": "```suggestion\r\n- authenticate and associate the Client with a stable identifier;\r\n```",
              "createdAt": "2021-10-14T19:33:41Z",
              "updatedAt": "2021-10-14T19:40:56Z"
            },
            {
              "originalPosition": 137,
              "body": "```suggestion\r\nenforces the Origin's policies based on the received Client issuance state and \r\nOrigin policy. Issuers know the Origin's policies and enforce them on behalf of the\r\n```",
              "createdAt": "2021-10-14T19:35:22Z",
              "updatedAt": "2021-10-14T19:40:56Z"
            },
            {
              "originalPosition": 198,
              "body": "```suggestion\r\n  targeted (ISSUER_NAME), the period of time for which the Issuer's policy\r\n  is valid (ISSUER_POLICY_WINDOW), and the number of tokens issued to a\r\n  given Client for the claimed Origin in the given policy window. \r\n  The Mediator does not know the identity of\r\n```",
              "createdAt": "2021-10-14T19:36:56Z",
              "updatedAt": "2021-10-14T19:40:56Z"
            },
            {
              "originalPosition": 205,
              "body": "```suggestion\r\n- The Issuer knows the Origin's secret (ORIGIN_SECRET) and policy about client access, and \r\n  learns sees the Origin's dentity (ORIGIN_NAME) and the number of previous tokens issued \r\n  to the Client (as communicated by the Mediator) during issuance. The Issuer does not learn\r\n  the Client's identity.\r\n```",
              "createdAt": "2021-10-14T19:38:42Z",
              "updatedAt": "2021-10-14T19:40:56Z"
            },
            {
              "originalPosition": 209,
              "body": "```suggestion\r\n  Issuer. The Origin does not learn which Mediator was used by a Client for issuance.\r\n```",
              "createdAt": "2021-10-14T19:39:07Z",
              "updatedAt": "2021-10-14T19:40:57Z"
            },
            {
              "originalPosition": 227,
              "body": "We should probably also add something about client state here, which is required to be kept for origins (ANON_ORIGIN_ID) and the mediator (CLIENT_SECRET).",
              "createdAt": "2021-10-14T19:40:27Z",
              "updatedAt": "2021-10-14T19:40:57Z"
            },
            {
              "originalPosition": 256,
              "body": "Markdown automagically generates this, so this may not be needed?",
              "createdAt": "2021-10-14T19:40:47Z",
              "updatedAt": "2021-10-14T19:40:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ugI1E",
          "commit": {
            "abbreviatedOid": "4ce758e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "I think we ought to add more details about Client state requirements, but otherwise this seems to hit all the right points.",
          "createdAt": "2021-10-14T19:41:30Z",
          "updatedAt": "2021-10-14T19:41:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ugkPi",
          "commit": {
            "abbreviatedOid": "4ce758e"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T21:59:38Z",
          "updatedAt": "2021-10-14T21:59:38Z",
          "comments": [
            {
              "originalPosition": 137,
              "body": "Ah, good catch -- thanks!",
              "createdAt": "2021-10-14T21:59:38Z",
              "updatedAt": "2021-10-14T21:59:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ugklk",
          "commit": {
            "abbreviatedOid": "4ce758e"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T22:01:48Z",
          "updatedAt": "2021-10-14T22:01:48Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Didn't realize that... but might be easier for consistency with other sections",
              "createdAt": "2021-10-14T22:01:48Z",
              "updatedAt": "2021-10-14T22:01:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uglpt",
          "commit": {
            "abbreviatedOid": "f2b12eb"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T22:08:55Z",
          "updatedAt": "2021-10-14T22:08:56Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "Good point, will add something.",
              "createdAt": "2021-10-14T22:08:55Z",
              "updatedAt": "2021-10-14T22:08:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ugnBT",
          "commit": {
            "abbreviatedOid": "f2b12eb"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-14T22:18:40Z",
          "updatedAt": "2021-10-14T22:18:40Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Yeah, whatever works :) Feel free to ignore this comment.",
              "createdAt": "2021-10-14T22:18:40Z",
              "updatedAt": "2021-10-14T22:18:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ugxxr",
          "commit": {
            "abbreviatedOid": "f2b12eb"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-14T23:35:25Z",
          "updatedAt": "2021-10-14T23:44:00Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\nThis document describes an architecture for Private Access Tokens (PATs),\r\n```\r\n\r\nHaving \"uses\" followed by \"using\" felt like a bit much (in existing text)",
              "createdAt": "2021-10-14T23:35:25Z",
              "updatedAt": "2021-10-14T23:44:00Z"
            },
            {
              "originalPosition": 78,
              "body": "Here, \"its\" refers to the Origin, but I'm concerned it could sound like it's for the Client.\r\n\r\n```suggestion\r\nthe absence of a stable Client identifier, an Origin needs to verify a\r\nconnecting Client's identity and enforce access policies for the incoming\r\n```",
              "createdAt": "2021-10-14T23:38:11Z",
              "updatedAt": "2021-10-15T00:46:43Z"
            },
            {
              "originalPosition": 107,
              "body": "```suggestion\r\nAn Origin designates a trusted Issuer to issue tokens for it. The Origin then\r\n```",
              "createdAt": "2021-10-14T23:39:10Z",
              "updatedAt": "2021-10-14T23:44:00Z"
            },
            {
              "originalPosition": 137,
              "body": "```suggestion\r\ntheir use cases are discussed in {{examples}}. The Issuer does not learn the\r\n```",
              "createdAt": "2021-10-14T23:40:24Z",
              "updatedAt": "2021-10-14T23:44:00Z"
            },
            {
              "originalPosition": 146,
              "body": "```suggestion\r\nverifying a PAT presented by the Client. Verification of this\r\n```",
              "createdAt": "2021-10-14T23:40:46Z",
              "updatedAt": "2021-10-14T23:44:00Z"
            },
            {
              "originalPosition": 206,
              "body": "```suggestion\r\n- The Origin knows the Issuer to which it will delegate an incoming Client (ISSUER_NAME),\r\n```",
              "createdAt": "2021-10-14T23:42:54Z",
              "updatedAt": "2021-10-14T23:44:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ug4b9",
          "commit": {
            "abbreviatedOid": "67e6d7a"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-15T00:43:40Z",
          "updatedAt": "2021-10-15T00:43:41Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "@chris-wood -- added paragraph below, ptal.",
              "createdAt": "2021-10-15T00:43:40Z",
              "updatedAt": "2021-10-15T00:43:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ug_3j",
          "commit": {
            "abbreviatedOid": "4b0081d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T01:47:20Z",
          "updatedAt": "2021-10-15T01:47:23Z",
          "comments": [
            {
              "originalPosition": 227,
              "body": "Looks great!",
              "createdAt": "2021-10-15T01:47:20Z",
              "updatedAt": "2021-10-15T01:47:23Z"
            }
          ]
        }
      ]
    },
    {
      "number": 83,
      "id": "PR_kwDOEwrMS84tO5z2",
      "title": "Add section on Client identity",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/83",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #70.\r\nCloses #49.",
      "createdAt": "2021-10-15T03:33:59Z",
      "updatedAt": "2021-10-15T20:25:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "fe1c8ffa10d6485cde3d4550f4d371a27a60f2a7",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/identity",
      "headRefOid": "35ad08b488888929479ccf80732e82d14b67425a",
      "closedAt": "2021-10-15T20:25:47Z",
      "mergedAt": "2021-10-15T20:25:47Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9a02c78bc75e75dd89f11d279bbdbf26af3e4d8b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uilFg",
          "commit": {
            "abbreviatedOid": "8d3cb12"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T13:07:36Z",
          "updatedAt": "2021-10-15T13:11:04Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "```suggestion\r\none or more Mediators, a malicious user can easily abuse the system to\r\n```",
              "createdAt": "2021-10-15T13:07:37Z",
              "updatedAt": "2021-10-15T13:11:04Z"
            },
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nseems possible for a user to abuse the system without having to create\r\n```",
              "createdAt": "2021-10-15T13:08:31Z",
              "updatedAt": "2021-10-15T13:11:04Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n  that are visible. For instance, properties that are observable in the HTTP User Agent string.\r\n```\r\nI wasn't sure what you had in mind, but maybe this works?",
              "createdAt": "2021-10-15T13:09:28Z",
              "updatedAt": "2021-10-15T13:11:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ukA-T",
          "commit": {
            "abbreviatedOid": "8d3cb12"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-15T20:00:03Z",
          "updatedAt": "2021-10-15T20:00:39Z",
          "comments": [
            {
              "originalPosition": 18,
              "body": "I like this suggestion",
              "createdAt": "2021-10-15T20:00:03Z",
              "updatedAt": "2021-10-15T20:00:39Z"
            },
            {
              "originalPosition": 21,
              "body": "Sybil?",
              "createdAt": "2021-10-15T20:00:22Z",
              "updatedAt": "2021-10-15T20:00:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ukEd6",
          "commit": {
            "abbreviatedOid": "35ad08b"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-15T20:21:08Z",
          "updatedAt": "2021-10-15T20:21:08Z",
          "comments": [
            {
              "originalPosition": 21,
              "body": "replaced with \"fake\"",
              "createdAt": "2021-10-15T20:21:08Z",
              "updatedAt": "2021-10-15T20:21:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ukEwu",
          "commit": {
            "abbreviatedOid": "35ad08b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T20:23:05Z",
          "updatedAt": "2021-10-15T20:23:05Z",
          "comments": []
        }
      ]
    },
    {
      "number": 84,
      "id": "PR_kwDOEwrMS84tO6wQ",
      "title": "Fix long line",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/84",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Figures that are > 72 characters long don't render well.",
      "createdAt": "2021-10-15T03:46:50Z",
      "updatedAt": "2021-10-15T20:01:21Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "fe1c8ffa10d6485cde3d4550f4d371a27a60f2a7",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/fixline",
      "headRefOid": "91416aed6f53f43aae0e0712e016eb768a0e8299",
      "closedAt": "2021-10-15T20:01:20Z",
      "mergedAt": "2021-10-15T20:01:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a102f15812f7401007e204365c51a6879d035e01"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ukBJo",
          "commit": {
            "abbreviatedOid": "91416ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T20:01:06Z",
          "updatedAt": "2021-10-15T20:01:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 85,
      "id": "PR_kwDOEwrMS84tO8An",
      "title": "Clarify requirements around endpoint auth",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/85",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Clarifies and proposes requirements on endpoint authentication. Also moves the requirements out of Security Considerations to up in the body of the draft.\r\n\r\nCloses #48.",
      "createdAt": "2021-10-15T04:03:27Z",
      "updatedAt": "2021-10-15T20:24:20Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "fe1c8ffa10d6485cde3d4550f4d371a27a60f2a7",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/auth",
      "headRefOid": "b074aba2953b8bf17091d48534e38568acf7a6db",
      "closedAt": "2021-10-15T20:24:20Z",
      "mergedAt": "2021-10-15T20:24:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "747c24ab44eeef2878b30170ef3e821577e081fc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uikap",
          "commit": {
            "abbreviatedOid": "84345a8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T13:04:45Z",
          "updatedAt": "2021-10-15T13:06:40Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThe Mediator and the Issuer MUST use a secure and Issuer-authenticated HTTPS\r\nconnection. Also, Issuers MUST authenticate Mediators, either via mutual\r\nTLS or another form of application-layer authentication. They MAY additionally use\r\n```",
              "createdAt": "2021-10-15T13:04:45Z",
              "updatedAt": "2021-10-15T13:06:40Z"
            },
            {
              "originalPosition": 42,
              "body": "```suggestion\r\nHTTPS. Some connections, e.g., between a Mediator and an Issuer, require\r\nmutual authentication between both endpoints. Where appropriate, endpoints \r\nMAY use further enhancements such as TLS certificate pinning to mitigate \r\nthe risk of channel compromise.\r\n```",
              "createdAt": "2021-10-15T13:06:38Z",
              "updatedAt": "2021-10-15T13:06:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ukBfe",
          "commit": {
            "abbreviatedOid": "84345a8"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good, with Chris's changes",
          "createdAt": "2021-10-15T20:03:07Z",
          "updatedAt": "2021-10-15T20:03:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 86,
      "id": "PR_kwDOEwrMS84tROKT",
      "title": "Some structural changes to the protocol section",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/86",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See diff [here](https://tools.ietf.org/rfcdiff?url1=https://tfpauly.github.io/privacy-proxy/draft-private-access-tokens.txt&url2=https://tfpauly.github.io/privacy-proxy/jri/protocol/draft-private-access-tokens.txt).",
      "createdAt": "2021-10-15T20:58:04Z",
      "updatedAt": "2021-10-15T21:09:52Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "9a02c78bc75e75dd89f11d279bbdbf26af3e4d8b",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/protocol",
      "headRefOid": "a51700225abe2f1813e154b7f722b375163c39ed",
      "closedAt": "2021-10-15T21:09:52Z",
      "mergedAt": "2021-10-15T21:09:52Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2c379db9e062fbef1ab95408653012493c9d01c2"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ukLoU",
          "commit": {
            "abbreviatedOid": "a517002"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T21:08:18Z",
          "updatedAt": "2021-10-15T21:08:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 87,
      "id": "PR_kwDOEwrMS84tRTZo",
      "title": "CLIENT_ID -> CLIENT_KEY",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/87",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-15T21:36:43Z",
      "updatedAt": "2021-10-16T02:52:46Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2c379db9e062fbef1ab95408653012493c9d01c2",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-4",
      "headRefOid": "1e04502aa688aa02f2ee41a84bc1c83b42ea3ad0",
      "closedAt": "2021-10-16T02:52:46Z",
      "mergedAt": "2021-10-16T02:52:45Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b5a4c930a1385fbb6dcf6d4df71ee090ce598706"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ukRND",
          "commit": {
            "abbreviatedOid": "93b614d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-15T21:37:20Z",
          "updatedAt": "2021-10-15T21:37:34Z",
          "comments": [
            {
              "originalPosition": 26,
              "body": "```suggestion\r\n: A public key chosen by the Client and shared only with the Mediator.\r\n```",
              "createdAt": "2021-10-15T21:37:20Z",
              "updatedAt": "2021-10-15T21:37:34Z"
            }
          ]
        }
      ]
    },
    {
      "number": 88,
      "id": "PR_kwDOEwrMS84tR5Oi",
      "title": "Fix typos in draft-private-access-tokens.md",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/88",
      "state": "MERGED",
      "author": "LorenzNickel",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-16T14:12:52Z",
      "updatedAt": "2021-10-18T08:12:38Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "b5a4c930a1385fbb6dcf6d4df71ee090ce598706",
      "headRepository": null,
      "headRefName": "patch-1",
      "headRefOid": "fb15b0e6adaeb70f09131dc726756417bc55aae5",
      "closedAt": "2021-10-18T04:09:46Z",
      "mergedAt": "2021-10-18T04:09:46Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "758fe22562fc7e06c1e56c2e7885ea6c74d6ead4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uldZC",
          "commit": {
            "abbreviatedOid": "fb15b0e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2021-10-18T04:09:09Z",
          "updatedAt": "2021-10-18T04:09:09Z",
          "comments": []
        }
      ]
    },
    {
      "number": 89,
      "id": "PR_kwDOEwrMS84tZZjJ",
      "title": "Client state loss",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/89",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Describe client state loss procedures\n\nTried to centralize this within the state requirements, and mentioned in the client-to-mediator flow.",
      "createdAt": "2021-10-19T17:10:27Z",
      "updatedAt": "2021-10-20T02:42:42Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "758fe22562fc7e06c1e56c2e7885ea6c74d6ead4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "clientstate",
      "headRefOid": "fae4d96761f5ba4218e7183dbd17acd780fcfead",
      "closedAt": "2021-10-20T02:42:42Z",
      "mergedAt": "2021-10-20T02:42:42Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "697297a225ba503e1e531182e5e6bcc3176b85fb"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Looks good, thanks @smhendrickson !",
          "createdAt": "2021-10-20T02:36:19Z",
          "updatedAt": "2021-10-20T02:36:19Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uuhm_",
          "commit": {
            "abbreviatedOid": "76024d1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T02:35:02Z",
          "updatedAt": "2021-10-20T02:35:47Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nMediators must enforce that Clients don't change their CLIENT_ID frequently, to ensure Clients can't\r\nregularily evade the per-client policy as seen by the issuer. Mediators MUST NOT allow Clients to\r\nchange their CLIENT_ID more than once within a policy window, or in the subsequent policy window\r\nafter a previous CLIENT_ID change. Alternative schemes where the mediator stores the encrypted\r\n(CLIENT_ID, CLIENT_SECRET) tuple on behalf of the client are possble but not described here.\r\n```",
              "createdAt": "2021-10-20T02:35:02Z",
              "updatedAt": "2021-10-20T02:35:47Z"
            },
            {
              "originalPosition": 53,
              "body": "```suggestion\r\nIf the Mediator detects this Client has changed their CLIENT_ID more frequently than allowed\r\n```",
              "createdAt": "2021-10-20T02:35:43Z",
              "updatedAt": "2021-10-20T02:35:47Z"
            }
          ]
        }
      ]
    },
    {
      "number": 90,
      "id": "PR_kwDOEwrMS84tatNf",
      "title": "Add privacy pass reference",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/90",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Tried to describe differences without re-explaining the world.",
      "createdAt": "2021-10-20T04:38:25Z",
      "updatedAt": "2021-10-20T18:32:05Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "697297a225ba503e1e531182e5e6bcc3176b85fb",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "relatedwork",
      "headRefOid": "06e7d54702c9ea0bde336a6dd2e6711fb509b947",
      "closedAt": "2021-10-20T18:32:05Z",
      "mergedAt": "2021-10-20T18:32:05Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2b49baa5288177a1d9aff62bc26bd4d2f278aebd"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@smhendrickson I updated the branch to move to an official appendix. I also updated the text to align better with the current protocol. Please check!",
          "createdAt": "2021-10-20T14:56:44Z",
          "updatedAt": "2021-10-20T14:56:44Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly lgtm with minor changes above. Thanks!",
          "createdAt": "2021-10-20T18:18:52Z",
          "updatedAt": "2021-10-20T18:18:52Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@smhendrickson thanks! In your last commit, I only see whitespace changes.. did everything get pushed?",
          "createdAt": "2021-10-20T18:21:45Z",
          "updatedAt": "2021-10-20T18:21:45Z"
        },
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly should be fixed. There is probably a clean way to squash those",
          "createdAt": "2021-10-20T18:28:40Z",
          "updatedAt": "2021-10-20T18:28:40Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Great, looks good!",
          "createdAt": "2021-10-20T18:31:48Z",
          "updatedAt": "2021-10-20T18:31:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uxDHI",
          "commit": {
            "abbreviatedOid": "78d894a"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T14:53:50Z",
          "updatedAt": "2021-10-20T14:53:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ux_9E",
          "commit": {
            "abbreviatedOid": "06e7d54"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-20T18:31:57Z",
          "updatedAt": "2021-10-20T18:31:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 91,
      "id": "PR_kwDOEwrMS84teFie",
      "title": "note mediator/origin timestamp collusion",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/91",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Note mediator/origin collusion.\n\nThis makes me wonder if allowing both interactive and non-interactive retains utility. While there are many deployments that can use this as is, avoiding timestamp correlation may be desirable for others. Enough so to warrent 'offline' token issuance and caching.\n\nThoughts?",
      "createdAt": "2021-10-21T03:06:51Z",
      "updatedAt": "2021-10-22T18:57:18Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "d68451f487f8a9c1ac723301c9bc5ce927070647",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "collusion",
      "headRefOid": "88a4e6d013872ac56f1441d82c3a3089bcd57c3d",
      "closedAt": "2021-10-22T18:57:18Z",
      "mergedAt": "2021-10-22T18:57:18Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "fc972eb93880d383217723563d098442146d350d"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Another way to look at this is that we expect (Origin, Issuer) to have collaboration (if not necessarily shared ownership) and (Client, Mediator) to have collaboration. If those two halves merge, such that (Origin, Issuer, Mediator) are all sharing data, what's known to one is by definition known to all. So, if you tell your identity to a Mediator who also runs the Origin and Issuer you're accessing, you shouldn't expect them to not be able to share information.\r\n\r\nEssentially, it degenerates to logging into the service directly. So the client may as well just authenticate to the origin, or treat it as if they did.",
          "createdAt": "2021-10-21T03:56:54Z",
          "updatedAt": "2021-10-21T03:56:54Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84uzOxa",
          "commit": {
            "abbreviatedOid": "a16a073"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-21T03:45:56Z",
          "updatedAt": "2021-10-21T03:46:54Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\ntiming of a request to an Origin and subsequent token issuance to a Mediator can reveal the Client\r\n```",
              "createdAt": "2021-10-21T03:45:56Z",
              "updatedAt": "2021-10-21T03:46:54Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nidentity (as known to the Mediator) to the Origin, especially if repeated over multiple accesses.\r\n```",
              "createdAt": "2021-10-21T03:46:24Z",
              "updatedAt": "2021-10-21T03:46:54Z"
            },
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nA Mediator and Origin can collude to reveal a client's identity through timestamp correlation. The\r\n```",
              "createdAt": "2021-10-21T03:46:51Z",
              "updatedAt": "2021-10-21T03:46:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uzPI-",
          "commit": {
            "abbreviatedOid": "58719b9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-21T03:50:10Z",
          "updatedAt": "2021-10-21T03:50:11Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "```suggestion\r\nIf a Mediator and Origin collude, they could correlate a client's identity and origin access patterns through timestamp correlation. The\r\n```",
              "createdAt": "2021-10-21T03:50:10Z",
              "updatedAt": "2021-10-21T03:50:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uzPVh",
          "commit": {
            "abbreviatedOid": "58719b9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-21T03:52:22Z",
          "updatedAt": "2021-10-21T03:52:22Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "I'm not sure this makes sense to have \"origin\" under \"ownership\" here, since we talk only about collusion and not ownership for this case.",
              "createdAt": "2021-10-21T03:52:22Z",
              "updatedAt": "2021-10-21T03:52:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84uzPb1",
          "commit": {
            "abbreviatedOid": "58719b9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-21T03:53:29Z",
          "updatedAt": "2021-10-21T03:53:30Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "I think we should focus on correlating identity and access... it doesn't directly reveal just the client to the origin, it allows the origin and mediator to compare notes.",
              "createdAt": "2021-10-21T03:53:29Z",
              "updatedAt": "2021-10-21T03:53:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u6RxT",
          "commit": {
            "abbreviatedOid": "58719b9"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This seems useful, thanks! I have a couple of comments and responses. ",
          "createdAt": "2021-10-22T16:01:47Z",
          "updatedAt": "2021-10-22T16:06:54Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This is a good point. It might make sense to change the title of this section to reflect this... I think the primary reason we talk about ownership is collusion, so perhaps the section should be all about collusion.\r\n```suggestion\r\n## Collusion Among Different Entities\r\n\r\nCollusion among the different entities in the PAT architecture can result in\r\nviolation of the Client's privacy.\r\n\r\n```",
              "createdAt": "2021-10-22T16:01:47Z",
              "updatedAt": "2021-10-22T16:06:54Z"
            },
            {
              "originalPosition": 14,
              "body": "With the text mod above, I think this now says that this correlation can result in identity leak, which seems reasonable.",
              "createdAt": "2021-10-22T16:06:26Z",
              "updatedAt": "2021-10-22T16:06:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u619J",
          "commit": {
            "abbreviatedOid": "efe32de"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-22T18:55:09Z",
          "updatedAt": "2021-10-22T18:55:10Z",
          "comments": [
            {
              "originalPosition": 17,
              "body": "```suggestion\r\nIf a Mediator and Origin are able to collude, they can correlate a client's identity and origin access patterns through timestamp correlation. The\r\n```",
              "createdAt": "2021-10-22T18:55:09Z",
              "updatedAt": "2021-10-22T18:55:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u62E8",
          "commit": {
            "abbreviatedOid": "88a4e6d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-22T18:55:47Z",
          "updatedAt": "2021-10-22T18:55:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 92,
      "id": "PR_kwDOEwrMS84tkMLW",
      "title": "Reference collusion risks earlier in document",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/92",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Add a description of collusion risk to the properties section, and point to privacy considerations.",
      "createdAt": "2021-10-22T19:36:20Z",
      "updatedAt": "2021-10-25T16:46:05Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "fc972eb93880d383217723563d098442146d350d",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-5",
      "headRefOid": "1645a2396aba25868038fee5aa7a7fb211862a20",
      "closedAt": "2021-10-25T15:09:12Z",
      "mergedAt": "2021-10-25T15:09:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "6abc82c42b67670f83fbd9a18fbea3f6364b4e2d"
      },
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "late lgtm",
          "createdAt": "2021-10-25T16:46:05Z",
          "updatedAt": "2021-10-25T16:46:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84u-7uc",
          "commit": {
            "abbreviatedOid": "1645a23"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T15:01:34Z",
          "updatedAt": "2021-10-25T15:01:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 93,
      "id": "PR_kwDOEwrMS84tonvN",
      "title": "Align parameter configuration with best practices (ACME)",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/93",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "See [the ACME spec](https://datatracker.ietf.org/doc/html/rfc8555#section-7.1).",
      "createdAt": "2021-10-25T16:05:46Z",
      "updatedAt": "2021-10-25T19:24:14Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "f21b108dd841722be382b41b1568cf7366797262",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/acme-ify",
      "headRefOid": "a07ff4efce6124b33ccb2e12b011e2baf7d10d15",
      "closedAt": "2021-10-25T19:24:14Z",
      "mergedAt": "2021-10-25T19:24:14Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5e6919e439e784c15484f44030b9b608eef19148"
      },
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "Can we provide an example json object for folks to reference?",
          "createdAt": "2021-10-25T19:10:09Z",
          "updatedAt": "2021-10-25T19:10:09Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84u_Pwy",
          "commit": {
            "abbreviatedOid": "82988d7"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T16:07:28Z",
          "updatedAt": "2021-10-25T16:07:28Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84u_Zjf",
          "commit": {
            "abbreviatedOid": "82988d7"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T16:44:47Z",
          "updatedAt": "2021-10-25T16:44:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84u_7Ho",
          "commit": {
            "abbreviatedOid": "82988d7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T19:07:41Z",
          "updatedAt": "2021-10-25T19:07:42Z",
          "comments": [
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nand are located at the well-known location /.well-known/private-access-tokens-directory.\r\n```",
              "createdAt": "2021-10-25T19:07:42Z",
              "updatedAt": "2021-10-25T19:07:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u_74U",
          "commit": {
            "abbreviatedOid": "9300302"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T19:11:14Z",
          "updatedAt": "2021-10-25T19:11:15Z",
          "comments": [
            {
              "originalPosition": 51,
              "body": "```suggestion\r\n| issuer-key           | ISSUER_KEY resource URL           |\r\n| issuer-policy-window | ISSUER_POLICY_WINDOW resource URL |\r\n| issuer-request-uri   | ISSUER_REQUEST_URI resource URL   |\r\n```",
              "createdAt": "2021-10-25T19:11:14Z",
              "updatedAt": "2021-10-25T19:11:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u_78W",
          "commit": {
            "abbreviatedOid": "9300302"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T19:11:32Z",
          "updatedAt": "2021-10-25T19:11:43Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n| mediator-request-uri | MEDIATOR_REQUEST_URI resource URL |\r\n```",
              "createdAt": "2021-10-25T19:11:32Z",
              "updatedAt": "2021-10-25T19:11:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84u_-a7",
          "commit": {
            "abbreviatedOid": "f0c2df2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T19:23:18Z",
          "updatedAt": "2021-10-25T19:23:49Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nAs an example, the Issuer's JSON directory could look like:\r\n```",
              "createdAt": "2021-10-25T19:23:18Z",
              "updatedAt": "2021-10-25T19:23:49Z"
            },
            {
              "originalPosition": 71,
              "body": "```suggestion\r\n~~~\r\n```",
              "createdAt": "2021-10-25T19:23:42Z",
              "updatedAt": "2021-10-25T19:23:49Z"
            }
          ]
        }
      ]
    },
    {
      "number": 94,
      "id": "PR_kwDOEwrMS84tpMVv",
      "title": "batched tokens",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/94",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Note in examples that clients may reuse tokens up to `max-age` to support batch use cases.",
      "createdAt": "2021-10-25T19:25:40Z",
      "updatedAt": "2021-10-25T19:36:42Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5e6919e439e784c15484f44030b9b608eef19148",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "batch",
      "headRefOid": "a9dfc61ba11ec19a624f764daba605154112f020",
      "closedAt": "2021-10-25T19:36:41Z",
      "mergedAt": "2021-10-25T19:36:41Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8d08ccb7eb6d28bde5dbc901ae11197be654c65f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84vAA0o",
          "commit": {
            "abbreviatedOid": "082115b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-10-25T19:34:43Z",
          "updatedAt": "2021-10-25T19:34:50Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nClients can redeem a token from a specific challenge up to the `max-age` in the challenge.\r\nServers can choose to issue many challenges in a single HTTP 401 response, providing the\r\nclient with many challenge nonces which can be used to redeem tokens over a longer period\r\nof time.\r\n```",
              "createdAt": "2021-10-25T19:34:44Z",
              "updatedAt": "2021-10-25T19:34:50Z"
            }
          ]
        }
      ]
    },
    {
      "number": 95,
      "id": "PR_kwDOEwrMS84tpPRQ",
      "title": "Explain multiple challenges",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/95",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "",
      "createdAt": "2021-10-25T19:44:04Z",
      "updatedAt": "2021-10-25T19:47:34Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "8d08ccb7eb6d28bde5dbc901ae11197be654c65f",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-6",
      "headRefOid": "f04253e7d21cd29d7ed50079113b2c4c1e0a8fa4",
      "closedAt": "2021-10-25T19:47:34Z",
      "mergedAt": "2021-10-25T19:47:34Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "f26a2ee791d50a5a8ff54def5191cacbe38b96a4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84vADdb",
          "commit": {
            "abbreviatedOid": "f04253e"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T19:46:55Z",
          "updatedAt": "2021-10-25T19:46:55Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84vADkY",
          "commit": {
            "abbreviatedOid": "f04253e"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T19:47:26Z",
          "updatedAt": "2021-10-25T19:47:26Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84vADmA",
          "commit": {
            "abbreviatedOid": "f04253e"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-10-25T19:47:32Z",
          "updatedAt": "2021-10-25T19:47:32Z",
          "comments": []
        }
      ]
    },
    {
      "number": 103,
      "id": "PR_kwDOEwrMS84uHYaJ",
      "title": "Rename name_key_id to issuer_key_id",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/103",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #99",
      "createdAt": "2021-11-04T20:53:09Z",
      "updatedAt": "2021-11-04T21:18:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "52aced91df1da914043dc0ccbf6b4ecdf2c7b0d5",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-7",
      "headRefOid": "611f0f1279c89025c2c8c7919a429ec4459b15da",
      "closedAt": "2021-11-04T21:18:55Z",
      "mergedAt": "2021-11-04T21:18:54Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "78fefd5e0d81a95ff1e6aa8abbce7262083c0ddb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84vlGJr",
          "commit": {
            "abbreviatedOid": "611f0f1"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-04T20:53:58Z",
          "updatedAt": "2021-11-04T20:53:58Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84vlLFQ",
          "commit": {
            "abbreviatedOid": "611f0f1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-04T21:18:46Z",
          "updatedAt": "2021-11-04T21:18:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 104,
      "id": "PR_kwDOEwrMS84uHi9h",
      "title": "Blind the right thing",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/104",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-11-04T21:48:44Z",
      "updatedAt": "2021-11-05T01:12:02Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "78fefd5e0d81a95ff1e6aa8abbce7262083c0ddb",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "chris-wood-patch-1",
      "headRefOid": "9c6f41e737d9e63098cdf9bd98c7cd2d76d5707b",
      "closedAt": "2021-11-05T01:12:02Z",
      "mergedAt": "2021-11-05T01:12:02Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e57cc39a05885937f00179c78b91387ac4133898"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84vlvyp",
          "commit": {
            "abbreviatedOid": "9c6f41e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-05T01:11:56Z",
          "updatedAt": "2021-11-05T01:11:56Z",
          "comments": []
        }
      ]
    },
    {
      "number": 106,
      "id": "PR_kwDOEwrMS84ukN8w",
      "title": "Isolate mapping computation to simplify presentation",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/106",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The only remaining piece of \"crypto\" in the issuance flow description is the blind RSA bits. I'm not yet sure what we want to do with that, but I feel like this sort of extraction is useful for clarity. I'm happy to hear alternative proposals for presentations, too!\r\n\r\nCloses #101.\r\n\r\ncc @FredericJacobs ",
      "createdAt": "2021-11-16T02:41:35Z",
      "updatedAt": "2021-11-17T20:19:45Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e57cc39a05885937f00179c78b91387ac4133898",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/isolate-mapping",
      "headRefOid": "bc8695621d35c6d2b863f9e87d811c8fdead02c5",
      "closedAt": "2021-11-17T20:19:45Z",
      "mergedAt": "2021-11-17T20:19:45Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "ce8a90fb8da6ed6e8ac949e8145beadf2170c95f"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks @dvorak42! I applied your suggestions.",
          "createdAt": "2021-11-17T18:55:06Z",
          "updatedAt": "2021-11-17T18:55:06Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84wN9o4",
          "commit": {
            "abbreviatedOid": "3074877"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks reasonable.",
          "createdAt": "2021-11-17T18:06:48Z",
          "updatedAt": "2021-11-17T18:29:13Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "nit: corresponding",
              "createdAt": "2021-11-17T18:06:48Z",
              "updatedAt": "2021-11-17T18:29:13Z"
            },
            {
              "originalPosition": 169,
              "body": "nit: initiating",
              "createdAt": "2021-11-17T18:09:34Z",
              "updatedAt": "2021-11-17T18:29:13Z"
            },
            {
              "originalPosition": 152,
              "body": "The wording here is a little confusing, maybe reword cannot engage with mediator prevents? Also say something about what people learn about k?",
              "createdAt": "2021-11-17T18:25:00Z",
              "updatedAt": "2021-11-17T18:29:13Z"
            },
            {
              "originalPosition": 249,
              "body": "Maybe subsection each half of the mediator protocol? Wonder if it should just be split in protocol order:\r\n\r\nClient Behavior\r\nMediator Behavior (Client Key Verification)\r\nIssuer Behavior\r\nMediator Behavior (Output)\r\n\r\nThough this seems fine.",
              "createdAt": "2021-11-17T18:26:17Z",
              "updatedAt": "2021-11-17T18:29:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84wOPmt",
          "commit": {
            "abbreviatedOid": "bc86956"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-11-17T19:20:55Z",
          "updatedAt": "2021-11-17T19:20:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 108,
      "id": "PR_kwDOEwrMS84vc6nv",
      "title": "Add type to WWW-Authenticate header.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/108",
      "state": "CLOSED",
      "author": "dvorak42",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This adds a type to indicate the use of Private Access Tokens, and generalizes the scheme to \"AnonymousCredential\".\r\n\r\nOther schemes, like PrivacyPass will share the scheme and use their own type.\r\n\r\nFixes #107.",
      "createdAt": "2021-12-06T17:28:25Z",
      "updatedAt": "2021-12-13T22:55:53Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ce8a90fb8da6ed6e8ac949e8145beadf2170c95f",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "add-type",
      "headRefOid": "f75ab88136cba7bf3e5c9e3a0877f0d849515913",
      "closedAt": "2021-12-13T22:55:53Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Nice! I'm sure we can bike shed a bit, with the rest of the Privacy Pass WG as well...",
          "createdAt": "2021-12-06T19:32:08Z",
          "updatedAt": "2021-12-06T19:32:08Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xIdgz",
          "commit": {
            "abbreviatedOid": "f75ab88"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Nice \ud83d\udc4d :) ",
          "createdAt": "2021-12-06T18:18:51Z",
          "updatedAt": "2021-12-06T18:18:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 109,
      "id": "PR_kwDOEwrMS84vk3oQ",
      "title": "Fix origin name encryption AAD",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/109",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Forgot to fix this after updating the AccessTokenRequest struct.",
      "createdAt": "2021-12-08T21:18:51Z",
      "updatedAt": "2021-12-08T22:34:51Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "070936d296ce8cabba94cf40e6868023722a192e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/one-aad",
      "headRefOid": "67fa05ff9b136c1b4db836c53a33057ba37c8960",
      "closedAt": "2021-12-08T22:34:51Z",
      "mergedAt": "2021-12-08T22:34:51Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "8b5ce577b098eec31c45bb07a55effd3f1ac3d2e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 110,
      "id": "PR_kwDOEwrMS84vlDGs",
      "title": "Generalize signatures and add issuance protocol details and some security considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/110",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We can probably use some more details about replay attacks, but this should get us started.",
      "createdAt": "2021-12-08T22:36:27Z",
      "updatedAt": "2021-12-09T18:42:49Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "8b5ce577b098eec31c45bb07a55effd3f1ac3d2e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/generalize",
      "headRefOid": "319fe865b1f2328251e42e0b5515600d39073276",
      "closedAt": "2021-12-09T18:42:49Z",
      "mergedAt": "2021-12-09T18:42:49Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "05c698cd258566a3d686b603ebcd23b81b310c24"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xTBgq",
          "commit": {
            "abbreviatedOid": "319fe86"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-08T23:49:17Z",
          "updatedAt": "2021-12-08T23:50:55Z",
          "comments": [
            {
              "originalPosition": 256,
              "body": "Do we need both?",
              "createdAt": "2021-12-08T23:49:17Z",
              "updatedAt": "2021-12-08T23:50:55Z"
            },
            {
              "originalPosition": 257,
              "body": "So PATs would be another entry in this table?\r\n\r\nI wonder if the name should be a bit more descriptive than the signature type. Or I guess PATs would be something like \"Rate-Limited Blind RSA\"?",
              "createdAt": "2021-12-08T23:50:49Z",
              "updatedAt": "2021-12-08T23:50:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xTB5i",
          "commit": {
            "abbreviatedOid": "319fe86"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-08T23:52:25Z",
          "updatedAt": "2021-12-08T23:52:25Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "Yeah, these are sort of placeholder names until we have the specific drafts to point to. \"Blind RSA\" isn't very helpful, for example. ",
              "createdAt": "2021-12-08T23:52:25Z",
              "updatedAt": "2021-12-08T23:52:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xTDgF",
          "commit": {
            "abbreviatedOid": "319fe86"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-09T00:05:35Z",
          "updatedAt": "2021-12-09T00:05:35Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "Wonder if we should leave some space so that we can at least keep similar entries close together numerically?\r\n\r\nThough I guess that devolves into a type/version separation again.",
              "createdAt": "2021-12-09T00:05:35Z",
              "updatedAt": "2021-12-09T00:05:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xTGYM",
          "commit": {
            "abbreviatedOid": "319fe86"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-09T00:30:41Z",
          "updatedAt": "2021-12-09T00:30:41Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "Yeah, numbers should be cheap... but we can add in batches.\r\n\r\nWe can fill this out as we write the three issuance protocol specs",
              "createdAt": "2021-12-09T00:30:41Z",
              "updatedAt": "2021-12-09T00:30:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xW0Qf",
          "commit": {
            "abbreviatedOid": "319fe86"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-09T18:42:45Z",
          "updatedAt": "2021-12-09T18:42:46Z",
          "comments": [
            {
              "originalPosition": 257,
              "body": "Yeah -- let's just fill this stuff out later.",
              "createdAt": "2021-12-09T18:42:45Z",
              "updatedAt": "2021-12-09T18:42:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 113,
      "id": "PR_kwDOEwrMS84vyzpy",
      "title": "Add public/private metadata flags to IANA registry",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/113",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-14T00:47:13Z",
      "updatedAt": "2021-12-14T18:41:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2d5d40d93f74b24e52d0efc9e70cbd944bd351f5",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-8",
      "headRefOid": "5859629809f5084ff83fcb274703064df2ee2aac",
      "closedAt": "2021-12-14T00:55:25Z",
      "mergedAt": "2021-12-14T00:55:25Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f779c4c691935fb0472fd2df238b1f82ed888e05"
      },
      "comments": [
        {
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "body": "LGTM\r\n\r\nAt least with RSA Blind Signatures, I think it is _always_ possible for the token to contain private metadata because what is signed is garbage from the signers perspective.",
          "createdAt": "2021-12-14T18:41:18Z",
          "updatedAt": "2021-12-14T18:41:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xhq8c",
          "commit": {
            "abbreviatedOid": "5859629"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-14T00:55:08Z",
          "updatedAt": "2021-12-14T00:55:08Z",
          "comments": []
        }
      ]
    },
    {
      "number": 114,
      "id": "PR_kwDOEwrMS84vy3Er",
      "title": "Fix issuance request binding",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/114",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The gist of the request generation process is now:\r\n\r\n1. Generate a blinded token request;\r\n2. Generate a blinded key pair;\r\n3. Encrypt the origin name, using (1) and (2) as AAD.\r\n4. Generate a signature covering (1-3).\r\n\r\nThe signature is just Ed25519, and the blinded key pair is just a randomized Ed25519 key pair. \r\n\r\ncc @FredericJacobs ",
      "createdAt": "2021-12-14T01:18:08Z",
      "updatedAt": "2021-12-16T16:25:46Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "f779c4c691935fb0472fd2df238b1f82ed888e05",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/fix-binding",
      "headRefOid": "84f7868c12210213190622dbe9fe9aed2855d076",
      "closedAt": "2021-12-16T16:25:46Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks, @janaiyengar! @tfpauly, shall we close this out and focus on the new doc?",
          "createdAt": "2021-12-16T13:33:06Z",
          "updatedAt": "2021-12-16T13:33:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing.",
          "createdAt": "2021-12-16T16:25:46Z",
          "updatedAt": "2021-12-16T16:25:46Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xh_Vh",
          "commit": {
            "abbreviatedOid": "c9cd2ae"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Document flow changes look good, and (in my non-expert opinion) the approach seems like an improvement.",
          "createdAt": "2021-12-14T04:02:22Z",
          "updatedAt": "2021-12-14T04:02:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84xnK0W",
          "commit": {
            "abbreviatedOid": "c9cd2ae"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I'm trying to understand this, so this isn't really a review. I've got just questions (and a nit) but I've probably got not much to add here.",
          "createdAt": "2021-12-15T06:21:54Z",
          "updatedAt": "2021-12-15T06:28:46Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "n00b question: what is the purpose of this proof?",
              "createdAt": "2021-12-15T06:21:55Z",
              "updatedAt": "2021-12-15T06:28:46Z"
            },
            {
              "originalPosition": 373,
              "body": "```suggestion\r\nevaluated_key = DeserializeElement(index_result)\r\n```",
              "createdAt": "2021-12-15T06:25:41Z",
              "updatedAt": "2021-12-15T06:28:46Z"
            },
            {
              "originalPosition": 236,
              "body": "another n00b question: what is the purpose of this proof? From the rest of the construction, this is for the Issuer, but I don't understand what this proof is about.",
              "createdAt": "2021-12-15T06:27:42Z",
              "updatedAt": "2021-12-15T06:28:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xp2-R",
          "commit": {
            "abbreviatedOid": "8ce1def"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T16:30:34Z",
          "updatedAt": "2021-12-15T16:30:35Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "The new formulation should be much simpler - please have a look!",
              "createdAt": "2021-12-15T16:30:35Z",
              "updatedAt": "2021-12-15T16:30:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xp3CH",
          "commit": {
            "abbreviatedOid": "8ce1def"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T16:30:45Z",
          "updatedAt": "2021-12-15T16:30:45Z",
          "comments": [
            {
              "originalPosition": 236,
              "body": "See comment above =)",
              "createdAt": "2021-12-15T16:30:45Z",
              "updatedAt": "2021-12-15T16:30:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xp_iZ",
          "commit": {
            "abbreviatedOid": "b12dfd1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T16:59:21Z",
          "updatedAt": "2021-12-15T16:59:22Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "Is this still Schnorr? Or is it ed25519?",
              "createdAt": "2021-12-15T16:59:22Z",
              "updatedAt": "2021-12-15T16:59:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xqABE",
          "commit": {
            "abbreviatedOid": "b12dfd1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-15T17:00:59Z",
          "updatedAt": "2021-12-15T17:00:59Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "They are the same, but I'll fix =)",
              "createdAt": "2021-12-15T17:00:59Z",
              "updatedAt": "2021-12-15T17:00:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xqJQW",
          "commit": {
            "abbreviatedOid": "84f7868"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-15T17:33:47Z",
          "updatedAt": "2021-12-15T17:33:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84xqkck",
          "commit": {
            "abbreviatedOid": "84f7868"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. This is a great simplification!",
          "createdAt": "2021-12-15T19:04:03Z",
          "updatedAt": "2021-12-16T03:08:57Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "Do you want to place this inline, assuming you want '*' to map to `ScalarMult`?",
              "createdAt": "2021-12-15T19:04:03Z",
              "updatedAt": "2021-12-16T03:08:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xsK6T",
          "commit": {
            "abbreviatedOid": "84f7868"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "A few comments but this is much clearer, thank you!",
          "createdAt": "2021-12-16T05:35:31Z",
          "updatedAt": "2021-12-16T05:50:48Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "s/Mediator/Attester, here and below",
              "createdAt": "2021-12-16T05:35:31Z",
              "updatedAt": "2021-12-16T05:50:48Z"
            },
            {
              "originalPosition": 70,
              "body": "```suggestion\r\n- \"request_key\" is computed as described in {{request-key}}.\r\n```\r\n\r\nand fix it below as well",
              "createdAt": "2021-12-16T05:45:11Z",
              "updatedAt": "2021-12-16T05:50:48Z"
            },
            {
              "originalPosition": 49,
              "body": "```suggestion\r\nas described in {{request-signature}}.\r\n```\r\n\r\nand fix below as well",
              "createdAt": "2021-12-16T05:46:42Z",
              "updatedAt": "2021-12-16T05:50:48Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nkey is invalid, the Mediator rejects the request with an HTTP 400 error.\r\n```",
              "createdAt": "2021-12-16T05:48:16Z",
              "updatedAt": "2021-12-16T05:50:48Z"
            },
            {
              "originalPosition": 185,
              "body": "```suggestion\r\n#### Request Key {#request-key}\r\n```",
              "createdAt": "2021-12-16T05:48:46Z",
              "updatedAt": "2021-12-16T05:50:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xtzns",
          "commit": {
            "abbreviatedOid": "84f7868"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-16T13:31:55Z",
          "updatedAt": "2021-12-16T13:31:55Z",
          "comments": [
            {
              "originalPosition": 249,
              "body": "This isn't the group operation, which is what I used ScalarMult to denote. It's just integer multiplication between two scalar values.",
              "createdAt": "2021-12-16T13:31:55Z",
              "updatedAt": "2021-12-16T13:31:55Z"
            }
          ]
        }
      ]
    },
    {
      "number": 116,
      "id": "PR_kwDOEwrMS84v7YXs",
      "title": "Mostly editorial pass",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/116",
      "state": "MERGED",
      "author": "janaiyengar",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I've also made some changes to normative text. Specifically,\r\n- removed a MUST NOT on UI interaction, since that seems quite unnecessary and entirely untestable\r\n- replaced a SHOULD NOT with a MUST NOT on dealing with too many challenges from the origin, and tightened up the language a bit. I could not see a good reason to do anything but a MUST here, and being more precise about the requirements helps.",
      "createdAt": "2021-12-16T05:29:26Z",
      "updatedAt": "2021-12-16T16:29:32Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2bd3bdd00dfdb83d442825511505fddc2cca9d73",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "jri/fullpass",
      "headRefOid": "95d5060b95ae25c5a04e506ba910a154e9b0c00d",
      "closedAt": "2021-12-16T16:29:32Z",
      "mergedAt": "2021-12-16T16:29:32Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5c7a7223a701ba3126e4c540a9dfd41511372b97"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xur0o",
          "commit": {
            "abbreviatedOid": "aa2f112"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:25:31Z",
          "updatedAt": "2021-12-16T16:25:31Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84xussT",
          "commit": {
            "abbreviatedOid": "aa2f112"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2021-12-16T16:27:57Z",
          "updatedAt": "2021-12-16T16:27:58Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "```suggestion\r\nAn origin MUST NOT issue more than one interactive challenge for a given token type\r\nand issuer per client request. If an origin issues a large number of challenges, such\r\nas more than once for each request, this can indicate that the origin is either not\r\nfunctioning correctly or is trying to attack or overload the client or issuance server.\r\nIn such cases, a client MUST ignore redundant token challenges for the same\r\nrequest and SHOULD alert the user if possible.\r\n\r\nOrigins MAY include multiple challenges, where each challenge refers to a different issuer\r\nor a different token type, to allow clients to choose a preferred issuer or type.\r\n```",
              "createdAt": "2021-12-16T16:27:58Z",
              "updatedAt": "2021-12-16T16:27:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84xutXD",
          "commit": {
            "abbreviatedOid": "95d5060"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:29:26Z",
          "updatedAt": "2021-12-16T16:29:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 117,
      "id": "PR_kwDOEwrMS84v83Gn",
      "title": "Clean up request signature section",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/117",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I'm still working on the analysis of this, but this is at least more descriptive than it was in the other PR.",
      "createdAt": "2021-12-16T14:07:33Z",
      "updatedAt": "2021-12-16T16:22:50Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2bd3bdd00dfdb83d442825511505fddc2cca9d73",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/descriptive-blinding",
      "headRefOid": "cd6ad5ec631201513c952c0ae60b0f4a4888d79a",
      "closedAt": "2021-12-16T16:22:50Z",
      "mergedAt": "2021-12-16T16:22:50Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3406b5747024236bb34a739a88f7cb52210d39c0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xukHm",
          "commit": {
            "abbreviatedOid": "cd6ad5e"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:00:22Z",
          "updatedAt": "2021-12-16T16:00:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84xurAb",
          "commit": {
            "abbreviatedOid": "cd6ad5e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:22:46Z",
          "updatedAt": "2021-12-16T16:22:46Z",
          "comments": []
        }
      ]
    },
    {
      "number": 118,
      "id": "PR_kwDOEwrMS84v9dHW",
      "title": "Nits on auth scheme",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/118",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-16T16:35:26Z",
      "updatedAt": "2021-12-16T16:37:00Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5c7a7223a701ba3126e4c540a9dfd41511372b97",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-9",
      "headRefOid": "82f6c05241c0f9eeb927c62f0407206c67826a0b",
      "closedAt": "2021-12-16T16:37:00Z",
      "mergedAt": "2021-12-16T16:37:00Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "619cfaeb7728f9c94cdc46f8994ca2af8e8de5f0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xuvxz",
          "commit": {
            "abbreviatedOid": "82f6c05"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:36:07Z",
          "updatedAt": "2021-12-16T16:36:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84xuv02",
          "commit": {
            "abbreviatedOid": "82f6c05"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T16:36:16Z",
          "updatedAt": "2021-12-16T16:36:16Z",
          "comments": []
        }
      ]
    },
    {
      "number": 119,
      "id": "PR_kwDOEwrMS84v-ZfP",
      "title": "Nonce randomization too",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/119",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The prefix wasn't randomized before, so two messages from the same secret key would carry the same `R` component. [Gist](https://gist.github.com/chris-wood/a089ca863c14554e8e5912dda37570b9) updated to match.",
      "createdAt": "2021-12-16T22:31:47Z",
      "updatedAt": "2021-12-16T22:44:10Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "6d4804fbefc33dd19923c24cb741f8995ade466f",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/nonce-randomization",
      "headRefOid": "e46d949d3e605d121baae3ec7df3fe56b2f564a3",
      "closedAt": "2021-12-16T22:44:10Z",
      "mergedAt": "2021-12-16T22:44:10Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "71ef5156b31d9a01d861d80924dc67f2df5d6a34"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xwCAV",
          "commit": {
            "abbreviatedOid": "e46d949"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-16T22:44:06Z",
          "updatedAt": "2021-12-16T22:44:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 120,
      "id": "PR_kwDOEwrMS84wAc7d",
      "title": "Specify HKDF hash function",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/120",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2021-12-17T14:40:19Z",
      "updatedAt": "2021-12-17T16:56:56Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "9c656eb1df6809fdd428ad7dfb08409c217d17e4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "chris-wood-patch-2-1",
      "headRefOid": "97a8164581d8b05786fb1d47d4360c984b3bc6de",
      "closedAt": "2021-12-17T16:56:56Z",
      "mergedAt": "2021-12-17T16:56:56Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5b03dc8af69268c8114a1e577fb4225b39b21548"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84xy_Ya",
          "commit": {
            "abbreviatedOid": "97a8164"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2021-12-17T16:56:52Z",
          "updatedAt": "2021-12-17T16:56:52Z",
          "comments": []
        }
      ]
    },
    {
      "number": 129,
      "id": "PR_kwDOEwrMS84we5Zz",
      "title": "Try out moving the limit enforcement to the Attester",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/129",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #125 ",
      "createdAt": "2022-01-03T21:02:36Z",
      "updatedAt": "2022-01-10T20:37:25Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "c8b3703fe7e51ecac4d4fc2e6009796c698d2afd",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/switch-limit",
      "headRefOid": "b17d1afb086e68791febea86505facf9b85eac27",
      "closedAt": "2022-01-10T20:37:25Z",
      "mergedAt": "2022-01-10T20:37:25Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0f972eb54e7a58316716e86e743e8a9fe5b2c503"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood the 429 signal was there before, just moved in location.",
          "createdAt": "2022-01-04T18:22:48Z",
          "updatedAt": "2022-01-04T18:22:48Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yS_PW",
          "commit": {
            "abbreviatedOid": "a0b216c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "This looks great! I like the new 429 signal, too, as that allows clients to differentiate between \"bad request\" to \"out of tokens.\" ",
          "createdAt": "2022-01-04T17:43:10Z",
          "updatedAt": "2022-01-04T17:43:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84yTHQ2",
          "commit": {
            "abbreviatedOid": "a0b216c"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-04T18:20:23Z",
          "updatedAt": "2022-01-04T18:20:23Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "can retrieve a token for the requested Origin _within a policy window_, as set ..",
              "createdAt": "2022-01-04T18:20:23Z",
              "updatedAt": "2022-01-04T18:20:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84yTHeJ",
          "commit": {
            "abbreviatedOid": "a0b216c"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM",
          "createdAt": "2022-01-04T18:21:27Z",
          "updatedAt": "2022-01-04T18:21:27Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84yTH6X",
          "commit": {
            "abbreviatedOid": "a0b216c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-04T18:23:30Z",
          "updatedAt": "2022-01-04T18:23:31Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nClient can retrieve a token for the requested Origin within a policy window,\r\nas set by the Issuer. Its ABNF is:\r\n```",
              "createdAt": "2022-01-04T18:23:31Z",
              "updatedAt": "2022-01-04T18:23:31Z"
            }
          ]
        }
      ]
    },
    {
      "number": 132,
      "id": "PR_kwDOEwrMS84whan4",
      "title": "Fix and unify issue-key name across docs",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/132",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #131",
      "createdAt": "2022-01-04T17:19:50Z",
      "updatedAt": "2022-01-11T14:31:18Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "76705877ef5e09f70c8df4dd7ed8623bdb0500c4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/issuance-key-naming",
      "headRefOid": "ddfb8c7b46839c1c82c4ed04cd64e8b614ff5eb0",
      "closedAt": "2022-01-11T14:31:18Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Hm, I'm not sure I prefer \"token-issuance-key\" to \"issuer-key\". What's wrong with the issuer-key naming, since it's shorter and seems pretty clear still?",
          "createdAt": "2022-01-04T18:35:57Z",
          "updatedAt": "2022-01-04T18:35:57Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "My claim is that it's not really clear. The issuer has many keys in its possession, including origin name encryption key, token _issuance_ keys (private keys), token _validation_ keys (public keys), and so on. I think we ought to be specific with what this thing is. Maybe that's not \"token-issuance-key\" (since it's really the validation key), but it's certainly not \"issuer-key\".",
          "createdAt": "2022-01-04T20:03:01Z",
          "updatedAt": "2022-01-04T20:03:01Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Commented on the issue. I still prefer the simpler name here. I agree that \"token-issuance-key\" isn't correct, since it sounds more like a private key. The key we're talking about is the common one that all clients and origins see for all token types, which is why I think a generic name like \"issuer key\" is appropriate.",
          "createdAt": "2022-01-05T03:29:47Z",
          "updatedAt": "2022-01-05T03:29:47Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Discussed on call, change to \"token-key\"",
          "createdAt": "2022-01-10T20:17:15Z",
          "updatedAt": "2022-01-10T20:17:15Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "Closing in favor of #138.",
          "createdAt": "2022-01-11T14:31:18Z",
          "updatedAt": "2022-01-11T14:31:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yfVEV",
          "commit": {
            "abbreviatedOid": "ddfb8c7"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-01-07T23:41:28Z",
          "updatedAt": "2022-01-07T23:41:35Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "How about:\r\n\r\n```suggestion\r\n- \"token-validation-key\", which contains a base64url encoding of the public key for\r\n```\r\n\r\nOr\r\n\r\n```suggestion\r\n- \"token-key\", which contains a base64url encoding of the public key for\r\n```\r\n\r\nI may lean towards the short \"token-key\" since this is sent on the wire, and in the challenge, it's only the verification key that matters.",
              "createdAt": "2022-01-07T23:41:28Z",
              "updatedAt": "2022-01-07T23:41:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84yj5je",
          "commit": {
            "abbreviatedOid": "ddfb8c7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-10T19:48:45Z",
          "updatedAt": "2022-01-10T19:48:46Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "Yeah, based on the other issue chat, I think token-validation-key is best. I'll update this soon to take that into account.",
              "createdAt": "2022-01-10T19:48:45Z",
              "updatedAt": "2022-01-10T19:48:46Z"
            }
          ]
        }
      ]
    },
    {
      "number": 133,
      "id": "PR_kwDOEwrMS84wjVhj",
      "title": "Fixing typo",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/133",
      "state": "MERGED",
      "author": "FredericJacobs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-05T10:16:00Z",
      "updatedAt": "2022-01-05T17:24:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0f9ab6b0055c22cd434865db8b925322a1f19201",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "fj/fixing-typo-1",
      "headRefOid": "d633c894c6b121a213e4e9fe41092d3444be0817",
      "closedAt": "2022-01-05T16:45:28Z",
      "mergedAt": "2022-01-05T16:45:28Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "9f2188d4e3a06f1f1e8b8ea23be436a380ba896f"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yWwBq",
          "commit": {
            "abbreviatedOid": "d633c89"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-05T16:45:24Z",
          "updatedAt": "2022-01-05T16:45:24Z",
          "comments": []
        }
      ]
    },
    {
      "number": 134,
      "id": "PR_kwDOEwrMS84wqZjI",
      "title": "Typo in unblinding parameters",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/134",
      "state": "MERGED",
      "author": "FredericJacobs",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-01-07T14:38:13Z",
      "updatedAt": "2022-01-07T14:44:44Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "66a08b1aa2fb00c9854c030b828b6729fbc0e2ef",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "fj/typo-unblinding",
      "headRefOid": "2aa23f4ab2c4f9526e9e94b61cc36e25c74ef0b6",
      "closedAt": "2022-01-07T14:44:44Z",
      "mergedAt": "2022-01-07T14:44:43Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "2631fda01253631bced2adf2239f69ef8933b0f9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ydzuP",
          "commit": {
            "abbreviatedOid": "2aa23f4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-07T14:44:33Z",
          "updatedAt": "2022-01-07T14:44:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 135,
      "id": "PR_kwDOEwrMS84wrpPv",
      "title": "Define Attester URI template",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/135",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #126 ",
      "createdAt": "2022-01-08T00:06:02Z",
      "updatedAt": "2022-01-09T21:08:05Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2631fda01253631bced2adf2239f69ef8933b0f9",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/uri-template",
      "headRefOid": "d8aea0dccf57d4417e6e7a6b7b3174bb88cf6e35",
      "closedAt": "2022-01-09T21:03:38Z",
      "mergedAt": "2022-01-09T21:03:38Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "2848834073273c828b75d5e83e56ab884ca9813e"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yfar3",
          "commit": {
            "abbreviatedOid": "d8aea0d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-08T01:21:55Z",
          "updatedAt": "2022-01-08T01:21:55Z",
          "comments": []
        }
      ]
    },
    {
      "number": 136,
      "id": "PR_kwDOEwrMS84wwZCr",
      "title": "Update config key",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/136",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #128",
      "createdAt": "2022-01-10T20:20:33Z",
      "updatedAt": "2022-01-10T20:21:56Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "2848834073273c828b75d5e83e56ab884ca9813e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-10",
      "headRefOid": "d0a34d84bdf2730c1db8cc791df028e5ffb4ab6f",
      "closedAt": "2022-01-10T20:21:56Z",
      "mergedAt": "2022-01-10T20:21:56Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bedb0c8fa07509f818d8cfc7ea4b3649c28021dd"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84ykAm0",
          "commit": {
            "abbreviatedOid": "d0a34d8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-10T20:21:10Z",
          "updatedAt": "2022-01-10T20:21:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 138,
      "id": "PR_kwDOEwrMS84wzWLF",
      "title": "Issuer key => token key",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/138",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #132.",
      "createdAt": "2022-01-11T14:30:52Z",
      "updatedAt": "2022-01-11T17:48:40Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "b5588eb23502f3d465ccd9725c5b8d9f9da5c8c4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/issuer-to-token-key",
      "headRefOid": "f8e044f7122553df2d5a83e232d7209b8f7b6e23",
      "closedAt": "2022-01-11T17:48:40Z",
      "mergedAt": "2022-01-11T17:48:40Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e60b98f2866ea4bcea900ea2db8dbd2b2abf2ea4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yopcZ",
          "commit": {
            "abbreviatedOid": "1a8a24e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-11T17:29:20Z",
          "updatedAt": "2022-01-11T17:29:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 139,
      "id": "PR_kwDOEwrMS84wzZPL",
      "title": "Drop OHTTP dependency and redefine the name configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/139",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "The NameKey fully defines the algorithms and key used for encrypting origins, as well as the corresponding key ID. Clients use these keys entirely or not, meaning there's no client-side negotiation. Since the key ID fully defines the key and algorithms, clients do not need to convey anything beyond the key ID to issuers in their TokenRequest.\r\n\r\nCloses #124.\r\nCloses #112. ",
      "createdAt": "2022-01-11T14:43:46Z",
      "updatedAt": "2022-01-11T21:07:23Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0f972eb54e7a58316716e86e743e8a9fe5b2c503",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/drop-ohttp",
      "headRefOid": "032944bbb5b4496801ad451559b73e214e9501ee",
      "closedAt": "2022-01-11T21:07:23Z",
      "mergedAt": "2022-01-11T21:07:22Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b71083f946dae6aa6e8dda286899c9c603b8f256"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yopCn",
          "commit": {
            "abbreviatedOid": "8b2f83c"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-11T17:27:53Z",
          "updatedAt": "2022-01-11T17:28:22Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Can we not use \"PAT\" here, since it's not called private access tokens in this doc?",
              "createdAt": "2022-01-11T17:27:53Z",
              "updatedAt": "2022-01-11T17:28:22Z"
            },
            {
              "originalPosition": 24,
              "body": "```suggestion\r\n} NameKey;\r\n```",
              "createdAt": "2022-01-11T17:28:07Z",
              "updatedAt": "2022-01-11T17:44:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84youQM",
          "commit": {
            "abbreviatedOid": "8b2f83c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-11T17:44:25Z",
          "updatedAt": "2022-01-11T17:44:26Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Oh, sure, I didn't feel strongly about the name beyond that it should relate to privacy pass in some way. Maybe `application/issuer-name-key`? \ud83e\udd37 ",
              "createdAt": "2022-01-11T17:44:25Z",
              "updatedAt": "2022-01-11T17:45:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ypAbO",
          "commit": {
            "abbreviatedOid": "16f3241"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-11T18:58:37Z",
          "updatedAt": "2022-01-11T18:58:37Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84ypSEP",
          "commit": {
            "abbreviatedOid": "16f3241"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-11T20:15:48Z",
          "updatedAt": "2022-01-11T20:15:48Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "That's fine with me, yeah!",
              "createdAt": "2022-01-11T20:15:48Z",
              "updatedAt": "2022-01-11T20:15:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ypTYh",
          "commit": {
            "abbreviatedOid": "032944b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-11T20:21:57Z",
          "updatedAt": "2022-01-11T20:21:58Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Cool -- fixed!",
              "createdAt": "2022-01-11T20:21:57Z",
              "updatedAt": "2022-01-11T20:21:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84ypc85",
          "commit": {
            "abbreviatedOid": "032944b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-11T21:07:15Z",
          "updatedAt": "2022-01-11T21:07:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 140,
      "id": "PR_kwDOEwrMS84wzacW",
      "title": "Point to the rotation section",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/140",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Turns out we already had the text! =)\r\n\r\nCloses #111.",
      "createdAt": "2022-01-11T14:49:07Z",
      "updatedAt": "2022-01-11T17:28:43Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "0f972eb54e7a58316716e86e743e8a9fe5b2c503",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/point-to-rotation",
      "headRefOid": "11f3efcfbbebc8d3804895e572ba0c08b7614adc",
      "closedAt": "2022-01-11T17:28:43Z",
      "mergedAt": "2022-01-11T17:28:43Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b5588eb23502f3d465ccd9725c5b8d9f9da5c8c4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84yopQH",
          "commit": {
            "abbreviatedOid": "11f3efc"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-11T17:28:39Z",
          "updatedAt": "2022-01-11T17:28:39Z",
          "comments": []
        }
      ]
    },
    {
      "number": 148,
      "id": "PR_kwDOEwrMS84xf78r",
      "title": "Adopt key blinding functions",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/148",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This uses functions in the key blinding draft directly, simplifying presentation. It does not change the signature scheme used from Ed25519 (to something else), yet. If we want to do that, it can happen in a followup change.\r\n\r\nCloses #148.\r\n\r\ncc @FredericJacobs ",
      "createdAt": "2022-01-24T14:18:31Z",
      "updatedAt": "2022-01-24T19:25:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e7aaf3c984fafac99b4afb4212613d847385555a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/adopt-key-blinding",
      "headRefOid": "8a53d3a9b668fa7c1ef59f9b79e4de7e6ebef1d4",
      "closedAt": "2022-01-24T19:25:48Z",
      "mergedAt": "2022-01-24T19:25:48Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "79f80f72ef47d734e785df8a0c232f88086916fc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84zV8AR",
          "commit": {
            "abbreviatedOid": "8a53d3a"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-24T18:54:17Z",
          "updatedAt": "2022-01-24T18:54:17Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84zWC5C",
          "commit": {
            "abbreviatedOid": "8a53d3a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-24T19:22:07Z",
          "updatedAt": "2022-01-24T19:22:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84zWC_H",
          "commit": {
            "abbreviatedOid": "8a53d3a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-24T19:22:33Z",
          "updatedAt": "2022-01-24T19:22:33Z",
          "comments": []
        }
      ]
    },
    {
      "number": 151,
      "id": "PR_kwDOEwrMS84x20Vi",
      "title": "Add text around the timing considerations",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/151",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on discussion during the interim meeting.",
      "createdAt": "2022-01-31T18:36:06Z",
      "updatedAt": "2022-01-31T20:19:37Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "caa032633ea9be6a81d3c6fa9a7c2ccec3b058e1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/timing",
      "headRefOid": "fda4f5e1f8aadaa2da4f7adb48b5021816576f76",
      "closedAt": "2022-01-31T20:19:37Z",
      "mergedAt": "2022-01-31T20:19:37Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "1cbf318256ec7c921de5d0b51e6dffe7bd613a64"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84zwQBV",
          "commit": {
            "abbreviatedOid": "12bb035"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T18:54:52Z",
          "updatedAt": "2022-01-31T18:55:49Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "*then redeeming a token",
              "createdAt": "2022-01-31T18:54:52Z",
              "updatedAt": "2022-01-31T18:55:49Z"
            },
            {
              "originalPosition": 9,
              "body": "Isn't it about T1 and T2 being close together, rather than the uniqueness of T2?",
              "createdAt": "2022-01-31T18:55:22Z",
              "updatedAt": "2022-01-31T18:55:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwSlE",
          "commit": {
            "abbreviatedOid": "12bb035"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T19:04:40Z",
          "updatedAt": "2022-01-31T19:04:41Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nclients MAY try to augment the time between getting challenged then redeemning a token\r\n```",
              "createdAt": "2022-01-31T19:04:41Z",
              "updatedAt": "2022-01-31T19:04:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwTPa",
          "commit": {
            "abbreviatedOid": "12bb035"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T19:07:11Z",
          "updatedAt": "2022-01-31T19:07:12Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nclients MAY try to augment the time between getting challenged and then redeeming a token\r\n```",
              "createdAt": "2022-01-31T19:07:11Z",
              "updatedAt": "2022-01-31T19:07:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwTU2",
          "commit": {
            "abbreviatedOid": "83b03b9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T19:07:32Z",
          "updatedAt": "2022-01-31T19:07:32Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nclients MAY try to augment the time between getting challenged then redeeming a token\r\n```",
              "createdAt": "2022-01-31T19:07:32Z",
              "updatedAt": "2022-01-31T19:07:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwUGx",
          "commit": {
            "abbreviatedOid": "83b03b9"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-01-31T19:10:47Z",
          "updatedAt": "2022-01-31T19:10:48Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "That's what I mean by uniqueness, i.e., since T1 is definitely unique to a client, then T2 also is, and so (a) T1 and T2 are close or (b) there's so few requests that they don't need to be close in time. (I went with \"unique\" instead of \"close\" to capture both scenarios.)",
              "createdAt": "2022-01-31T19:10:47Z",
              "updatedAt": "2022-01-31T19:10:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwjkG",
          "commit": {
            "abbreviatedOid": "6f46ef0"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T20:11:48Z",
          "updatedAt": "2022-01-31T20:11:48Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84zwkpD",
          "commit": {
            "abbreviatedOid": "6f46ef0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T20:16:29Z",
          "updatedAt": "2022-01-31T20:16:37Z",
          "comments": [
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nso as to make this sort of linkability more difficult. For more discussion on correlation risks between\r\ntoken issuance and redemption, see {{?I-D.ietf-privacypass-architecture}}.\r\n```",
              "createdAt": "2022-01-31T20:16:30Z",
              "updatedAt": "2022-01-31T20:16:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84zwlYF",
          "commit": {
            "abbreviatedOid": "fda4f5e"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-01-31T20:19:36Z",
          "updatedAt": "2022-01-31T20:19:36Z",
          "comments": []
        }
      ]
    },
    {
      "number": 152,
      "id": "PR_kwDOEwrMS84x6PlB",
      "title": "Use ECDSA instead of Ed25519",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/152",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @FredericJacobs",
      "createdAt": "2022-02-01T15:18:47Z",
      "updatedAt": "2022-02-02T16:19:40Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "1cbf318256ec7c921de5d0b51e6dffe7bd613a64",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/to-ecdsa",
      "headRefOid": "20f102e02dbd3daa454d9398e1ca4018f27e78ee",
      "closedAt": "2022-02-02T16:19:36Z",
      "mergedAt": "2022-02-02T16:19:36Z",
      "mergedBy": "FredericJacobs",
      "mergeCommit": {
        "oid": "e657b2dde48413fa29b30cb8df804594c4c26fd5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84z1X8t",
          "commit": {
            "abbreviatedOid": "20f102e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-01T18:29:39Z",
          "updatedAt": "2022-02-01T18:29:39Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84z1zrt",
          "commit": {
            "abbreviatedOid": "20f102e"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-01T19:40:10Z",
          "updatedAt": "2022-02-01T19:40:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84z5zlO",
          "commit": {
            "abbreviatedOid": "20f102e"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Approving this direction, but need more security analysis before we submit this draft as a revision to DataTracker. (See #153)",
          "createdAt": "2022-02-02T16:19:26Z",
          "updatedAt": "2022-02-02T16:19:26Z",
          "comments": []
        }
      ]
    },
    {
      "number": 161,
      "id": "PR_kwDOEwrMS84yMPZX",
      "title": "Reference TLS notation in HTTP auth doc",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/161",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "",
      "createdAt": "2022-02-07T19:10:06Z",
      "updatedAt": "2022-02-07T19:26:33Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e657b2dde48413fa29b30cb8df804594c4c26fd5",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-11",
      "headRefOid": "cc8532074b87bea96d87173feddad22313ff20a9",
      "closedAt": "2022-02-07T19:26:33Z",
      "mergedAt": "2022-02-07T19:26:33Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "05cbfa75e4ab188095b0ed86b40842f6b8d458ab"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS840Kbjs",
          "commit": {
            "abbreviatedOid": "cc85320"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-07T19:26:29Z",
          "updatedAt": "2022-02-07T19:26:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 162,
      "id": "PR_kwDOEwrMS84yaloU",
      "title": "Update draft-privacypass-rate-limit-tokens.md",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/162",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-10T18:56:25Z",
      "updatedAt": "2022-02-10T19:00:05Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e67044266af1af400b1aa609248fc155e8516026",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-12",
      "headRefOid": "75798e3386ae6926627d30f3899b7f11bb3432c4",
      "closedAt": "2022-02-10T19:00:05Z",
      "mergedAt": "2022-02-10T19:00:05Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "132184ecfb0e757377db3369d8f7621ac42573fb"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS840aUDg",
          "commit": {
            "abbreviatedOid": "75798e3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-10T18:59:59Z",
          "updatedAt": "2022-02-10T18:59:59Z",
          "comments": []
        }
      ]
    },
    {
      "number": 163,
      "id": "PR_kwDOEwrMS84yavuU",
      "title": "Specify signature encoding",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/163",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-02-10T19:16:17Z",
      "updatedAt": "2022-02-10T19:56:53Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "132184ecfb0e757377db3369d8f7621ac42573fb",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "chris-wood-patch-3",
      "headRefOid": "d2949f8a97999c8201d1065188fda202b003f34b",
      "closedAt": "2022-02-10T19:56:53Z",
      "mergedAt": "2022-02-10T19:56:53Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8371b3d6755f81983dd82f7c5ee7529ec4555a6e"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 164,
      "id": "PR_kwDOEwrMS84ybSyK",
      "title": "Deal with variable-length ECDSA signatures",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/164",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We could just choose to encode ECDSA signatures in a separate format, like `r || s`, where `r` and `s` are both fixed-length 384-bit integers.\r\n\r\ncc @FredericJacobs",
      "createdAt": "2022-02-10T20:23:56Z",
      "updatedAt": "2022-02-15T21:17:59Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "8371b3d6755f81983dd82f7c5ee7529ec4555a6e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "chris-wood-patch-4",
      "headRefOid": "960cbaf5f50450c6b04681ea1c40a85f72c7ebd0",
      "closedAt": "2022-02-15T21:17:59Z",
      "mergedAt": "2022-02-15T21:17:59Z",
      "mergedBy": "FredericJacobs",
      "mergeCommit": {
        "oid": "83a81857533ca242622845010e11cb27e1e61d85"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS840apsy",
          "commit": {
            "abbreviatedOid": "293296b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-10T20:27:32Z",
          "updatedAt": "2022-02-10T20:27:32Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "This matches the length of an uncompressed P-384 public key",
              "createdAt": "2022-02-10T20:27:32Z",
              "updatedAt": "2022-02-10T20:28:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840apxL",
          "commit": {
            "abbreviatedOid": "293296b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-10T20:27:50Z",
          "updatedAt": "2022-02-10T20:27:50Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "This is because ASN.1 encoded ECDSA signatures are variable length, annoyingly",
              "createdAt": "2022-02-10T20:27:50Z",
              "updatedAt": "2022-02-10T20:27:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840a1Kc",
          "commit": {
            "abbreviatedOid": "293296b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-10T20:55:32Z",
          "updatedAt": "2022-02-10T20:55:32Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "I'd really prefer we revert this change, provided we have an encoding that produces fixed-length signatures.",
              "createdAt": "2022-02-10T20:55:32Z",
              "updatedAt": "2022-02-10T20:55:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840brtF",
          "commit": {
            "abbreviatedOid": "293296b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-11T00:25:39Z",
          "updatedAt": "2022-02-11T00:25:39Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Agreed, this is pretty gross to deal with.",
              "createdAt": "2022-02-11T00:25:39Z",
              "updatedAt": "2022-02-11T00:25:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840j8hq",
          "commit": {
            "abbreviatedOid": "293296b"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-14T15:55:32Z",
          "updatedAt": "2022-02-14T15:55:52Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "We can move to r || s encoding",
              "createdAt": "2022-02-14T15:55:32Z",
              "updatedAt": "2022-02-14T15:55:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840kwQs",
          "commit": {
            "abbreviatedOid": "3f4e792"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-14T18:45:51Z",
          "updatedAt": "2022-02-14T18:45:51Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Discussed with @tfpauly, we can go with compressed",
              "createdAt": "2022-02-14T18:45:51Z",
              "updatedAt": "2022-02-14T18:45:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840kwYa",
          "commit": {
            "abbreviatedOid": "3f4e792"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-14T18:46:19Z",
          "updatedAt": "2022-02-14T18:46:20Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Done.",
              "createdAt": "2022-02-14T18:46:20Z",
              "updatedAt": "2022-02-14T18:46:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS840kznP",
          "commit": {
            "abbreviatedOid": "960cbaf"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-02-14T18:59:20Z",
          "updatedAt": "2022-02-14T18:59:20Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Done.",
              "createdAt": "2022-02-14T18:59:20Z",
              "updatedAt": "2022-02-14T18:59:20Z"
            }
          ]
        }
      ]
    },
    {
      "number": 165,
      "id": "PR_kwDOEwrMS84zB__z",
      "title": "Require adding padding to base64 encodings",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/165",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "",
      "createdAt": "2022-02-18T00:05:43Z",
      "updatedAt": "2022-02-18T00:08:48Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "83a81857533ca242622845010e11cb27e1e61d85",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-13",
      "headRefOid": "09a51dd73c1d60fdf878ba1b544cde7920744b7a",
      "closedAt": "2022-02-18T00:08:48Z",
      "mergedAt": "2022-02-18T00:08:48Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "6e5ee9cf425c932a218b4ace6d385989eeb368e0"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS8402eyg",
          "commit": {
            "abbreviatedOid": "09a51dd"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-02-18T00:06:27Z",
          "updatedAt": "2022-02-18T00:06:27Z",
          "comments": []
        }
      ]
    },
    {
      "number": 175,
      "id": "PR_kwDOEwrMS84z1r08",
      "title": "Fix text around directionality of token count",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/175",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "editorial"
      ],
      "body": "Closes #171",
      "createdAt": "2022-03-02T15:56:55Z",
      "updatedAt": "2022-03-02T16:07:09Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "6e5ee9cf425c932a218b4ace6d385989eeb368e0",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-14",
      "headRefOid": "25bfe822284692487eca63778ebd8f21c8099411",
      "closedAt": "2022-03-02T16:07:09Z",
      "mergedAt": "2022-03-02T16:07:08Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "bc515fdf6e92e544a7bd990a6faf6be74948b186"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841gysg",
          "commit": {
            "abbreviatedOid": "25bfe82"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T16:00:15Z",
          "updatedAt": "2022-03-02T16:00:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841g1C4",
          "commit": {
            "abbreviatedOid": "25bfe82"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T16:07:03Z",
          "updatedAt": "2022-03-02T16:07:03Z",
          "comments": []
        }
      ]
    },
    {
      "number": 176,
      "id": "PR_kwDOEwrMS84z1ypR",
      "title": "Explain extensions that could add metadata",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/176",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #172",
      "createdAt": "2022-03-02T16:24:58Z",
      "updatedAt": "2022-03-02T16:55:36Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "bc515fdf6e92e544a7bd990a6faf6be74948b186",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-15",
      "headRefOid": "e8732a4aab9d1542f84660361f49e95ed9b1432a",
      "closedAt": "2022-03-02T16:55:36Z",
      "mergedAt": "2022-03-02T16:55:36Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "206ac8078d6ad85695f44db5925602da0e8e9f83"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841g_Cn",
          "commit": {
            "abbreviatedOid": "8674526"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T16:34:22Z",
          "updatedAt": "2022-03-02T16:34:22Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841hC3j",
          "commit": {
            "abbreviatedOid": "8674526"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T16:45:46Z",
          "updatedAt": "2022-03-02T16:45:47Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Maybe leave the size of a \"large population\" unspecified instead of saying thousands. Valid population sizes sort of depends on the number of clients (a big proxy with millions of users, might want to say a large population is at least 50k, while a small proxy with thousands of users might want to allow smaller populations (for geolocation/caching/etc)).",
              "createdAt": "2022-03-02T16:45:46Z",
              "updatedAt": "2022-03-02T16:45:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS841hC44",
          "commit": {
            "abbreviatedOid": "8674526"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-02T16:45:50Z",
          "updatedAt": "2022-03-02T16:45:50Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841hEVn",
          "commit": {
            "abbreviatedOid": "8674526"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T16:50:03Z",
          "updatedAt": "2022-03-02T16:50:03Z",
          "comments": [
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nto separate large populations, such as providing information about the country\r\nor region to which a Client belongs.\r\n```",
              "createdAt": "2022-03-02T16:50:03Z",
              "updatedAt": "2022-03-02T16:50:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS841hEcU",
          "commit": {
            "abbreviatedOid": "e8732a4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-02T16:50:22Z",
          "updatedAt": "2022-03-02T16:50:22Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "Fixed!",
              "createdAt": "2022-03-02T16:50:22Z",
              "updatedAt": "2022-03-02T16:50:22Z"
            }
          ]
        }
      ]
    },
    {
      "number": 177,
      "id": "PR_kwDOEwrMS840D88z",
      "title": "Address nits from Tancrede",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/177",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #174.",
      "createdAt": "2022-03-07T18:59:01Z",
      "updatedAt": "2022-03-07T19:11:22Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e6c6397b839f2f34cf94bdf0a8bbc73414823a70",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/tancrede-nits",
      "headRefOid": "7c10df5cc5bc9add83267f793b6c620196c7bbd4",
      "closedAt": "2022-03-07T19:11:21Z",
      "mergedAt": "2022-03-07T19:11:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7e95d33ea99b366018aedd955f65812aab988310"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841xYCN",
          "commit": {
            "abbreviatedOid": "7c10df5"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T19:10:54Z",
          "updatedAt": "2022-03-07T19:10:54Z",
          "comments": []
        }
      ]
    },
    {
      "number": 178,
      "id": "PR_kwDOEwrMS840EIA6",
      "title": "Clarify security requirements and properties",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/178",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #167.\r\nCloses #170.",
      "createdAt": "2022-03-07T19:52:18Z",
      "updatedAt": "2022-03-07T20:15:40Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7e95d33ea99b366018aedd955f65812aab988310",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/clarify-requirements-and-properties",
      "headRefOid": "3dac706c448b2362dc25d5777a9623afd716c0df",
      "closedAt": "2022-03-07T20:15:40Z",
      "mergedAt": "2022-03-07T20:15:40Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "85c875f34d27d460be2fda69f82f539b4466c1a5"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841xnGi",
          "commit": {
            "abbreviatedOid": "0a44033"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:10:20Z",
          "updatedAt": "2022-03-07T20:12:54Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nby the way the tokens are constructed. In particular, TokenRequest.request_key and TokenRequest.request_signature\r\n```",
              "createdAt": "2022-03-07T20:10:20Z",
              "updatedAt": "2022-03-07T20:12:54Z"
            },
            {
              "originalPosition": 77,
              "body": "```suggestion\r\nmeans that no entity can produce a valid (message, signature) pair for any blinding key without\r\n```",
              "createdAt": "2022-03-07T20:12:49Z",
              "updatedAt": "2022-03-07T20:12:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS841xoTe",
          "commit": {
            "abbreviatedOid": "0a44033"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:15:29Z",
          "updatedAt": "2022-03-07T20:15:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841xoUq",
          "commit": {
            "abbreviatedOid": "3dac706"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:15:34Z",
          "updatedAt": "2022-03-07T20:15:34Z",
          "comments": []
        }
      ]
    },
    {
      "number": 179,
      "id": "PR_kwDOEwrMS840EI5U",
      "title": "Use RateLimit-Limit header",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/179",
      "state": "CLOSED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-03-07T19:57:14Z",
      "updatedAt": "2022-03-07T20:58:08Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7e95d33ea99b366018aedd955f65812aab988310",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/use-rate-limit",
      "headRefOid": "ec5e866dce83502e69af8f21ba4e8f96973e93a9",
      "closedAt": "2022-03-07T20:58:08Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "As discussed on the call, change things to introduce different \"issuer profiles\" in the issuer configuration object, and all issuers to change policies through that knob. ",
          "createdAt": "2022-03-07T20:54:31Z",
          "updatedAt": "2022-03-07T20:54:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841xu-w",
          "commit": {
            "abbreviatedOid": "ec5e866"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "I think this will lead to conflating two limits, because `RateLimit-Limit` generically means a rate limit between the originator of the request and the server. That's the Attester and Issuer here. If the attester needs to be rate limited overall to the issuer, then it could use `RateLimit-Limit`, which is separate from the per-encrypted-origin-ID token rate limit.",
          "createdAt": "2022-03-07T20:42:53Z",
          "updatedAt": "2022-03-07T20:42:53Z",
          "comments": []
        }
      ]
    },
    {
      "number": 180,
      "id": "PR_kwDOEwrMS840ELq-",
      "title": "Pad the origin name (using the ECH policy)",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/180",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #149.",
      "createdAt": "2022-03-07T20:11:05Z",
      "updatedAt": "2022-03-07T20:19:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7e95d33ea99b366018aedd955f65812aab988310",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/pad-origin-name",
      "headRefOid": "c6442b5fe5931106cccfedb58be64c1544af1da1",
      "closedAt": "2022-03-07T20:19:55Z",
      "mergedAt": "2022-03-07T20:19:54Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "cff34b40521149f54739f72ae51d33c594f34d56"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841xnsI",
          "commit": {
            "abbreviatedOid": "8064f83"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T20:12:48Z",
          "updatedAt": "2022-03-07T20:12:53Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "```suggestion\r\n1. Encrypt (seal) the padded origin_name with aad as associated data using context, yielding ciphertext ct.\r\n```",
              "createdAt": "2022-03-07T20:12:48Z",
              "updatedAt": "2022-03-07T20:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS841xoBn",
          "commit": {
            "abbreviatedOid": "31933a6"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:14:15Z",
          "updatedAt": "2022-03-07T20:14:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841xoSk",
          "commit": {
            "abbreviatedOid": "31933a6"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:15:24Z",
          "updatedAt": "2022-03-07T20:15:24Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841xo7u",
          "commit": {
            "abbreviatedOid": "31933a6"
          },
          "author": "janaiyengar",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T20:18:07Z",
          "updatedAt": "2022-03-07T20:18:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS841xpAS",
          "commit": {
            "abbreviatedOid": "31933a6"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-07T20:18:25Z",
          "updatedAt": "2022-03-07T20:18:25Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "```suggestion\r\nIssuers reverse this procedure to recover the (padded) Origin Name by computing the AAD as\r\ndescribed above and decrypting encrypted_origin_name with their private key skI (the private\r\nkey corresponding to pkI), and stripping off padding bytes. In pseudocode, this procedure\r\nis as follows:\r\n```",
              "createdAt": "2022-03-07T20:18:25Z",
              "updatedAt": "2022-03-07T20:18:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 181,
      "id": "PR_kwDOEwrMS840EeOz",
      "title": "Fix KEYBLINDING reference",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/181",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Good to publish -00 after this, I think.",
      "createdAt": "2022-03-07T21:44:59Z",
      "updatedAt": "2022-03-07T21:54:28Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "cff34b40521149f54739f72ae51d33c594f34d56",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/fix-keyblinding-ref",
      "headRefOid": "81862ed9ed8f76542abb4c85e9fcdcf817dfa25a",
      "closedAt": "2022-03-07T21:54:28Z",
      "mergedAt": "2022-03-07T21:54:28Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "3a2689f199c3bc04eeee5ab9b4c3f40b6177bd84"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS841x_j3",
          "commit": {
            "abbreviatedOid": "81862ed"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-03-07T21:54:22Z",
          "updatedAt": "2022-03-07T21:54:22Z",
          "comments": []
        }
      ]
    },
    {
      "number": 186,
      "id": "PR_kwDOEwrMS841Lufx",
      "title": "Describe why basic issuance is insufficient",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/186",
      "state": "MERGED",
      "author": "smhendrickson",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "#183 \r\n\r\nAlso link to the work of the antifraud cg",
      "createdAt": "2022-03-28T20:36:36Z",
      "updatedAt": "2022-04-04T19:06:21Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "97643d7e10ef0b6c7bfe367310bc00fda70c3a39",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "smhendrickson-patch-3",
      "headRefOid": "b0cf78cd9b02184b01f013c7b0fc43d1cddb1dec",
      "closedAt": "2022-04-04T19:06:21Z",
      "mergedAt": "2022-04-04T19:06:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a59abbfb1aca12f3582d66d10bacbee1280d7403"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843Op33",
          "commit": {
            "abbreviatedOid": "41eb599"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-03-30T18:57:06Z",
          "updatedAt": "2022-03-30T18:57:34Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nfor this use case. However, this would mean that the attester/issuer learns all\r\n```",
              "createdAt": "2022-03-30T18:57:06Z",
              "updatedAt": "2022-03-30T18:57:34Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nbrowsing history. The issuance protocol defined in this document employs the 'Split Origin, Attester, Issuer'\r\n```",
              "createdAt": "2022-03-30T18:57:31Z",
              "updatedAt": "2022-03-30T18:57:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843Owo9",
          "commit": {
            "abbreviatedOid": "41eb599"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2022-03-30T19:22:43Z",
          "updatedAt": "2022-03-30T19:23:46Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "```suggestion\r\nFor some applications, the basic issuance protocol from {{?BASIC-ISSUANCE=I-D.ietf-privacypass-protocol}}\r\ncould be used to implement rate limits. In particular, the 'Joint Attester and Issuer' model from {{ARCH}} could\r\nbe used to restrict the number of tokens issued to individual clients over a time window. However, in this deployment model, the Attester and Issuer would learn all\r\n```",
              "createdAt": "2022-03-30T19:22:43Z",
              "updatedAt": "2022-03-30T19:23:46Z"
            },
            {
              "originalPosition": 25,
              "body": "It's not clear to me that those use cases require rate limiting as opposed to something like basic issuance, so I might omit this reference (for now).",
              "createdAt": "2022-03-30T19:23:40Z",
              "updatedAt": "2022-03-30T19:23:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843Zo2N",
          "commit": {
            "abbreviatedOid": "7c8809d"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-01T22:35:17Z",
          "updatedAt": "2022-04-01T22:35:18Z",
          "comments": [
            {
              "originalPosition": 25,
              "body": "Done",
              "createdAt": "2022-04-01T22:35:18Z",
              "updatedAt": "2022-04-01T22:35:18Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843aBlA",
          "commit": {
            "abbreviatedOid": "41eb599"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-02T13:03:59Z",
          "updatedAt": "2022-04-02T13:04:00Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "@smhendrickson can we land this change, too?",
              "createdAt": "2022-04-02T13:03:59Z",
              "updatedAt": "2022-04-02T13:04:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843dQib",
          "commit": {
            "abbreviatedOid": "e9b5141"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T13:55:43Z",
          "updatedAt": "2022-04-04T13:55:43Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS843e1rD",
          "commit": {
            "abbreviatedOid": "e9b5141"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-04T19:04:59Z",
          "updatedAt": "2022-04-04T19:05:00Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nFor some applications, the basic issuance protocol from {{?BASIC-ISSUANCE=I-D.ietf-privacypass-protocol}}\r\ncould be used to implement rate limits. In particular, the 'Joint Attester and Issuer' model from {{ARCH}} could\r\nbe used to restrict the number of tokens issued to individual clients over a time window. However, in this deployment model, the Attester and Issuer would learn all\r\n```",
              "createdAt": "2022-04-04T19:04:59Z",
              "updatedAt": "2022-04-04T19:05:00Z"
            }
          ]
        }
      ]
    },
    {
      "number": 188,
      "id": "PR_kwDOEwrMS841hJWQ",
      "title": "Align origin_name with auth scheme, allow for empty name",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/188",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #147 \r\nCloses #187 ",
      "createdAt": "2022-04-01T23:11:07Z",
      "updatedAt": "2022-04-04T19:06:49Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7251fe89b8ce23eedc35b5d2b0197599f67e3b7e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/origin_name",
      "headRefOid": "09123e4b04fc9d24694cdb9d7f73d5a04d0a2465",
      "closedAt": "2022-04-04T19:06:48Z",
      "mergedAt": "2022-04-04T19:06:48Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dc7573d781ef4f2ea0052d25dd3b0c3153430f8c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843aBvW",
          "commit": {
            "abbreviatedOid": "e594f55"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-02T13:12:34Z",
          "updatedAt": "2022-04-02T13:33:31Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "```suggestion\r\nis empty, `origin_name` is set to the empty string \"\".\r\n```\r\n\r\nSetting it to the empty string seems simplest here?",
              "createdAt": "2022-04-02T13:12:34Z",
              "updatedAt": "2022-04-02T13:33:31Z"
            },
            {
              "originalPosition": 38,
              "body": "We probably also need text in the Issuer->Attester section, or elsewhere, describing what to do when this value is received. Maybe we need a section specifically on how issuers should manage or configure origin rate limits?",
              "createdAt": "2022-04-02T13:30:17Z",
              "updatedAt": "2022-04-02T13:33:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843aCSe",
          "commit": {
            "abbreviatedOid": "07adf8f"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-02T13:42:02Z",
          "updatedAt": "2022-04-02T13:42:02Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Yeah I was thinking about adding text for what to do when you receive an empty string. I'll add that. ",
              "createdAt": "2022-04-02T13:42:02Z",
              "updatedAt": "2022-04-02T13:42:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843a4PB",
          "commit": {
            "abbreviatedOid": "e594f55"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-04T03:13:26Z",
          "updatedAt": "2022-04-04T03:13:26Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Added some text for this!",
              "createdAt": "2022-04-04T03:13:26Z",
              "updatedAt": "2022-04-04T03:13:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843c3YP",
          "commit": {
            "abbreviatedOid": "66aab7b"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T12:51:13Z",
          "updatedAt": "2022-04-04T12:54:17Z",
          "comments": [
            {
              "originalPosition": 61,
              "body": "```suggestion\r\nthe Issuer applies a cross-origin rate-limit policy, if supported. If the decrypted origin_name\r\nis the empty string \"\" and the Issuer does not support cross-origin rate limiting, then it MUST\r\nabort the protocol as described in {{request-two}}.\r\n```",
              "createdAt": "2022-04-04T12:51:13Z",
              "updatedAt": "2022-04-04T12:54:17Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\npolicy if supported. If a cross-origin policy is not supported, this condition is not met.\r\n```",
              "createdAt": "2022-04-04T12:52:04Z",
              "updatedAt": "2022-04-04T12:54:17Z"
            },
            {
              "originalPosition": 12,
              "body": "```suggestion\r\nencrypted message is the empty string \"\".\r\n```\r\n(We also use the special value \"\" in #request-two, so I figure it's simplest to just inline here.)",
              "createdAt": "2022-04-04T12:53:52Z",
              "updatedAt": "2022-04-04T12:54:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843dcW8",
          "commit": {
            "abbreviatedOid": "09123e4"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T14:23:37Z",
          "updatedAt": "2022-04-04T14:23:37Z",
          "comments": []
        }
      ]
    },
    {
      "number": 189,
      "id": "PR_kwDOEwrMS841hLe5",
      "title": "Specify requirements to keep origin names private from attesters",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/189",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #184\r\nCloses #182 ",
      "createdAt": "2022-04-01T23:33:34Z",
      "updatedAt": "2022-04-04T19:07:28Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7251fe89b8ce23eedc35b5d2b0197599f67e3b7e",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/origin-privacy",
      "headRefOid": "73b5350dc07dea0f6c7d6c81de747efb5505b039",
      "closedAt": "2022-04-04T19:07:28Z",
      "mergedAt": "2022-04-04T19:07:28Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5c6a13303c69a646717497e8f44a1c12be8b25e1"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843aBhT",
          "commit": {
            "abbreviatedOid": "54d6d2f"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-02T13:00:42Z",
          "updatedAt": "2022-04-02T13:03:40Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n- Each Issuer SHOULD serve tokens to a large number of Origins. A one-to-one relationship\r\n```",
              "createdAt": "2022-04-02T13:00:42Z",
              "updatedAt": "2022-04-02T13:03:40Z"
            },
            {
              "originalPosition": 28,
              "body": "```suggestion\r\nthat an Attester can infer which Origin is accessed by observing the rate limit. This\r\n```",
              "createdAt": "2022-04-02T13:01:34Z",
              "updatedAt": "2022-04-02T13:03:40Z"
            },
            {
              "originalPosition": 30,
              "body": "```suggestion\r\ncan be mitigated by having many Origins share the same rate-limit value.\r\n```\r\nThis is akin to randomized padding which doesn't work well over repeated samples, so I think we ought to keep just the simple thing.",
              "createdAt": "2022-04-02T13:02:29Z",
              "updatedAt": "2022-04-02T13:03:40Z"
            },
            {
              "originalPosition": 33,
              "body": "```suggestion\r\norigins being accessed are ubiquitous or do not correspond to user-specific behavior.\r\n```",
              "createdAt": "2022-04-02T13:03:36Z",
              "updatedAt": "2022-04-02T13:03:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843aCUL",
          "commit": {
            "abbreviatedOid": "73b5350"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-02T13:43:34Z",
          "updatedAt": "2022-04-02T13:43:34Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS843dcgf",
          "commit": {
            "abbreviatedOid": "73b5350"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T14:23:58Z",
          "updatedAt": "2022-04-04T14:23:58Z",
          "comments": []
        }
      ]
    },
    {
      "number": 190,
      "id": "PR_kwDOEwrMS841njxM",
      "title": "Update draft-pauly-httpbis-geoip-hint.md",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/190",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-04-04T22:56:37Z",
      "updatedAt": "2022-04-04T23:13:51Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5c6a13303c69a646717497e8f44a1c12be8b25e1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "chris-wood-patch-5",
      "headRefOid": "0b7830d4090c1daa9d8dcbfc2f265f5be361196f",
      "closedAt": "2022-04-04T23:13:51Z",
      "mergedAt": "2022-04-04T23:13:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a3acbfdacc77ae2314b69180c0483da9b168491b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843fqeO",
          "commit": {
            "abbreviatedOid": "0b7830d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T23:13:47Z",
          "updatedAt": "2022-04-04T23:13:47Z",
          "comments": []
        }
      ]
    },
    {
      "number": 191,
      "id": "PR_kwDOEwrMS841nj5b",
      "title": "Add text on malicious and HbC protocol participants",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/191",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #185.\r\n\r\nWe can add more once the security analysis is complete.",
      "createdAt": "2022-04-04T22:57:48Z",
      "updatedAt": "2022-04-05T19:51:16Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5c6a13303c69a646717497e8f44a1c12be8b25e1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/malicious-and-hbc",
      "headRefOid": "bc0ba9179341aecd0a34e064ffcaa38f103b63e7",
      "closedAt": "2022-04-05T19:51:15Z",
      "mergedAt": "2022-04-05T19:51:15Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0e2769dc5e045cab6a64a249bcb2b66602c50290"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843fpfL",
          "commit": {
            "abbreviatedOid": "a166af8"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-04T23:08:01Z",
          "updatedAt": "2022-04-04T23:08:01Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nClients, as doing so requires knowledge of their unique Client Secret.\r\n```",
              "createdAt": "2022-04-04T23:08:01Z",
              "updatedAt": "2022-04-04T23:08:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS843fqXL",
          "commit": {
            "abbreviatedOid": "3945072"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-04T23:13:09Z",
          "updatedAt": "2022-04-04T23:13:28Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "```suggestion\r\nClients learn the output token. They does not learn the Anonymous Issuer Origin ID, though the\r\n```",
              "createdAt": "2022-04-04T23:13:09Z",
              "updatedAt": "2022-04-04T23:13:28Z"
            }
          ]
        }
      ]
    },
    {
      "number": 192,
      "id": "PR_kwDOEwrMS841qOrw",
      "title": "Add rate limited test vectors",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/192",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-04-05T14:08:04Z",
      "updatedAt": "2022-04-05T19:51:54Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a3acbfdacc77ae2314b69180c0483da9b168491b",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/test-vectors",
      "headRefOid": "4710dd682fefda89418369893b81659012d30c58",
      "closedAt": "2022-04-05T19:51:54Z",
      "mergedAt": "2022-04-05T19:51:54Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c6cf04b80ccc0a73702d23bfdc957794ad9df92d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS843jMUS",
          "commit": {
            "abbreviatedOid": "c6c5dd8"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-05T14:34:57Z",
          "updatedAt": "2022-04-05T14:34:57Z",
          "comments": []
        }
      ]
    },
    {
      "number": 193,
      "id": "PR_kwDOEwrMS842CVDH",
      "title": "Specify empty string case for padding",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/193",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "",
      "createdAt": "2022-04-11T22:52:14Z",
      "updatedAt": "2022-04-11T22:55:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "c6cf04b80ccc0a73702d23bfdc957794ad9df92d",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-16",
      "headRefOid": "3440a4acd49903c3a75b3756ff359593b3d28fea",
      "closedAt": "2022-04-11T22:55:55Z",
      "mergedAt": "2022-04-11T22:55:55Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "f7d99772add62c7a551a00725986b5342e658428"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84380I3",
          "commit": {
            "abbreviatedOid": "3440a4a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-11T22:55:51Z",
          "updatedAt": "2022-04-11T22:55:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 199,
      "id": "PR_kwDOEwrMS8428yeC",
      "title": "Encapsulate token request exchange between client and issuer",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/199",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Addresses #198. Starting as a draft for now since I don't have matching test vectors (yet).",
      "createdAt": "2022-04-28T14:11:20Z",
      "updatedAt": "2022-05-02T19:17:42Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "f7d99772add62c7a551a00725986b5342e658428",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/encap-token-requests",
      "headRefOid": "b45b833f813f9dbfc6106a79957d2ebd458c04cb",
      "closedAt": "2022-05-02T19:17:42Z",
      "mergedAt": "2022-05-02T19:17:42Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "c1cfc0a8c2c96015a1eebd7738418ea9d9f4c0de"
      },
      "comments": [
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly @tlepoint test vectors updated, based on [this change](https://github.com/cloudflare/pat-go/pull/11).",
          "createdAt": "2022-04-28T18:46:31Z",
          "updatedAt": "2022-04-28T18:46:31Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS845BT3M",
          "commit": {
            "abbreviatedOid": "b7a30c1"
          },
          "author": "tlepoint",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-28T15:31:29Z",
          "updatedAt": "2022-04-28T15:31:29Z",
          "comments": [
            {
              "originalPosition": 506,
              "body": "This seems not to have been updated. Also we should delete the \"blinded_msg\" above, and add the issuer response?",
              "createdAt": "2022-04-28T15:31:29Z",
              "updatedAt": "2022-04-28T15:31:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845BUV1",
          "commit": {
            "abbreviatedOid": "b7a30c1"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-28T15:32:48Z",
          "updatedAt": "2022-04-28T15:32:49Z",
          "comments": [
            {
              "originalPosition": 506,
              "body": "Yeah, I haven't updated any of the test vectors yet, but will do so before I mark this PR as ready. This particular change is the result of s/encrypted_origin_name/encrypted_token_request. ",
              "createdAt": "2022-04-28T15:32:48Z",
              "updatedAt": "2022-04-28T15:32:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845DBCl",
          "commit": {
            "abbreviatedOid": "465709e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-28T22:01:49Z",
          "updatedAt": "2022-04-28T22:01:50Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\n   information, such as the origin name, to the Issuer in issuance requests. This parameter uses resource media type\r\n```",
              "createdAt": "2022-04-28T22:01:49Z",
              "updatedAt": "2022-04-28T22:01:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845DBUO",
          "commit": {
            "abbreviatedOid": "465709e"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-28T22:03:32Z",
          "updatedAt": "2022-04-28T22:03:32Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "I think we need to add this to IANA considerations?",
              "createdAt": "2022-04-28T22:03:32Z",
              "updatedAt": "2022-04-28T22:03:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845DEQJ",
          "commit": {
            "abbreviatedOid": "ac6cfd2"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-28T22:22:55Z",
          "updatedAt": "2022-04-28T22:22:55Z",
          "comments": [
            {
              "originalPosition": 102,
              "body": "Yep! Forgot to do that. ",
              "createdAt": "2022-04-28T22:22:55Z",
              "updatedAt": "2022-04-28T22:22:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845DNiL",
          "commit": {
            "abbreviatedOid": "ea2f539"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-04-28T23:36:10Z",
          "updatedAt": "2022-04-28T23:36:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS845GO4D",
          "commit": {
            "abbreviatedOid": "ea2f539"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-04-29T15:53:10Z",
          "updatedAt": "2022-04-29T15:56:39Z",
          "comments": [
            {
              "originalPosition": 114,
              "body": "```suggestion\r\nThe Client then constructs a InnerTokenRequest value, denoted `inner_token_request`,\r\n```",
              "createdAt": "2022-04-29T15:53:11Z",
              "updatedAt": "2022-04-29T15:56:39Z"
            },
            {
              "originalPosition": 122,
              "body": "```suggestion\r\n} InnerTokenRequest;\r\n```",
              "createdAt": "2022-04-29T15:53:30Z",
              "updatedAt": "2022-04-29T15:56:39Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\n- \"encrypted_token_request\" is an encrypted structure that contains an InnerTokenRequest\r\n```",
              "createdAt": "2022-04-29T15:53:49Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 215,
              "body": "```suggestion\r\na valid InnerTokenRequest whose unpadded origin name matches an Origin Name that is served by\r\nthe Issuer. The Origin name associated with the InnerTokenRequest value might be the empty string \"\",\r\n```",
              "createdAt": "2022-04-29T15:54:05Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 230,
              "body": "```suggestion\r\nTokenRequest.encrypted_token_request to discover a InnerTokenRequest value. If this fails,\r\n```",
              "createdAt": "2022-04-29T15:54:20Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 241,
              "body": "```suggestion\r\nblind_sig = rsabssa_blind_sign(skP, InnerTokenRequest.blinded_msg)\r\n```",
              "createdAt": "2022-04-29T15:54:34Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 306,
              "body": "```suggestion\r\nTogether, these are used to encapsulate an InnerTokenRequest and produce an encrypted token\r\n```",
              "createdAt": "2022-04-29T15:54:50Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 332,
              "body": "```suggestion\r\nenc, context = SetupBaseS(pkI, \"TokenRequest\")\r\n```",
              "createdAt": "2022-04-29T15:54:58Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 360,
              "body": "```suggestion\r\nIssuers reverse this procedure to recover the InnerTokenRequest value by computing the AAD as\r\ndescribed above and decrypting encrypted_token_request with their private key skI (the private\r\nkey corresponding to pkI). The `origin_name` value is recovered from InnerTokenRequest.padded_origin_name\r\nby stripping off padding bytes. In pseudocode, this procedure is as follows:\r\n```",
              "createdAt": "2022-04-29T15:55:22Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 381,
              "body": "```suggestion\r\nThe `InnerTokenRequest.blinded_msg` and `InnerTokenRequest.request_key` values, along\r\n```",
              "createdAt": "2022-04-29T15:55:36Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 390,
              "body": "```suggestion\r\n1. Export a secret `secret` from `context`, using the string \"TokenResponse\" as context.\r\n```",
              "createdAt": "2022-04-29T15:55:49Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 419,
              "body": "```suggestion\r\nsecret = context.Export(\"TokenResponse\", Nk)\r\n```",
              "createdAt": "2022-04-29T15:55:59Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            },
            {
              "originalPosition": 505,
              "body": "```suggestion\r\n- encrypted_token_request: The encrypted InnerTokenRequest, represented as a hexadecimal string.\r\n```",
              "createdAt": "2022-04-29T15:56:35Z",
              "updatedAt": "2022-04-29T15:56:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845LNty",
          "commit": {
            "abbreviatedOid": "b45b833"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-02T15:51:29Z",
          "updatedAt": "2022-05-02T15:51:29Z",
          "comments": []
        }
      ]
    },
    {
      "number": 200,
      "id": "PR_kwDOEwrMS843KeoQ",
      "title": "Support EdDSA along with ECDSA",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/200",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "I likely won't have time to generate test vectors for EdDSA today, but we can always add them later.",
      "createdAt": "2022-05-02T12:13:29Z",
      "updatedAt": "2022-05-02T19:18:10Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "c1cfc0a8c2c96015a1eebd7738418ea9d9f4c0de",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/generalize-eddsa",
      "headRefOid": "60b0da4497f884f0b7f95fdd323bf5a052cda7cc",
      "closedAt": "2022-05-02T19:18:10Z",
      "mergedAt": "2022-05-02T19:18:10Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "576996bb5226cb93e792224972ebdc409486f6e9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS845KxYc",
          "commit": {
            "abbreviatedOid": "7104419"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-02T14:16:15Z",
          "updatedAt": "2022-05-02T14:18:50Z",
          "comments": [
            {
              "originalPosition": 290,
              "body": "nit: Should this be output pk?",
              "createdAt": "2022-05-02T14:16:15Z",
              "updatedAt": "2022-05-02T14:18:50Z"
            },
            {
              "originalPosition": 235,
              "body": "nit: Does the SHA-512 need to be specified here?",
              "createdAt": "2022-05-02T14:18:18Z",
              "updatedAt": "2022-05-02T14:18:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845KyW1",
          "commit": {
            "abbreviatedOid": "7104419"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-02T14:19:22Z",
          "updatedAt": "2022-05-02T14:19:23Z",
          "comments": [
            {
              "originalPosition": 290,
              "body": "```suggestion\r\n- BKS-SerializePublicKey(pk): Identity function which outputs pk as an `Npk=32` byte buffer.\r\n```",
              "createdAt": "2022-05-02T14:19:22Z",
              "updatedAt": "2022-05-02T14:19:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845KyeP",
          "commit": {
            "abbreviatedOid": "60b0da4"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-02T14:19:45Z",
          "updatedAt": "2022-05-02T14:19:45Z",
          "comments": [
            {
              "originalPosition": 235,
              "body": "Yeah, since we use it with HKDF to compute anon_origin_id.",
              "createdAt": "2022-05-02T14:19:45Z",
              "updatedAt": "2022-05-02T14:19:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS845LOcf",
          "commit": {
            "abbreviatedOid": "60b0da4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-02T15:54:11Z",
          "updatedAt": "2022-05-02T15:54:11Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS845LVZP",
          "commit": {
            "abbreviatedOid": "60b0da4"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-02T16:20:51Z",
          "updatedAt": "2022-05-02T16:20:51Z",
          "comments": []
        }
      ]
    },
    {
      "number": 204,
      "id": "PR_kwDOEwrMS844Xe8v",
      "title": "Sign the entire request wire format",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/204",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Turns out this doesn't affect the test vectors after all since we don't have vectors that cover the request signature path. \r\n\r\nCloses #202.",
      "createdAt": "2022-05-24T14:03:50Z",
      "updatedAt": "2022-05-24T18:35:40Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "576996bb5226cb93e792224972ebdc409486f6e9",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/sign-entire-request",
      "headRefOid": "bb3d7165adb576aaf9144241c8da83f6c2a3548a",
      "closedAt": "2022-05-24T18:35:39Z",
      "mergedAt": "2022-05-24T18:35:39Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "25cb0e2be245b7f3be2d5ac4ca05ed626235cbe9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS846nIrF",
          "commit": {
            "abbreviatedOid": "419a1b7"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-24T14:27:30Z",
          "updatedAt": "2022-05-24T14:27:30Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS846nJLR",
          "commit": {
            "abbreviatedOid": "419a1b7"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-05-24T14:28:39Z",
          "updatedAt": "2022-05-24T14:28:44Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "nit: Maybe update the \"Client produce signatures...\" to just explicitly call out signing the entire request, rather than listing the individual bits?",
              "createdAt": "2022-05-24T14:28:39Z",
              "updatedAt": "2022-05-24T14:28:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS846nKsP",
          "commit": {
            "abbreviatedOid": "419a1b7"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-05-24T14:31:51Z",
          "updatedAt": "2022-05-24T14:31:51Z",
          "comments": [
            {
              "originalPosition": 1,
              "body": "Good idea -- done!",
              "createdAt": "2022-05-24T14:31:51Z",
              "updatedAt": "2022-05-24T14:31:51Z"
            }
          ]
        }
      ]
    },
    {
      "number": 205,
      "id": "PR_kwDOEwrMS845mFM0",
      "title": "Changing origin limits",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/205",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Private Access Tokens"
      ],
      "body": "Closes #203",
      "createdAt": "2022-06-13T23:19:04Z",
      "updatedAt": "2022-06-21T18:48:17Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "82895f8d9eaf4037d0881e28467b29bd5bd6f39d",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-17",
      "headRefOid": "20e9d348a8e67042d7a560d5ddda94446aa6eb11",
      "closedAt": "2022-06-21T18:48:17Z",
      "mergedAt": "2022-06-21T18:48:17Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "8829698249b7e4262d83cece6d3208f5cafb881c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS8478PXG",
          "commit": {
            "abbreviatedOid": "d8f4e6c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-14T10:50:55Z",
          "updatedAt": "2022-06-14T11:01:12Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "```suggestion\r\nfor the state kept for a single policy window, it SHOULD reject tokens issued in the remainder\r\nof the policy window.\r\n```\r\n\r\nSince once the policy window rolls, I imagine the Attester can start accepting tokens again. Maybe we ought to also say that?",
              "createdAt": "2022-06-14T10:50:55Z",
              "updatedAt": "2022-06-14T11:01:12Z"
            },
            {
              "originalPosition": 55,
              "body": "```suggestion\r\n- If an Issuer changes the rate-limit values for a single Origin, that change occurring\r\nat the same time across multiple Clients could allow Attesters to recognize an Origin\r\nin common across Clients. To mitigate this, Issuers either can change the limits for\r\nmultiple Origins simultaneously, or have an Origin switch to a separate Issuer.\r\n```",
              "createdAt": "2022-06-14T11:01:09Z",
              "updatedAt": "2022-06-14T11:01:13Z"
            }
          ]
        }
      ]
    },
    {
      "number": 207,
      "id": "PR_kwDOEwrMS846H9pK",
      "title": "Align token-keys configuration",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/207",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #206.",
      "createdAt": "2022-06-22T14:09:58Z",
      "updatedAt": "2022-06-22T14:21:53Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "8829698249b7e4262d83cece6d3208f5cafb881c",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/align-configs",
      "headRefOid": "e570a6bbb3bbf47d906d346529eca552730a8080",
      "closedAt": "2022-06-22T14:21:53Z",
      "mergedAt": "2022-06-22T14:21:53Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "da718236bcb5ad5e47f36a8d653b0a7ccd521df4"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS848g-Sw",
          "commit": {
            "abbreviatedOid": "e570a6b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-22T14:21:12Z",
          "updatedAt": "2022-06-22T14:21:12Z",
          "comments": []
        }
      ]
    },
    {
      "number": 208,
      "id": "PR_kwDOEwrMS846cETP",
      "title": "Update reference for CFRG document",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/208",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-27T19:15:44Z",
      "updatedAt": "2022-06-27T19:17:12Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "da718236bcb5ad5e47f36a8d653b0a7ccd521df4",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-18",
      "headRefOid": "cadddf3e8cf7653b62796348a2e741fc4085ac5e",
      "closedAt": "2022-06-27T19:17:12Z",
      "mergedAt": "2022-06-27T19:17:11Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5af68ad6f221c39ba5adc02ded9d0bcbe05d17a9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS8481iV-",
          "commit": {
            "abbreviatedOid": "cadddf3"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T19:16:10Z",
          "updatedAt": "2022-06-27T19:16:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 209,
      "id": "PR_kwDOEwrMS846cFq8",
      "title": "Specify list of encap keys",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/209",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-06-27T19:22:02Z",
      "updatedAt": "2022-06-27T19:25:36Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5af68ad6f221c39ba5adc02ded9d0bcbe05d17a9",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/multiple-encap-keys",
      "headRefOid": "aa042d4c2875fcf7fba2b0ab3fbfcd7149ef090b",
      "closedAt": "2022-06-27T19:25:35Z",
      "mergedAt": "2022-06-27T19:25:35Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b9c133d5efa5470e3f4aa9bd946d8e9566958a84"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS8481kQX",
          "commit": {
            "abbreviatedOid": "95c972a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T19:23:32Z",
          "updatedAt": "2022-06-27T19:23:41Z",
          "comments": [
            {
              "originalPosition": 16,
              "body": "```suggestion\r\nencap-keys to support key rotation, where the order of the keys in the\r\nlist indicates preference as with token-keys.\r\n```",
              "createdAt": "2022-06-27T19:23:32Z",
              "updatedAt": "2022-06-27T19:23:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS8481kcz",
          "commit": {
            "abbreviatedOid": "aa042d4"
          },
          "author": "smhendrickson",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-06-27T19:24:17Z",
          "updatedAt": "2022-06-27T19:24:17Z",
          "comments": []
        }
      ]
    },
    {
      "number": 214,
      "id": "PR_kwDOEwrMS846213O",
      "title": "Add some pictures and explanatory rationale",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/214",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #213.\r\nCloses #211.\r\nCloses #210.",
      "createdAt": "2022-07-05T13:43:00Z",
      "updatedAt": "2022-07-05T20:42:21Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "a05d69d09e1e0cfef1ac791c32138fe4d6b46dbb",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/clarifications",
      "headRefOid": "53483a21a24a42545cbb9dd8ad897a9d89064045",
      "closedAt": "2022-07-05T20:42:21Z",
      "mergedAt": "2022-07-05T20:42:20Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "5887d24183b7a16791d007a56229e40c41768099"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS849V1xa",
          "commit": {
            "abbreviatedOid": "8195dea"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-05T19:50:45Z",
          "updatedAt": "2022-07-05T19:58:11Z",
          "comments": [
            {
              "originalPosition": 10,
              "body": "What is the \"rate limit context\"?\r\n\r\n```suggestion\r\nto link repeated client token requests in order to apply rate-limiting.\r\n```",
              "createdAt": "2022-07-05T19:50:46Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nThe issuance protocol defined in this document decouples sensitive information in the attestation context,\r\nsuch as the client identity, from the information in the redemption context, such as the origin. It does\r\n```",
              "createdAt": "2022-07-05T19:52:30Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 37,
              "body": "```suggestion\r\nso by employing the 'Split Origin, Attester, Issuer' model. In this model, the Issuer\r\nlearns redemption information like origin identity (used to determine per-origin rate limit policies), and the Attester\r\n```",
              "createdAt": "2022-07-05T19:53:57Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nlearns attestation information like client identity (used to keep track of the previous instances of token issuance).\r\n```",
              "createdAt": "2022-07-05T19:54:33Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 48,
              "body": "```suggestion\r\nare within the rate limit. The Client's token request to the Attester (constructed\r\naccording to {{request-one}}, and forwarded to the Issuer according to {{request-two}})\r\ncontains encrypted information that the Issuer uses to identify the relevant rate\r\nlimit policy to apply. This rate limit policy is returned to the Attester (according\r\nto {{response-one}}), which then checks whether or not the Client is within this\r\npolicy. If yes, the Attester forwards the issuer token response to the Client (according\r\nto {{response-two}}) so that the resulting token can be redeemed by the Origin.\r\n```",
              "createdAt": "2022-07-05T19:55:17Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 90,
              "body": "```suggestion\r\n{{fig-example-deny}} shows how this interaction works for client requests that\r\nexceed the rate limit. The Client's request to the Issuer and the Issuer's\r\nresponse to the Attester are the same. However, in this scenario, the Client\r\nis not within the rate limit, so the Attester responds to the Client with an\r\nerror instead of the issuer's token response.\r\n```",
              "createdAt": "2022-07-05T19:55:50Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 131,
              "body": "```suggestion\r\nUnlike the basic issuance protocol {{ISSUANCE}}, the rate-limited issuance protocol\r\nin this document has additional functional and state requirements for Client, Attester,\r\nand Issuer. {{attester-state}} describes the state that the Attester must track\r\nin order to enforce these limits, {{client-state}} describes the Client state necessary\r\nfor successive token requests with the Attester, and {{issuer-state}} describes the state\r\nnecessary for the Issuer to apply rate limits. The functional description of each\r\nparticipant in this protocol is explained in {{issuance}}\r\n```",
              "createdAt": "2022-07-05T19:56:25Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 154,
              "body": "Beyond the fact that it is safe, can we explain why it needs to be reused here?",
              "createdAt": "2022-07-05T19:57:23Z",
              "updatedAt": "2022-07-05T19:58:11Z"
            },
            {
              "originalPosition": 163,
              "body": "```suggestion\r\nadditionally authenticate application-layer information that is visible to intermediaries,\r\nwhich is the case for the data visible to the Attester.\r\n```",
              "createdAt": "2022-07-05T19:58:08Z",
              "updatedAt": "2022-07-05T19:58:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS849V5Gd",
          "commit": {
            "abbreviatedOid": "8195dea"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-05T20:05:26Z",
          "updatedAt": "2022-07-05T20:05:27Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "I gave the reasons for its reuse in the first sentence, so I think is sufficient (without explaining all the previous failed attempts at this protocol).",
              "createdAt": "2022-07-05T20:05:26Z",
              "updatedAt": "2022-07-05T20:05:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS849V7Re",
          "commit": {
            "abbreviatedOid": "ca89295"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-05T20:15:17Z",
          "updatedAt": "2022-07-05T20:15:17Z",
          "comments": [
            {
              "originalPosition": 154,
              "body": "The first sentence about the client secret use doesn't say why the request signatures and Anonymous Issuer Origin ID are related. Can we add just a couple words on that?",
              "createdAt": "2022-07-05T20:15:17Z",
              "updatedAt": "2022-07-05T20:15:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS849WBiZ",
          "commit": {
            "abbreviatedOid": "53483a2"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-05T20:41:49Z",
          "updatedAt": "2022-07-05T20:41:49Z",
          "comments": []
        }
      ]
    },
    {
      "number": 215,
      "id": "PR_kwDOEwrMS8464Xik",
      "title": "Add more discussion on attester's role in key consistency",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/215",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [],
      "body": "Closes #212",
      "createdAt": "2022-07-05T21:18:13Z",
      "updatedAt": "2022-07-05T22:12:22Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5887d24183b7a16791d007a56229e40c41768099",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-19",
      "headRefOid": "e5b9c3f30988a6e687f9f26eb88e1b481529f3cb",
      "closedAt": "2022-07-05T22:12:22Z",
      "mergedAt": "2022-07-05T22:12:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c932169248055584853435663bb311fa104b940c"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS849WNG-",
          "commit": {
            "abbreviatedOid": "4bd174d"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-05T21:31:42Z",
          "updatedAt": "2022-07-05T21:32:25Z",
          "comments": [
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nof the issuer_encap_key_id in Client-generated requests ({{request-one}}) to reject requests where\r\n```",
              "createdAt": "2022-07-05T21:31:42Z",
              "updatedAt": "2022-07-05T21:32:25Z"
            },
            {
              "originalPosition": 11,
              "body": "```suggestion\r\nintends de-anonymize a client to the Issuer. In order to handle encapsulation key rotation, the Attester\r\n```",
              "createdAt": "2022-07-05T21:32:08Z",
              "updatedAt": "2022-07-05T21:32:25Z"
            }
          ]
        }
      ]
    },
    {
      "number": 216,
      "id": "PR_kwDOEwrMS8464Zz8",
      "title": "Add Origin IDs",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/216",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #142.",
      "createdAt": "2022-07-05T21:30:16Z",
      "updatedAt": "2022-07-06T01:41:20Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "5887d24183b7a16791d007a56229e40c41768099",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/origin-ids",
      "headRefOid": "d8f366993dfae2eb30183e8f73b31aa2ac6a8208",
      "closedAt": "2022-07-06T01:41:20Z",
      "mergedAt": "2022-07-06T01:41:20Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "53d8a226c780ab1a41cf2b5c14a9fe2dd2d85afc"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS849WW6L",
          "commit": {
            "abbreviatedOid": "69a116a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-07-05T22:13:53Z",
          "updatedAt": "2022-07-05T22:15:08Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Should we label this anonymous?\r\n\r\n```suggestion\r\n        |   + Anon Origin ID      |    |          |   |           |\r\n```",
              "createdAt": "2022-07-05T22:13:53Z",
              "updatedAt": "2022-07-05T22:15:08Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n        |   + Anon Origin ID      |    |          |   |           |\r\n```",
              "createdAt": "2022-07-05T22:14:04Z",
              "updatedAt": "2022-07-05T22:15:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS849WXb8",
          "commit": {
            "abbreviatedOid": "69a116a"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-07-05T22:17:29Z",
          "updatedAt": "2022-07-05T22:17:29Z",
          "comments": [
            {
              "originalPosition": 24,
              "body": "Wouldn't hurt -- fixed!",
              "createdAt": "2022-07-05T22:17:29Z",
              "updatedAt": "2022-07-05T22:17:29Z"
            }
          ]
        }
      ]
    },
    {
      "number": 220,
      "id": "PR_kwDOEwrMS8480Ozu",
      "title": "Address token<>origin binding with per-Origin Token Keys",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/220",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #218\r\nCloses #217",
      "createdAt": "2022-08-08T13:51:23Z",
      "updatedAt": "2022-08-12T16:25:26Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "53d8a226c780ab1a41cf2b5c14a9fe2dd2d85afc",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/request-changes",
      "headRefOid": "dd9f464febe19309b890dad6900ea7806a6d4cee",
      "closedAt": "2022-08-12T16:25:26Z",
      "mergedAt": "2022-08-12T16:25:26Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "7812c1a614b55b7336a076faa2584243d758485b"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@chris-wood I think we also need to update this example in section 7.1.2:\r\n\r\n~~~\r\ncontext = concat(token_type,\r\n                 token_key_id,\r\n                 issuer_encap_key_id,\r\n                 encode(2, len(encrypted_token_request)),\r\n                 encrypted_token_request)\r\nrequest_signature = BKS-BlindKeySign(sk_sign, sk_blind, context)\r\n~~~",
          "createdAt": "2022-08-12T14:48:06Z",
          "updatedAt": "2022-08-12T14:48:06Z"
        },
        {
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "body": "@tfpauly fixed -- good catch!",
          "createdAt": "2022-08-12T16:16:28Z",
          "updatedAt": "2022-08-12T16:16:28Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84_f6OE",
          "commit": {
            "abbreviatedOid": "6bdc612"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-08T14:57:46Z",
          "updatedAt": "2022-08-08T15:05:50Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "I wonder if this should be more than a byte, now that we're going to potentially have a lot of keys to worry about collisions for?",
              "createdAt": "2022-08-08T14:57:46Z",
              "updatedAt": "2022-08-08T15:05:50Z"
            },
            {
              "originalPosition": 150,
              "body": "Probably want to explicitly call out that the token key has to match the key ID and origin name, to prevent cross-origin key usage.\r\n\r\n\"If there is no Token Key whose truncated key ID matches InnerTokenRequest.token_key_id and whose origin matches Origin Name, ...\"",
              "createdAt": "2022-08-08T15:04:34Z",
              "updatedAt": "2022-08-08T15:05:50Z"
            },
            {
              "originalPosition": 207,
              "body": "Should this pick up a line about why token key reuse across origins would be a bad idea?",
              "createdAt": "2022-08-08T15:05:47Z",
              "updatedAt": "2022-08-08T15:05:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_gBvD",
          "commit": {
            "abbreviatedOid": "6bdc612"
          },
          "author": "dvorak42",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-08T15:17:13Z",
          "updatedAt": "2022-08-08T15:17:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84_gHwP",
          "commit": {
            "abbreviatedOid": "6bdc612"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-08T15:33:26Z",
          "updatedAt": "2022-08-08T15:33:26Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Good point! We can simplify this and make it 32 bytes. ",
              "createdAt": "2022-08-08T15:33:26Z",
              "updatedAt": "2022-08-08T15:33:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_gI8a",
          "commit": {
            "abbreviatedOid": "6bdc612"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-08T15:36:45Z",
          "updatedAt": "2022-08-08T15:36:46Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Yep, added.",
              "createdAt": "2022-08-08T15:36:46Z",
              "updatedAt": "2022-08-08T15:36:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_gfD-",
          "commit": {
            "abbreviatedOid": "3650094"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-08T16:40:26Z",
          "updatedAt": "2022-08-08T17:18:48Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "```suggestion\r\nthe mechanism by which Origins obtain their Token Key value is not specified\r\nhere.\r\n```\r\n\r\nSince it could be specified elsewhere at some point...",
              "createdAt": "2022-08-08T16:40:26Z",
              "updatedAt": "2022-08-08T17:18:48Z"
            },
            {
              "originalPosition": 66,
              "body": "```suggestion\r\n- Token Key, a blind signature public key specific to the Origin. This key is owned by the\r\n  Issuer identified by the TokenChallenge.issuer_name.\r\n```",
              "createdAt": "2022-08-08T16:41:47Z",
              "updatedAt": "2022-08-08T17:18:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_hOr1",
          "commit": {
            "abbreviatedOid": "c1a27f3"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-08T19:18:19Z",
          "updatedAt": "2022-08-08T19:18:19Z",
          "comments": [
            {
              "originalPosition": 84,
              "body": "What about removing the key ID altogether? It will prevent any correlation and key targeting attack concerns.\r\n\r\nIt does mean that during key rotation, you will have failures. But since we say you shouldn't rely on these tokens, that's probably OK?",
              "createdAt": "2022-08-08T19:18:19Z",
              "updatedAt": "2022-08-08T19:18:19Z"
            }
          ]
        }
      ]
    },
    {
      "number": 223,
      "id": "PR_kwDOEwrMS849FwIJ",
      "title": "Use the key blinding contexts (and keep them separate)",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/223",
      "state": "MERGED",
      "author": "chris-wood",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "cc @FredericJacobs \r\n\r\nSee the corresponding change [here](https://github.com/cloudflare/pat-go/pull/18/commits/36d6705816141f305e7cba6425639b502d50bad8).",
      "createdAt": "2022-08-12T12:53:55Z",
      "updatedAt": "2022-08-14T12:07:18Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "7812c1a614b55b7336a076faa2584243d758485b",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "caw/use-key-blinding-context",
      "headRefOid": "a5cffdf9772f8b4fdf8ed1de7c40fe2a2e618bcd",
      "closedAt": "2022-08-14T12:07:18Z",
      "mergedAt": "2022-08-14T12:07:18Z",
      "mergedBy": "chris-wood",
      "mergeCommit": {
        "oid": "e5533d61902d84bfa7e7c06e10c37ac0f5d42400"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS84_2OyS",
          "commit": {
            "abbreviatedOid": "be68b42"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-08-12T14:29:29Z",
          "updatedAt": "2022-08-12T14:29:29Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84_2X-S",
          "commit": {
            "abbreviatedOid": "be68b42"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-12T14:55:21Z",
          "updatedAt": "2022-08-12T14:55:21Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "```suggestion\r\nblinded_key = BKS-BlindPublicKey(pk_sign, sk_blind, ctx)\r\n```",
              "createdAt": "2022-08-12T14:55:21Z",
              "updatedAt": "2022-08-12T14:55:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_2iqY",
          "commit": {
            "abbreviatedOid": "be68b42"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-12T15:29:39Z",
          "updatedAt": "2022-08-12T15:29:39Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "Is there something else we want to bind in the context?\r\n\r\nNot thinking of anything in particular but just the token type and a string does not seem like it's binding a lot.\r\n\r\nMaybe something to take another look at in the pats-analysis?",
              "createdAt": "2022-08-12T15:29:39Z",
              "updatedAt": "2022-08-12T15:29:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS84_2i2K",
          "commit": {
            "abbreviatedOid": "be68b42"
          },
          "author": "FredericJacobs",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good to me overall. I wonder if the binding in the context is sufficient or if other things should be added.",
          "createdAt": "2022-08-12T15:30:15Z",
          "updatedAt": "2022-08-12T15:30:15Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS84_2n_w",
          "commit": {
            "abbreviatedOid": "fc47e3c"
          },
          "author": "chris-wood",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2022-08-12T15:46:48Z",
          "updatedAt": "2022-08-12T15:46:48Z",
          "comments": [
            {
              "originalPosition": 31,
              "body": "So I think we need to this context to say \"this is client blinding for the rate limited privacy pass protocol,\" and I think what we have suffices for that. But I'm open to adding more if we think it's needed.",
              "createdAt": "2022-08-12T15:46:48Z",
              "updatedAt": "2022-08-12T15:46:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 224,
      "id": "PR_kwDOEwrMS84-pDlv",
      "title": "Fix the abbreviated title",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/224",
      "state": "MERGED",
      "author": "martinthomson",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2022-09-09T00:00:54Z",
      "updatedAt": "2022-09-09T20:49:16Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e5533d61902d84bfa7e7c06e10c37ac0f5d42400",
      "headRepository": "martinthomson/privacy-proxy",
      "headRefName": "patch-1",
      "headRefOid": "e97ae47b152b5da6afa587104ec2b1d334f7988e",
      "closedAt": "2022-09-09T20:49:16Z",
      "mergedAt": "2022-09-09T20:49:16Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "9136713c03e2b62de04173cb6eb0751db86f2528"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85BqcsG",
          "commit": {
            "abbreviatedOid": "e97ae47"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-09T03:15:23Z",
          "updatedAt": "2022-09-09T03:15:23Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS85BvNl-",
          "commit": {
            "abbreviatedOid": "e97ae47"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2022-09-09T20:49:10Z",
          "updatedAt": "2022-09-09T20:49:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 227,
      "id": "PR_kwDOEwrMS85AJ2f0",
      "title": "Add percent encoding for commas in CNAMEs",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/227",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "Closes #226",
      "createdAt": "2022-10-04T17:43:30Z",
      "updatedAt": "2022-10-04T17:44:15Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "939873e6859487540c63be5cd97e00296211b8a1",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-20",
      "headRefOid": "0b74479f5213fa099b5ff81e2773344c9267a278",
      "closedAt": "2022-10-04T17:44:15Z",
      "mergedAt": "2022-10-04T17:44:15Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "eaffef1522713c529e12b9f281470cba27768b23"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 231,
      "id": "PR_kwDOEwrMS85E7Rft",
      "title": "Remove SVCB reference",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/231",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [
        "DNS Proxy Status"
      ],
      "body": "Closes #229",
      "createdAt": "2022-12-09T17:23:52Z",
      "updatedAt": "2022-12-18T23:19:07Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "20ff460ef0af06e67fc9c07841c02beeff770427",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-21",
      "headRefOid": "676b08db6fa7093e843b7de7f49905a97111ccf1",
      "closedAt": "2022-12-09T17:25:24Z",
      "mergedAt": "2022-12-09T17:25:24Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "e1a5904e702d6dead5a7e56675ed43120255883a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85I1-aJ",
          "commit": {
            "abbreviatedOid": "676b08d"
          },
          "author": "Smithad499",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "3e8c73c91f7a2d073117ebe33b1281b9a2d75a6f",
          "createdAt": "2022-12-18T23:17:18Z",
          "updatedAt": "2022-12-18T23:17:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 233,
      "id": "PR_kwDOEwrMS85GjghO",
      "title": "Grammar nit",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/233",
      "state": "MERGED",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-01-03T16:47:59Z",
      "updatedAt": "2023-01-03T20:47:51Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "e1a5904e702d6dead5a7e56675ed43120255883a",
      "headRepository": "bemasc/privacy-proxy",
      "headRefName": "patch-1",
      "headRefOid": "7a85e24518ad72faf35cb5c90928a07207f052ec",
      "closedAt": "2023-01-03T20:47:51Z",
      "mergedAt": "2023-01-03T20:47:51Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "a77c0534f501ffa80e20050b7d4cea2f03d5fa2d"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85JnfdW",
          "commit": {
            "abbreviatedOid": "7a85e24"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-01-03T20:47:43Z",
          "updatedAt": "2023-01-03T20:47:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 236,
      "id": "PR_kwDOEwrMS85WYmH4",
      "title": "Use well-known for the proxy PvD lookup",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/236",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-25T23:02:12Z",
      "updatedAt": "2023-07-25T23:04:13Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ef923fbbba9e084dee5cc20017ad64fd34693366",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-22",
      "headRefOid": "420fb309c5c1f163761e9f1bb64812e24301ff60",
      "closedAt": "2023-07-25T23:04:12Z",
      "mergedAt": "2023-07-25T23:04:12Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "4faaa3b85c174d3a30b0c04e25fe551f18bde5e3"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 240,
      "id": "PR_kwDOEwrMS85cB6GJ",
      "title": "Add Dragana as a co-author to the proxy-config draft.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/240",
      "state": "MERGED",
      "author": "ddragana",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-10-05T16:18:50Z",
      "updatedAt": "2023-10-05T18:14:21Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "4faaa3b85c174d3a30b0c04e25fe551f18bde5e3",
      "headRepository": "ddragana/privacy-proxy",
      "headRefName": "add_author",
      "headRefOid": "e38423b998be7ccae8d39876f5c7ed9e7d1701a2",
      "closedAt": "2023-10-05T18:14:21Z",
      "mergedAt": "2023-10-05T18:14:21Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "c20276e31d1e03e31bcf8af2908d2316382dab11"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85i-H2Q",
          "commit": {
            "abbreviatedOid": "e38423b"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-05T18:14:10Z",
          "updatedAt": "2023-10-05T18:14:10Z",
          "comments": []
        }
      ]
    },
    {
      "number": 241,
      "id": "PR_kwDOEwrMS85crQJe",
      "title": "Reorganize proxy PvD",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/241",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "",
      "createdAt": "2023-10-12T20:42:34Z",
      "updatedAt": "2023-10-13T18:11:46Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "c20276e31d1e03e31bcf8af2908d2316382dab11",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/proxy-pvd-reorg",
      "headRefOid": "16b4cc8674cac1c3965f0e87b4791b204d0cae50",
      "closedAt": "2023-10-13T18:11:46Z",
      "mergedAt": "2023-10-13T18:11:46Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "76aa8ee1e146c00a4d2f57220714cf11bade310a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85j8y5O",
          "commit": {
            "abbreviatedOid": "16b4cc8"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-10-13T16:46:13Z",
          "updatedAt": "2023-10-13T16:46:13Z",
          "comments": []
        }
      ]
    },
    {
      "number": 244,
      "id": "PR_kwDOEwrMS85oU2QG",
      "title": "Make proxies a sub-dictionary",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/244",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Address feedback from IETF 118 to allow more information for proxies, and be explicit on proxy protocol",
      "createdAt": "2024-02-29T18:20:48Z",
      "updatedAt": "2024-03-02T02:18:31Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "76aa8ee1e146c00a4d2f57220714cf11bade310a",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfp/proxies-sub-dict",
      "headRefOid": "98d8940296ac5f7a1eb6a1a2a82f3b0faa1ef34c",
      "closedAt": "2024-03-02T02:18:31Z",
      "mergedAt": "2024-03-02T02:18:31Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "dec3252b7db28edf817172550b95bfa2df8d30b5"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Rendered format is here https://tfpauly.github.io/privacy-proxy/tfp/proxies-sub-dict/draft-pauly-intarea-proxy-config-pvd.html",
          "createdAt": "2024-02-29T20:34:50Z",
          "updatedAt": "2024-02-29T20:34:50Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@DavidSchinazi @ddragana please take a look! I'd like to publish before the deadline Monday.",
          "createdAt": "2024-03-01T21:05:01Z",
          "updatedAt": "2024-03-01T21:05:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS85x1p09",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T21:17:38Z",
          "updatedAt": "2024-02-29T21:29:58Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nthat are identified by a URI template.\r\n```",
              "createdAt": "2024-02-29T21:17:38Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 33,
              "body": "I don't think we have ones that are just URIs, aren't they all templates? And to be pedantic all URIs are URI templates with zero parameters. So I'd just say URI template everywhere to make this simpler",
              "createdAt": "2024-02-29T21:18:17Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 41,
              "body": "Erroring out on unknown keys means it's impossible to extend the dictionary in a backwards-compatible way. In Babel we solved this by having a notion of [mandatory vs non-mandatory](https://www.rfc-editor.org/rfc/rfc8966.html#section-4.4). For example here one way to do this could be to have a prefix in the key that identifies whether it's mandatory or not, such as `!foo` is mandatory but `?bar` isn't. So if you see an unknown key the first character tells you if you can ignore or need to ignore the entire proxy definition.",
              "createdAt": "2024-02-29T21:22:20Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 57,
              "body": "Since some stacks still support SOCKSv4, and there might be a SOCKSv6, maybe add the version?\r\n```suggestion\r\n| socks5 | {{!SOCKSv5=RFC1928}} |\r\n```",
              "createdAt": "2024-02-29T21:25:10Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 5,
              "body": "nit: can we do `CONNECT-IP` instead of `CONNECTIP` to match how the other MASQUE documents reference each other? (same for UDP and TCP)",
              "createdAt": "2024-02-29T21:26:11Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 76,
              "body": "Unextended HTTP CONNECT doesn't have a scheme, only host and port",
              "createdAt": "2024-02-29T21:27:24Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            },
            {
              "originalPosition": 104,
              "body": "```suggestion\r\nExample: [ {\r\n  \"protocol\": \"connect\",\r\n  \"uri\": \"https://proxy.example.com\"\r\n} ]\r\n```",
              "createdAt": "2024-02-29T21:28:10Z",
              "updatedAt": "2024-02-29T22:49:57Z"
            },
            {
              "originalPosition": 115,
              "body": "Should we define an allowed character set for keys?",
              "createdAt": "2024-02-29T21:29:29Z",
              "updatedAt": "2024-02-29T21:29:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2HJ1",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:48:07Z",
          "updatedAt": "2024-02-29T22:48:07Z",
          "comments": [
            {
              "originalPosition": 14,
              "body": "```suggestion\r\nthat are identified by a URI or URI template.\r\n```",
              "createdAt": "2024-02-29T22:48:07Z",
              "updatedAt": "2024-02-29T22:48:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2Hez",
          "commit": {
            "abbreviatedOid": "cc0be53"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:49:24Z",
          "updatedAt": "2024-02-29T22:49:24Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "I understand that you don't send a scheme in the request, but it seems like the proxy could still be identified with a scheme",
              "createdAt": "2024-02-29T22:49:24Z",
              "updatedAt": "2024-02-29T22:49:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2H46",
          "commit": {
            "abbreviatedOid": "4ae3522"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:50:59Z",
          "updatedAt": "2024-02-29T22:50:59Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Would that be something that would be inherited from the JSON string requirements? We didn't have any such requirement for the main registry spelled out I think.",
              "createdAt": "2024-02-29T22:50:59Z",
              "updatedAt": "2024-02-29T22:50:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2IKh",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:52:05Z",
          "updatedAt": "2024-02-29T22:52:05Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "Fixed",
              "createdAt": "2024-02-29T22:52:05Z",
              "updatedAt": "2024-02-29T22:52:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2ITr",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:52:36Z",
          "updatedAt": "2024-02-29T22:52:37Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "It seems clearer to me as URI or URI templates, since people may not be used to thinking of templates for socks, etc.",
              "createdAt": "2024-02-29T22:52:37Z",
              "updatedAt": "2024-02-29T22:52:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2Iee",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T22:53:13Z",
          "updatedAt": "2024-02-29T22:53:13Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Yeah I think this is something to discuss / work on \u2014 potentially as a follow-up",
              "createdAt": "2024-02-29T22:53:13Z",
              "updatedAt": "2024-02-29T22:53:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2QxI",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:29:41Z",
          "updatedAt": "2024-02-29T23:29:41Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Well, pedantically there's no scheme though. I think the most correct way to do this would be to define \"http-connect\" and \"https-connect\" protocols and then have the uri only contain the host and optional port",
              "createdAt": "2024-02-29T23:29:41Z",
              "updatedAt": "2024-02-29T23:29:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2Ry0",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:34:38Z",
          "updatedAt": "2024-02-29T23:34:38Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Technically JSON allows any possible character in keys. That said, some languages have additional restrictions (some C libraries will interpret a null-byte as the end of the key for example, or some high-level languages turn keys into methods but then have requirements on characters allowed in method names such as no spaces, ...). I realize that 8801 didn't constrain its set, but perhaps we can do better here? Wanting consistency makes sense though, in. that case SHOULD limit the characters might be enough",
              "createdAt": "2024-02-29T23:34:38Z",
              "updatedAt": "2024-02-29T23:34:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2R-g",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-02-29T23:35:33Z",
          "updatedAt": "2024-02-29T23:38:28Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Fine by me, please file an issue before merging this though so we don't forget",
              "createdAt": "2024-02-29T23:35:33Z",
              "updatedAt": "2024-02-29T23:38:28Z"
            },
            {
              "originalPosition": 33,
              "body": "Technically SOCKS doesn't use an URI, just a hostname and port. We could use a URI for SOCKS, but then we'd need to define that the URI can only have a host and port, no scheme, path or query",
              "createdAt": "2024-02-29T23:36:39Z",
              "updatedAt": "2024-02-29T23:38:28Z"
            },
            {
              "originalPosition": 76,
              "body": "Otherwise we could keep the current URI but explain that only http and https are allowed and explain what it means",
              "createdAt": "2024-02-29T23:37:33Z",
              "updatedAt": "2024-02-29T23:38:28Z"
            },
            {
              "originalPosition": 147,
              "body": "Can we just use Expert Review? This registry has infinite space so restricting allocation will only lead to squatting",
              "createdAt": "2024-02-29T23:38:25Z",
              "updatedAt": "2024-02-29T23:38:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2iPK",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T00:48:28Z",
          "updatedAt": "2024-03-01T00:48:29Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "Since we need a reference document to point to in the table, it felt like a specification required one?",
              "createdAt": "2024-03-01T00:48:28Z",
              "updatedAt": "2024-03-01T00:48:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2mzd",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T01:11:37Z",
          "updatedAt": "2024-03-01T01:11:37Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "Can't we say that this field is allowed to be empty? That's what many other registries do",
              "createdAt": "2024-03-01T01:11:37Z",
              "updatedAt": "2024-03-01T01:11:37Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x2m6F",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T01:12:12Z",
          "updatedAt": "2024-03-01T01:12:12Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "e.g. https://www.iana.org/assignments/masque/masque.xhtml",
              "createdAt": "2024-03-01T01:12:12Z",
              "updatedAt": "2024-03-01T01:12:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x5MxZ",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T10:29:24Z",
          "updatedAt": "2024-03-01T10:29:25Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "I think we can omit this sentence. The registry defines a name and the reference defines the spec for the protocol. The fact that the header value and the header match is not important. ",
              "createdAt": "2024-03-01T10:29:24Z",
              "updatedAt": "2024-03-01T10:29:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x5QdZ",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T10:37:33Z",
          "updatedAt": "2024-03-01T10:37:34Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "Personally, I prefer http-connect and https-connect.\r\nMaybe it would be clearer to use host name and port instead of URI for CNNECT and socks proxies.",
              "createdAt": "2024-03-01T10:37:34Z",
              "updatedAt": "2024-03-01T10:37:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9u9O",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:02:04Z",
          "updatedAt": "2024-03-01T21:02:05Z",
          "comments": [
            {
              "originalPosition": 33,
              "body": "Okay, adjusted to allow a hostname:port",
              "createdAt": "2024-03-01T21:02:05Z",
              "updatedAt": "2024-03-01T21:02:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9vaB",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:03:23Z",
          "updatedAt": "2024-03-01T21:03:23Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Filed https://github.com/tfpauly/privacy-proxy/issues/245",
              "createdAt": "2024-03-01T21:03:23Z",
              "updatedAt": "2024-03-01T21:03:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9vb7",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:03:29Z",
          "updatedAt": "2024-03-01T21:03:29Z",
          "comments": [
            {
              "originalPosition": 76,
              "body": "@ddragana updated!",
              "createdAt": "2024-03-01T21:03:29Z",
              "updatedAt": "2024-03-01T21:03:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9vqT",
          "commit": {
            "abbreviatedOid": "965fcb4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:04:17Z",
          "updatedAt": "2024-03-01T21:04:17Z",
          "comments": [
            {
              "originalPosition": 115,
              "body": "Filed https://github.com/tfpauly/privacy-proxy/issues/246",
              "createdAt": "2024-03-01T21:04:17Z",
              "updatedAt": "2024-03-01T21:04:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9vtT",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:04:25Z",
          "updatedAt": "2024-03-01T21:04:25Z",
          "comments": [
            {
              "originalPosition": 147,
              "body": "Allowing it to be empty now",
              "createdAt": "2024-03-01T21:04:25Z",
              "updatedAt": "2024-03-01T21:04:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x9vz1",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-01T21:04:46Z",
          "updatedAt": "2024-03-01T21:04:47Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "@ddragana I updated the sentence to just explain that this is nice for consistency. It doesn't matter technically, just is less confusing.",
              "createdAt": "2024-03-01T21:04:46Z",
              "updatedAt": "2024-03-01T21:04:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x_Tew",
          "commit": {
            "abbreviatedOid": "d15ed4f"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T00:59:59Z",
          "updatedAt": "2024-03-02T00:59:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "```suggestion\r\nEach proxy is defined by a proxy protocol, a proxy location (i.e., a hostname and port or a URI template\r\n```",
              "createdAt": "2024-03-02T00:59:59Z",
              "updatedAt": "2024-03-02T02:18:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x_WVg",
          "commit": {
            "abbreviatedOid": "5d99077"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-03-02T01:10:48Z",
          "updatedAt": "2024-03-02T01:10:48Z",
          "comments": [
            {
              "originalPosition": 56,
              "body": "Looks good, thanks.",
              "createdAt": "2024-03-02T01:10:48Z",
              "updatedAt": "2024-03-02T01:10:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS85x_ePP",
          "commit": {
            "abbreviatedOid": "d15ed4f"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-03-02T01:31:06Z",
          "updatedAt": "2024-03-02T01:31:06Z",
          "comments": []
        }
      ]
    },
    {
      "number": 247,
      "id": "PR_kwDOEwrMS85ownpy",
      "title": "Add support for DNS zone exclusion lists",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/247",
      "state": "CLOSED",
      "author": "joshco",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "TODO: make new key in PVD spec.  Update accordingly if necessary",
      "createdAt": "2024-03-05T19:38:28Z",
      "updatedAt": "2024-03-06T23:39:55Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "dec3252b7db28edf817172550b95bfa2df8d30b5",
      "headRepository": "joshco/privacy-proxy",
      "headRefName": "joshco/dnsExclusions",
      "headRefOid": "d50669a0b7c7fec990831098986e866848255456",
      "closedAt": "2024-03-06T16:26:14Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "I've opened #248 \u2014 let's track the issue there. I think we may want to discuss more if the key goes at the top level, or within a proxy sub-dictionary.",
          "createdAt": "2024-03-06T16:26:14Z",
          "updatedAt": "2024-03-06T16:26:14Z"
        },
        {
          "author": "joshco",
          "authorAssociation": "NONE",
          "body": "Sounds like a good idea",
          "createdAt": "2024-03-06T23:39:53Z",
          "updatedAt": "2024-03-06T23:39:53Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 250,
      "id": "PR_kwDOEwrMS85wYdAW",
      "title": "Rename draft after the WG adoption",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/250",
      "state": "MERGED",
      "author": "ddragana",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-23T21:18:55Z",
      "updatedAt": "2024-05-23T21:55:00Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "dec3252b7db28edf817172550b95bfa2df8d30b5",
      "headRepository": "ddragana/privacy-proxy",
      "headRefName": "rename_draft",
      "headRefOid": "ae632c179984197b858bb383f897f4ccd5702c21",
      "closedAt": "2024-05-23T21:55:00Z",
      "mergedAt": "2024-05-23T21:55:00Z",
      "mergedBy": "ddragana",
      "mergeCommit": {
        "oid": "008b767b8de6d7355663f1bfc8c8453478ac56ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS857sCcV",
          "commit": {
            "abbreviatedOid": "ae632c1"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-23T21:42:43Z",
          "updatedAt": "2024-05-23T21:42:43Z",
          "comments": []
        }
      ]
    },
    {
      "number": 251,
      "id": "PR_kwDOEwrMS850or2y",
      "title": "Add explicit keys for match and exclude domains",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/251",
      "state": "MERGED",
      "author": "tfpauly",
      "authorAssociation": "OWNER",
      "assignees": [
        "tfpauly"
      ],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Closes #248\r\nCloses #245",
      "createdAt": "2024-07-08T03:25:58Z",
      "updatedAt": "2024-07-08T22:12:31Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "008b767b8de6d7355663f1bfc8c8453478ac56ee",
      "headRepository": "tfpauly/privacy-proxy",
      "headRefName": "tfpauly-patch-23",
      "headRefOid": "de3c60fb01d0bb435bf4a9566a5d6e2727ed78ad",
      "closedAt": "2024-07-08T22:12:31Z",
      "mergedAt": "2024-07-08T22:12:31Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "cc89d6c5d6bcba25a86d60b746695591cbd81ac2"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 256,
      "id": "PR_kwDOEwrMS852mKx9",
      "title": "Harmonize SVCB parameters with WKECH",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/256",
      "state": "OPEN",
      "author": "bemasc",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "This is more flexible and consistent.",
      "createdAt": "2024-07-26T16:00:52Z",
      "updatedAt": "2024-07-29T16:02:10Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "cc89d6c5d6bcba25a86d60b746695591cbd81ac2",
      "headRepository": "bemasc/privacy-proxy",
      "headRefName": "patch-2",
      "headRefOid": "41cf1f14075f87a2b38f25347d5ac72fb8411d7e",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Nice! We should probably update the examples, etc too",
          "createdAt": "2024-07-26T19:39:34Z",
          "updatedAt": "2024-07-26T19:39:34Z"
        },
        {
          "author": "bemasc",
          "authorAssociation": "CONTRIBUTOR",
          "body": "> Nice! We should probably update the examples, etc too\r\n\r\nOK, done",
          "createdAt": "2024-07-29T16:02:10Z",
          "updatedAt": "2024-07-29T16:02:10Z"
        }
      ],
      "reviews": []
    },
    {
      "number": 257,
      "id": "PR_kwDOEwrMS859u9nM",
      "title": "ECHConfigList, IPv4 and IPv6 hints for reaching proxies without DNS",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/257",
      "state": "OPEN",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs",
        "Discuss"
      ],
      "body": "Signalling ECHConfigList would allow clients to use Encrypted Client Hello when establishing TLS-based transport with the proxy.\r\nSince spec already suggests passing ALPN hint it makes sense to add `ech` key similarly to HTTPS DNS record.",
      "createdAt": "2024-10-06T15:27:59Z",
      "updatedAt": "2024-10-13T02:39:38Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "cc89d6c5d6bcba25a86d60b746695591cbd81ac2",
      "headRepository": "yaroslavros/privacy-proxy",
      "headRefName": "ech",
      "headRefOid": "3396248c9ac80ba505316574cb6735334c662e66",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "Added ipv4hint and ipv6hint to complete the use case when client cannot or does not want to use DNS.\r\n\r\nAgain, this is not uncommon in enterprise environments to not allow end devices to perform DNS resolution and requesting everything through proxy by hostname. Providing IP address hints as well as ECH for the proxy would allow getting full benefits of TLS channel to the proxy in such setups.",
          "createdAt": "2024-10-12T11:50:33Z",
          "updatedAt": "2024-10-12T11:50:33Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86MP5_F",
          "commit": {
            "abbreviatedOid": "1fea994"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-07T21:38:07Z",
          "updatedAt": "2024-10-07T21:38:11Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I wonder if this is really needed in this JSON... if the name of the proxy needs to be resolved with DNS, we could get ECH that way. If the proxy is just an IP address, do we need ECH?\r\n\r\nThe arguments I see in favor of having this are:\r\n1. We could have other ECH-protected data other than SNI\r\n2. This location is more trusted/secure than DNS",
              "createdAt": "2024-10-07T21:38:07Z",
              "updatedAt": "2024-10-07T21:38:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86MP_h9",
          "commit": {
            "abbreviatedOid": "1fea994"
          },
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T21:54:26Z",
          "updatedAt": "2024-10-07T21:54:26Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "You are spot on.\r\nECH is not just for SNI but could also be used to hide other potentially sensitive cleartext fields in ClientHello from passive observers - so it could be useful for proxies defined by IP.\r\nAnd yes, this is certainly more trusted/secure than DNS - especially for privacy-centric proxy use cases.\r\nFinally, in many legacy but still widely found enterprise setups explicit proxies are configured in environments that do not have access to public DNS resolution.",
              "createdAt": "2024-10-07T21:54:26Z",
              "updatedAt": "2024-10-07T21:54:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M4ASH",
          "commit": {
            "abbreviatedOid": "1fea994"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T20:02:57Z",
          "updatedAt": "2024-10-11T20:02:57Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I am also not sure if this needs to be here. This also adds another place that needs to be coordinated.",
              "createdAt": "2024-10-11T20:02:57Z",
              "updatedAt": "2024-10-11T20:02:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M4CES",
          "commit": {
            "abbreviatedOid": "1fea994"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T20:09:00Z",
          "updatedAt": "2024-10-11T20:09:00Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "Let's discuss at IETF 121!",
              "createdAt": "2024-10-11T20:09:00Z",
              "updatedAt": "2024-10-11T20:09:00Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M4JJJ",
          "commit": {
            "abbreviatedOid": "1fea994"
          },
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-11T20:32:53Z",
          "updatedAt": "2024-10-11T20:32:53Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "The primary use case I had in mind is to allow ECH to the TLS enabled proxy in environments where clients do not have access to DNS and rely on proxy to perform the resolution.\r\nHappy to discuss at IETF 121.",
              "createdAt": "2024-10-11T20:32:53Z",
              "updatedAt": "2024-10-11T20:32:53Z"
            }
          ]
        }
      ]
    },
    {
      "number": 258,
      "id": "PR_kwDOEwrMS859u9vy",
      "title": "JavaScript engine inconsistencies is the biggest problem with PAC files",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/258",
      "state": "MERGED",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Variations between PAC file parsing by different JavaScript engine is a major issue... Some software even has to carry around full blown JavaScript engine just to parse PAC files as system libraries cannot always be trusted.\r\n\r\nLet's call this out.",
      "createdAt": "2024-10-06T15:29:44Z",
      "updatedAt": "2024-10-12T11:25:20Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "cc89d6c5d6bcba25a86d60b746695591cbd81ac2",
      "headRepository": "yaroslavros/privacy-proxy",
      "headRefName": "inconsistencies",
      "headRefOid": "682c2faab4ddcc038d587e0934f040f17d3b5f66",
      "closedAt": "2024-10-07T21:40:23Z",
      "mergedAt": "2024-10-07T21:40:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "b50d110abf7af9ecf9e6b388561fef9c69bbd6ae"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86MP6On",
          "commit": {
            "abbreviatedOid": "d68556a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T21:38:54Z",
          "updatedAt": "2024-10-07T21:38:54Z",
          "comments": [
            {
              "originalPosition": 6,
              "body": "```suggestion\r\non executing Javascript scripts, which are prone to implementation-specific\r\ninconsistencies and can open up security vulnerabilities.\r\n```",
              "createdAt": "2024-10-07T21:38:54Z",
              "updatedAt": "2024-10-07T21:39:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86MP6Y3",
          "commit": {
            "abbreviatedOid": "682c2fa"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-07T21:39:25Z",
          "updatedAt": "2024-10-07T21:39:25Z",
          "comments": []
        }
      ]
    },
    {
      "number": 259,
      "id": "PR_kwDOEwrMS859u-Rr",
      "title": "Domain, IP and port based destinations instead of split-DNS",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/259",
      "state": "MERGED",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Proxies are often selected not only based on zones, but also based on:\r\n- specific hostnames\r\n- IP addresses or subnets\r\n- destination ports\r\n\r\nThis proposed change replaces zone based split-DNS with more traditional hostname/wildcard based matching and adds IP and port based selection criteria.\r\n\r\nWhile this won't bring full parity with PAC files, this should cover vast majority of practical use cases.",
      "createdAt": "2024-10-06T15:36:16Z",
      "updatedAt": "2024-10-21T03:17:38Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "4c876b20358e3b1ea0b690aace66d8e7082b2d7a",
      "headRepository": "yaroslavros/privacy-proxy",
      "headRefName": "destinations",
      "headRefOid": "2a02c2cb55f2b70d35a674d18aa6227352504e23",
      "closedAt": "2024-10-21T03:17:38Z",
      "mergedAt": "2024-10-21T03:17:38Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "ac502ec989fa1de41054bd73c27df747e42590d5"
      },
      "comments": [
        {
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "body": "I think matching both subnets and individual IPs is more user-friendly and will make it easier to migrate from PAC files. I've seen PAC files with thousands (yes, really) individual IPs in proxy steering configurations...\r\nDistinguishing between subnets and IPs is trivial and does not create ambiguity for parsers.\r\n\r\nHowever I don't have an overwhelmingly strong opinion on this, so happy to change this to just subnets if you believe that consistency benefits overweight simplicity for users.",
          "createdAt": "2024-10-07T21:13:55Z",
          "updatedAt": "2024-10-07T21:13:55Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86MOshV",
          "commit": {
            "abbreviatedOid": "f752954"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-07T18:30:26Z",
          "updatedAt": "2024-10-07T18:30:26Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "I wonder if this should be `matchSubnets`, and the specific IP is a special case of that (a `/128` or `/32`)",
              "createdAt": "2024-10-07T18:30:26Z",
              "updatedAt": "2024-10-07T18:30:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M9seo",
          "commit": {
            "abbreviatedOid": "f752954"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-13T20:10:02Z",
          "updatedAt": "2024-10-13T20:10:02Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "I am not sure about excludePorts as define here. Ports are a limited space.  Therefore you can define everything by only using matchPorts. The parsing will be easier as well.\r\nMaybe excludedPorts should be use only without matchPorts, to define ports that are disallowed, i.e. use one or the other.\r\nWe should also define that ports above 65535 is an error, do we want to reject the configuration or just ignore the mistake?\r\n\r\nI think we should have a limit of the number of elements in the arrays, or a recommendation that the arrays should not be longer than x elements because the implementation may reject it. Also we should define the behavior in this case, e.g. the config is rejected as a whole or elements after element x are ignored. This is a separate issue though, and I will open a new issue for it.",
              "createdAt": "2024-10-13T20:10:02Z",
              "updatedAt": "2024-10-13T20:10:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M966u",
          "commit": {
            "abbreviatedOid": "f752954"
          },
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-13T23:34:19Z",
          "updatedAt": "2024-10-13T23:34:19Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Great ideas!\r\nI'll update PR accordingly.\r\n\r\nI don't think there is a concrete list size recommendation that will apply reasonably well to all kinds of clients and use cases - but I think it's a good suggestion to put more important entries in the beginning of the list.",
              "createdAt": "2024-10-13T23:34:19Z",
              "updatedAt": "2024-10-13T23:34:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86M-jnQ",
          "commit": {
            "abbreviatedOid": "f752954"
          },
          "author": "ddragana",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-14T02:50:56Z",
          "updatedAt": "2024-10-14T02:50:56Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Short correction: by \"the parsing will be easier as well\" I meant to say that it will be easier to create a single list instead of going through 2 lists to parse it into a single list or always check 2 lists.",
              "createdAt": "2024-10-14T02:50:56Z",
              "updatedAt": "2024-10-14T02:50:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NBjlT",
          "commit": {
            "abbreviatedOid": "f752954"
          },
          "author": "yaroslavros",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-14T09:52:24Z",
          "updatedAt": "2024-10-14T09:52:24Z",
          "comments": [
            {
              "originalPosition": 60,
              "body": "Absolutely! PR amended.",
              "createdAt": "2024-10-14T09:52:24Z",
              "updatedAt": "2024-10-14T09:52:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86N6BlW",
          "commit": {
            "abbreviatedOid": "68c964d"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T02:49:20Z",
          "updatedAt": "2024-10-21T03:04:13Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "```suggestion\r\n`proxies` array, `protocol` and `proxy`. There are also optional keys, including\r\n```",
              "createdAt": "2024-10-21T02:49:20Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 25,
              "body": "```suggestion\r\n`alpn`, and destination accessibility keys defined in {{destinations}}.\r\n```",
              "createdAt": "2024-10-21T02:49:37Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 34,
              "body": "```suggestion\r\n# Destination accessibility information for proxies {#destinations}\r\n```",
              "createdAt": "2024-10-21T02:50:06Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 39,
              "body": "```suggestion\r\nDestination accessibility information is used when only a subset of destinations is reachable through\r\n```",
              "createdAt": "2024-10-21T02:50:25Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 45,
              "body": "```suggestion\r\nPvD Additional Information can be used to indicate that a proxy PvD only allows access to a limited\r\n```",
              "createdAt": "2024-10-21T02:50:49Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 50,
              "body": "```suggestion\r\nThis document defines five optional keys for subdictionaries in the `proxies`\r\n```",
              "createdAt": "2024-10-21T02:51:30Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 57,
              "body": "```suggestion\r\n| matchDomains | Yes | An array of FQDNs and wildcard DNS domains that can be accessed over this proxy | Array of Strings | [ \"www.example.com\", \"*.local\" ] |\r\n```",
              "createdAt": "2024-10-21T02:56:31Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 58,
              "body": "```suggestion\r\n| excludeDomains | Yes | An array of FQDNs and wildcard DNS domains that cannot be accessed over this proxy. If matchDomains is specified, excludeDomains should list more specific domains within entries in the matchDomains array | Array of Strings | [ \"exclude.local\" ] |\r\n```",
              "createdAt": "2024-10-21T02:57:39Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\n| matchSubnets | Yes | An array of IP addresses and subnets that can be accessed over this proxy | Array of Strings | [ \"2001:DB8::1\", \"192.168.1.0/24\" ] |\r\n```",
              "createdAt": "2024-10-21T02:58:21Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\n| excludeSubnets | Yes | An array of IP addresses and subnets that cannot be accessed over this proxy. If matchSubnets is specified, excludeDomains should list more specific subnets within entries in the matchSubnets array | Array of Strings | [ \"192.168.1.0/25\", \"192.168.1.254\" ] |\r\n```",
              "createdAt": "2024-10-21T02:59:26Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 61,
              "body": "```suggestion\r\n| matchPorts | Yes | An array of TCP or UDP port ranges accessible over this proxy | Array of Strings | [ \"80\", \"443\", \"1024-65535\" ] |\r\n```",
              "createdAt": "2024-10-21T02:59:57Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 84,
              "body": "```suggestion\r\nA wildcard prefix (`*.`) is used to indicate matching entire domains or subdomains instead of specific hostnames. Note\r\n```",
              "createdAt": "2024-10-21T03:01:13Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 85,
              "body": "```suggestion\r\nthat this can be used to match multiple levels of subdomains. For example \"*.example.com\"\r\n```",
              "createdAt": "2024-10-21T03:01:33Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nEntries in `matchSubnets` correspond to IP addresses and subnets that are available through the\r\n```",
              "createdAt": "2024-10-21T03:01:44Z",
              "updatedAt": "2024-10-21T03:04:13Z"
            },
            {
              "originalPosition": 89,
              "body": "```suggestion\r\nproxy, while entries in `excludeSubnets` define IP addresses and subnets that SHOULD NOT be used\r\n```",
              "createdAt": "2024-10-21T03:01:55Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 90,
              "body": "```suggestion\r\nwith the proxy. Subnet-based destination information SHOULD only be used when\r\n```",
              "createdAt": "2024-10-21T03:02:15Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 91,
              "body": "```suggestion\r\napplications are communicating with destinations identified by only an IP address and not a hostname.\r\n```",
              "createdAt": "2024-10-21T03:02:42Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n`matchPorts` in a list of strings that can be used to instruct the client that only specific destination\r\n```",
              "createdAt": "2024-10-21T03:02:53Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 96,
              "body": "```suggestion\r\nto 2048, including the 1024 and 1028.\r\n```",
              "createdAt": "2024-10-21T03:03:12Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 100,
              "body": "```suggestion\r\nclient, it SHOULD process as many records from the beginning of `matchDomains`, `matchSubnets` and\r\n```",
              "createdAt": "2024-10-21T03:03:31Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            },
            {
              "originalPosition": 101,
              "body": "```suggestion\r\n`matchPorts` lists. These lists SHOULD be sorted with the most important elements placed at\r\n```",
              "createdAt": "2024-10-21T03:03:40Z",
              "updatedAt": "2024-10-21T03:04:14Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86N6Eby",
          "commit": {
            "abbreviatedOid": "48cb237"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T03:05:53Z",
          "updatedAt": "2024-10-21T03:05:53Z",
          "comments": [
            {
              "originalPosition": 107,
              "body": "I'm a bit concerned about this section so would prefer to remove it from the first cut of adding this support \u2014 let's discuss limited clients more!\r\n```suggestion\r\n```",
              "createdAt": "2024-10-21T03:05:53Z",
              "updatedAt": "2024-10-21T03:05:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86N6FJ7",
          "commit": {
            "abbreviatedOid": "bca90b7"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T03:10:40Z",
          "updatedAt": "2024-10-21T03:10:40Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "```suggestion\r\nmatches \"internal.example.com\" as well as \"www.public.example.com\".\r\nEntries that include the wildcard prefix also SHOULD be treated as if they match\r\nan FQDN that only contains the string after the prefix, with no subdomain. So,\r\nan entry in `matchDomains` of \"*.example.com\" would match the FQDN \"example.com\",\r\nunless \"example.com\" were specifically included in `excludeDomains`. This is\r\ndone to prevent commonly needing to include both \"*.example.com\" and \"example.com\"\r\nin the `matchDomains` list.\r\n```",
              "createdAt": "2024-10-21T03:10:40Z",
              "updatedAt": "2024-10-21T03:10:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86N6FOE",
          "commit": {
            "abbreviatedOid": "ef2cbc9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T03:11:07Z",
          "updatedAt": "2024-10-21T03:11:07Z",
          "comments": [
            {
              "originalPosition": 74,
              "body": "```suggestion\r\nwill not be accessible through the proxy. If a hostname is included in the `excludeDomains`\r\n```",
              "createdAt": "2024-10-21T03:11:07Z",
              "updatedAt": "2024-10-21T03:11:07Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86N6F74",
          "commit": {
            "abbreviatedOid": "ad9c86a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-21T03:15:35Z",
          "updatedAt": "2024-10-21T03:15:35Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS86N6GEJ",
          "commit": {
            "abbreviatedOid": "ad9c86a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-21T03:16:27Z",
          "updatedAt": "2024-10-21T03:16:27Z",
          "comments": [
            {
              "originalPosition": 105,
              "body": "```suggestion\r\n`matchPorts` in a list of strings that can be used to instruct the client that only specific destination\r\nTCP or UDP ports are accessible through the proxy. The list may contain individual port numbers\r\n(such as \"80\") or inclusive ranges of ports. For example \"1024-2048\" matches all ports from 1024\r\nto 2048, including the 1024 and 1028.\r\n```",
              "createdAt": "2024-10-21T03:16:27Z",
              "updatedAt": "2024-10-21T03:16:27Z"
            }
          ]
        }
      ]
    },
    {
      "number": 261,
      "id": "PR_kwDOEwrMS85-bjr3",
      "title": "First take on proxy auth hint",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/261",
      "state": "OPEN",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs",
        "Discuss"
      ],
      "body": "Here is my first stab at authentication hints.\r\n\r\nKey use case is to allow client proxy selection based on supported authentication methods.\r\n\r\nFor example, enterprise environment could have an IoT device that is only capable of TLS PSK, a workload that would like to do non-interactive mTLS authentication and an end user device that is happy to do an interactive authentication flow using HTTP methods. All these endpoints could obtain the same information about available proxies and select a proxy that is best suited to their capabilities and preferences.",
      "createdAt": "2024-10-12T21:44:21Z",
      "updatedAt": "2024-10-13T02:39:19Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "b50d110abf7af9ecf9e6b388561fef9c69bbd6ae",
      "headRepository": "yaroslavros/privacy-proxy",
      "headRefName": "auth",
      "headRefOid": "51fe78e6dc11931012183a01a7559324dec0125f",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86M89ic",
          "commit": {
            "abbreviatedOid": "5cc0e55"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-13T02:32:44Z",
          "updatedAt": "2024-10-13T02:33:10Z",
          "comments": [
            {
              "originalPosition": 48,
              "body": "```suggestion\n`http-schemes` MUST NOT be provided if authentication method is not set to `http-proxy`.\n```\n",
              "createdAt": "2024-10-13T02:32:44Z",
              "updatedAt": "2024-10-13T02:33:10Z"
            }
          ]
        }
      ]
    },
    {
      "number": 263,
      "id": "PR_kwDOEwrMS85-lPTQ",
      "title": "Update draft-pauly-httpbis-geoip-hint.md",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/263",
      "state": "MERGED",
      "author": "ciaramcmullin",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [
        "Geo Hint"
      ],
      "body": "This PR updates the reasonings behind the IP Geolocation HTTP Client Hint, emphasizing how the hint enhances client control over their location, reduces the need for extensive IP address pools, minimizes dependencies on IP GeoFeeds on the server side, and preserves user experience.\r\n\r\nThe format for the IP Geo Header remains unchanged in this PR.",
      "createdAt": "2024-10-14T18:52:58Z",
      "updatedAt": "2024-10-19T03:33:08Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "b50d110abf7af9ecf9e6b388561fef9c69bbd6ae",
      "headRepository": "ciaramcmullin/privacy-proxy",
      "headRefName": "privacy-proxy-draft",
      "headRefOid": "ee3eb30f18d031345d963286e94c12fcce016d98",
      "closedAt": "2024-10-19T03:33:07Z",
      "mergedAt": "2024-10-19T03:33:07Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5c6bf97cb166d9745a20eced2b86a7aaabaa9bd3"
      },
      "comments": [
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "@ciaramcmullin can you update the authors on the document to add yourself (and/or others)? We probably don't want more than 4 listed, but I'd like you to be credited.",
          "createdAt": "2024-10-16T18:58:51Z",
          "updatedAt": "2024-10-16T18:58:51Z"
        },
        {
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "body": "Looks like a good checkpoint, thanks all!",
          "createdAt": "2024-10-19T03:33:05Z",
          "updatedAt": "2024-10-19T03:33:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86NdBZs",
          "commit": {
            "abbreviatedOid": "11b7661"
          },
          "author": "djmitche",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T17:25:12Z",
          "updatedAt": "2024-10-16T17:25:12Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "The examples here include `IP-` in the header name, but the text does not. Since the draft emphasizes that the client should determine the location from its own IP, maybe it makes sense to keep the header name `Sec-CH-IP-Geo`. I don't have strong opinions, and it's probably too early for long discussion on the topic, but the draft should at least be consistent.",
              "createdAt": "2024-10-16T17:25:12Z",
              "updatedAt": "2024-10-16T17:25:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NdMqk",
          "commit": {
            "abbreviatedOid": "11b7661"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T17:46:32Z",
          "updatedAt": "2024-10-16T17:46:33Z",
          "comments": [
            {
              "originalPosition": 92,
              "body": "Thanks for catching this Dustin! I meant to keep the \"IP\". I updated this in latest commit.",
              "createdAt": "2024-10-16T17:46:33Z",
              "updatedAt": "2024-10-16T17:46:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nd4qL",
          "commit": {
            "abbreviatedOid": "6d33c01"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "CHANGES_REQUESTED",
          "body": "",
          "createdAt": "2024-10-16T19:00:27Z",
          "updatedAt": "2024-10-16T19:09:09Z",
          "comments": [
            {
              "originalPosition": 8,
              "body": "Saying \"share its location\" can sound a bit scary\r\n\r\n```suggestion\r\nshare information about its network geolocation, reducing the need for destination servers to map IP\r\n```",
              "createdAt": "2024-10-16T19:00:27Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\nranges to locations. By actively providing this hint, clients gain\r\n```",
              "createdAt": "2024-10-16T19:00:56Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 10,
              "body": "```suggestion\r\ngreater influence and transparency regarding their perceived geolocation.\r\n```",
              "createdAt": "2024-10-16T19:01:04Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nSpecifically, when clients use IP-hiding technologies like VPNs or\r\nproxies, servers can still deliver geographically-relevant content\r\nwithout relying on large pools of IP addresses and geo-IP feeds that\r\ncan be outdated and inaccurate.\r\n```",
              "createdAt": "2024-10-16T19:02:54Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 44,
              "body": "If you include ALPS, it would need a reference. But ALPS is not something that's actually adopted anywhere right now from what I know, so I wouldn't reference it at all.",
              "createdAt": "2024-10-16T19:03:31Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 51,
              "body": "```suggestion\r\nformat of the geolocation hint is the same as that defined for IP\r\n```",
              "createdAt": "2024-10-16T19:03:52Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\nthe client\u2019s network location, shifting geolocation from a passive\r\n```",
              "createdAt": "2024-10-16T19:04:22Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 60,
              "body": "```suggestion\r\nmask their IP addresses through VPNs or proxies. Typically, VPN or proxy\r\n```",
              "createdAt": "2024-10-16T19:04:42Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 62,
              "body": "```suggestion\r\naccurate geolocation. With a client-provided location hint, the hint can\r\n```",
              "createdAt": "2024-10-16T19:04:55Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 64,
              "body": "```suggestion\r\nlocation-specific content such as weather, local news, and search\r\n```",
              "createdAt": "2024-10-16T19:05:10Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 67,
              "body": "```suggestion\r\nresults. In addition, the hint reduces reliance on geo-IP\r\nfeeds that often come with limitations such as outdated\r\nIP-to-location mappings and ongoing maintenance costs.\r\n```",
              "createdAt": "2024-10-16T19:05:30Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 71,
              "body": "This seems like a problem to be totally out of scope. I'd be tempted to leave a TODO here to explain that safe bounds need to be put on this determination.",
              "createdAt": "2024-10-16T19:06:07Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 73,
              "body": "What do you mean by this? What would it mean to eliminate the need? Do you mean for geo-IP feeds?",
              "createdAt": "2024-10-16T19:06:35Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nadditional source of information for many use cases. See {{sec-considerations}}\r\n for more discussion.\r\n```",
              "createdAt": "2024-10-16T19:06:57Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 138,
              "body": "...based on what? This seems pretty vague.",
              "createdAt": "2024-10-16T19:07:52Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 138,
              "body": "I would say that if they don't have a way to know their external IP granularity, they SHOULD NOT include any value.",
              "createdAt": "2024-10-16T19:08:16Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 188,
              "body": "```suggestion\r\nThe use of the Geolocation Client Hint MUST use the `Sec-` header\r\n```",
              "createdAt": "2024-10-16T19:08:43Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            },
            {
              "originalPosition": 207,
              "body": "Maybe mention GPS here",
              "createdAt": "2024-10-16T19:09:02Z",
              "updatedAt": "2024-10-16T19:09:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NeM7f",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Overall this looks good. Comments inline",
          "createdAt": "2024-10-16T19:43:23Z",
          "updatedAt": "2024-10-16T19:57:31Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I think this abstract would be more powerful if we reversed the order to be (1) problem then (2) solution.\r\n\r\nSo something that paraphrases to \"We're doing a lot more IP-hiding to improve privacy these days, but that costs a lot of IPs and also users often get bad geo results so users are sad. We fix this by sending the geo from client to origin. We accomplish that with a client hint\"",
              "createdAt": "2024-10-16T19:43:23Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 44,
              "body": "+1, I would just skip ALPS, mainly because ALPS failed at IETF and we don't want to be associated with that",
              "createdAt": "2024-10-16T19:43:58Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 71,
              "body": "I think this is going to be the main sticking point, so I would resolve it this week. We can say that the hint MUST be determined by a cooperating server looking up the client's IP in a geoIP database. GPS MUST NOT be used. Otherwise we'll get the same opposition we got last time due to privacy concerns",
              "createdAt": "2024-10-16T19:47:08Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 94,
              "body": "The `?` means informative reference, but we want a normative reference. Those are represented with `!` but that's already done on line 43, so just reference without either `?` nor `!`\r\n\r\n```suggestion\r\n{{RFC8942}}. It will not be sent by default and the server MAY\r\n```",
              "createdAt": "2024-10-16T19:48:39Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 138,
              "body": "Then we'd need to define what granularity means. Probably best to be more strict here, and use the normative text I mentioned above\r\n* MUST determine geo using cooperating server and geoIP DB\r\n* client MUST NOT use GPS\r\n* client MAY send this header to servers",
              "createdAt": "2024-10-16T19:51:44Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 138,
              "body": "I don't see the value of a default value. We should either explain it or remove it",
              "createdAt": "2024-10-16T19:52:04Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 167,
              "body": "We definitely don't want this one. That would allow clients to work around laws that limit availability. We should instead say to not do this",
              "createdAt": "2024-10-16T19:53:17Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 171,
              "body": "No need to single out curl, its author might not be too happy about that",
              "createdAt": "2024-10-16T19:53:47Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 178,
              "body": "This text predates this PR, but seems odd to me. @tfpauly what was the point of this? Do you use it? It seems to be quite backwards to go from geo to IP for client subnet. It even seems harmful because you want your DNS to match your data-plane egress, not your actual physical location",
              "createdAt": "2024-10-16T19:55:46Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 187,
              "body": "This MUST seems redundant. This document specifies a header that uses the Sec- prefix. How could someone use this without it?",
              "createdAt": "2024-10-16T19:56:23Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            },
            {
              "originalPosition": 193,
              "body": "I think we should stay away from user visibility and say. The intent here isn't to allow the human user to control this",
              "createdAt": "2024-10-16T19:57:03Z",
              "updatedAt": "2024-10-16T19:57:31Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfICr",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T21:48:02Z",
          "updatedAt": "2024-10-16T21:48:02Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "We can probably remove this. I think it is part of an older version.",
              "createdAt": "2024-10-16T21:48:02Z",
              "updatedAt": "2024-10-16T21:48:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfIJ7",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T21:48:25Z",
          "updatedAt": "2024-10-16T21:48:25Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "Yes, these aren't \"users\" directly.",
              "createdAt": "2024-10-16T21:48:25Z",
              "updatedAt": "2024-10-16T21:48:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOWw",
          "commit": {
            "abbreviatedOid": "6d33c01"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:10:36Z",
          "updatedAt": "2024-10-16T22:10:36Z",
          "comments": [
            {
              "originalPosition": 44,
              "body": "Got it removed!",
              "createdAt": "2024-10-16T22:10:36Z",
              "updatedAt": "2024-10-16T22:10:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOcK",
          "commit": {
            "abbreviatedOid": "6d33c01"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:10:56Z",
          "updatedAt": "2024-10-16T22:10:57Z",
          "comments": [
            {
              "originalPosition": 138,
              "body": "I updated to reflect this. LMK what you think. Thanks!",
              "createdAt": "2024-10-16T22:10:56Z",
              "updatedAt": "2024-10-16T22:10:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOdp",
          "commit": {
            "abbreviatedOid": "6d33c01"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:11:02Z",
          "updatedAt": "2024-10-16T22:11:02Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Done.",
              "createdAt": "2024-10-16T22:11:02Z",
              "updatedAt": "2024-10-16T22:11:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOl4",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:11:30Z",
          "updatedAt": "2024-10-16T22:11:30Z",
          "comments": [
            {
              "originalPosition": 7,
              "body": "I rephrased the introduction to reflect this. LMK what you think!",
              "createdAt": "2024-10-16T22:11:30Z",
              "updatedAt": "2024-10-16T22:11:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOqY",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:11:44Z",
          "updatedAt": "2024-10-16T22:11:44Z",
          "comments": [
            {
              "originalPosition": 167,
              "body": "Ah yes removed. Thanks!",
              "createdAt": "2024-10-16T22:11:44Z",
              "updatedAt": "2024-10-16T22:11:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOsh",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:11:51Z",
          "updatedAt": "2024-10-16T22:11:51Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "Removed.",
              "createdAt": "2024-10-16T22:11:51Z",
              "updatedAt": "2024-10-16T22:11:51Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfOxZ",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:12:06Z",
          "updatedAt": "2024-10-16T22:12:06Z",
          "comments": [
            {
              "originalPosition": 178,
              "body": "Removed this!",
              "createdAt": "2024-10-16T22:12:06Z",
              "updatedAt": "2024-10-16T22:12:06Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfO3v",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:12:29Z",
          "updatedAt": "2024-10-16T22:12:29Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "I believe this also comes from @tfpauly previous draft.",
              "createdAt": "2024-10-16T22:12:29Z",
              "updatedAt": "2024-10-16T22:12:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfO8Y",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-16T22:12:45Z",
          "updatedAt": "2024-10-16T22:12:46Z",
          "comments": [
            {
              "originalPosition": 193,
              "body": "Yes good point. I removed this sentence entirely.",
              "createdAt": "2024-10-16T22:12:45Z",
              "updatedAt": "2024-10-16T22:12:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NfbI9",
          "commit": {
            "abbreviatedOid": "7420029"
          },
          "author": "djmitche",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "The updated introduction is a big improvement, and I appreciate the \"cooperating server\" detail.",
          "createdAt": "2024-10-16T22:59:16Z",
          "updatedAt": "2024-10-16T23:01:03Z",
          "comments": [
            {
              "originalPosition": 157,
              "body": "```suggestion\r\nGeolocation Client Hint, the server MAY defer to alternative methods \r\n```\r\n",
              "createdAt": "2024-10-16T22:59:16Z",
              "updatedAt": "2024-10-16T23:01:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nn9ZB",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "This is getting really close to ready",
          "createdAt": "2024-10-17T19:05:29Z",
          "updatedAt": "2024-10-17T19:22:24Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nThe rise of IP-hiding technologies such as VPNs and proxies helps improve user\r\n```",
              "createdAt": "2024-10-17T19:05:29Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 28,
              "body": "Do we really want to keep the part about the client having a say? That takes us into the policy space and I worry that this will complicate discussions by moving them away from the technical realm",
              "createdAt": "2024-10-17T19:07:27Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 56,
              "body": "```suggestion\r\ncan be done conditionally based on whether a server claims to support a\r\n```",
              "createdAt": "2024-10-17T19:07:42Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 78,
              "body": "```suggestion\r\nresults. In addition, the hint reduces most servers' reliance on geo-IP\r\n```",
              "createdAt": "2024-10-17T19:09:02Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 88,
              "body": "I'm not sure I understand this sentence: the clause after the \"but\" seems unrelated to the one before",
              "createdAt": "2024-10-17T19:10:22Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\nGiven that the Sec-CH-IP-Geo is a high-entropy client hint (i.e.,\r\na client hint that is not in the low-entropy hint table), the server\r\n```",
              "createdAt": "2024-10-17T19:11:08Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 109,
              "body": "As written, this MUST tells all servers to opt-in, but that's not what we want.\r\n```suggestion\r\nneeds to explicitly opt-in in order to receive the Geo Client Hint as defined in\r\n```",
              "createdAt": "2024-10-17T19:11:55Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 86,
              "body": "One of the conventions in RFCs is to not duplicate normative language (MUST/SHOULD/etc). Since we already have the MUST in the Client Behavior section, I would use prose here instead\r\n\r\n```suggestion\r\nThe client determines geolocation via a cooperating server\r\nthat performs a geo-IP database lookup of the client's IP address.\r\n```",
              "createdAt": "2024-10-17T19:14:25Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 142,
              "body": "I'm not sure what this requirement means, how do we quantify information?",
              "createdAt": "2024-10-17T19:16:00Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 155,
              "body": "```suggestion\r\nThe client MAY include the client hint header in requests to the\r\n```",
              "createdAt": "2024-10-17T19:16:14Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 187,
              "body": "Makes sense. Let's still remove it though",
              "createdAt": "2024-10-17T19:17:10Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 207,
              "body": "Since we removed the default value from above, let's remove it from here too",
              "createdAt": "2024-10-17T19:18:18Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 214,
              "body": "Similar to above, let's use prose here to avoid repeating the normative text form the Client Behavior section\r\n\r\n```suggestion\r\nTo prevent disclosing private information, this value cannot be\r\n```",
              "createdAt": "2024-10-17T19:18:50Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            },
            {
              "originalPosition": 201,
              "body": "Should we also mention the country portion here. Perhaps: \"Servers that only offer services to clients that appear to be in a given country or administrative region still need to rely on a geoIP database to determine the region for access control purposes, but they can use the client hint to customize the response to where the client claims to be inside that region.\"",
              "createdAt": "2024-10-17T19:22:11Z",
              "updatedAt": "2024-10-17T19:22:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwHHK",
          "commit": {
            "abbreviatedOid": "1ceb63c"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:09:26Z",
          "updatedAt": "2024-10-18T14:09:27Z",
          "comments": [
            {
              "originalPosition": 142,
              "body": "@tfpauly suggested this change in a previous comment - Tommy could you elaborate here?",
              "createdAt": "2024-10-18T14:09:26Z",
              "updatedAt": "2024-10-18T14:09:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwWjU",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:20:03Z",
          "updatedAt": "2024-10-18T14:20:03Z",
          "comments": [
            {
              "originalPosition": 88,
              "body": "Yeah I think we were trying to say we still need IP-based geolocation and this draft is not trying to get rid of it. With the different updates though I think this sentence isn't necessary anymore. I removed it!",
              "createdAt": "2024-10-18T14:20:03Z",
              "updatedAt": "2024-10-18T14:20:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwW6d",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:20:13Z",
          "updatedAt": "2024-10-18T14:20:13Z",
          "comments": [
            {
              "originalPosition": 207,
              "body": "Done.",
              "createdAt": "2024-10-18T14:20:13Z",
              "updatedAt": "2024-10-18T14:20:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwXEv",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:20:19Z",
          "updatedAt": "2024-10-18T14:20:20Z",
          "comments": [
            {
              "originalPosition": 201,
              "body": "Added!",
              "createdAt": "2024-10-18T14:20:19Z",
              "updatedAt": "2024-10-18T14:20:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwYd-",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:21:18Z",
          "updatedAt": "2024-10-18T14:21:19Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "I actually think it's important to say this since we are trying to emphasize the shift from passive to active fingerprinting here. WDYT?",
              "createdAt": "2024-10-18T14:21:18Z",
              "updatedAt": "2024-10-18T14:21:19Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwbDy",
          "commit": {
            "abbreviatedOid": "bbd6271"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:23:53Z",
          "updatedAt": "2024-10-18T14:23:53Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "I was looking at https://www.rfc-editor.org/rfc/rfc8942.html#name-deployment-and-security-ris and it seems like it may be important to say this based on \"Using the \"Sec-\" prefix signals to servers that the user agent -- and not application content -- generated the values.\" I'm fine with removing it though. WDYT?",
              "createdAt": "2024-10-18T14:23:53Z",
              "updatedAt": "2024-10-18T14:23:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NwboK",
          "commit": {
            "abbreviatedOid": "6d33c01"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T14:24:51Z",
          "updatedAt": "2024-10-18T14:24:52Z",
          "comments": [
            {
              "originalPosition": 73,
              "body": "This was removed. Resolving comment!",
              "createdAt": "2024-10-18T14:24:51Z",
              "updatedAt": "2024-10-18T14:24:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nx_2N",
          "commit": {
            "abbreviatedOid": "bbd6271"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Nice! From my perspective, this is good to go once the last few minor comments are resolved",
          "createdAt": "2024-10-18T18:03:29Z",
          "updatedAt": "2024-10-18T18:09:50Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "In that case I'd drop \"say\" and keep \"transparency\"\r\n\r\n```suggestion\r\ncosts, but it also gives clients more transparency regarding\r\n```",
              "createdAt": "2024-10-18T18:03:29Z",
              "updatedAt": "2024-10-18T18:09:50Z"
            },
            {
              "originalPosition": 187,
              "body": "Yeah let's remove it. It's important that we choose a header that starts with \"Sec-\" but once we've done that we don't need to say anything about it",
              "createdAt": "2024-10-18T18:07:01Z",
              "updatedAt": "2024-10-18T18:09:50Z"
            },
            {
              "originalPosition": 142,
              "body": "I think that Tommy's comment was before we decided to force the use of a cooperating server. I would just remove this sentence now",
              "createdAt": "2024-10-18T18:09:24Z",
              "updatedAt": "2024-10-18T18:09:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NyUah",
          "commit": {
            "abbreviatedOid": "5e037e0"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:52:53Z",
          "updatedAt": "2024-10-18T18:52:53Z",
          "comments": [
            {
              "originalPosition": 187,
              "body": "Ok done!",
              "createdAt": "2024-10-18T18:52:53Z",
              "updatedAt": "2024-10-18T18:52:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86NyUf_",
          "commit": {
            "abbreviatedOid": "c44ffe4"
          },
          "author": "ciaramcmullin",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-18T18:53:08Z",
          "updatedAt": "2024-10-18T18:53:08Z",
          "comments": [
            {
              "originalPosition": 28,
              "body": "Removed \"say\".",
              "createdAt": "2024-10-18T18:53:08Z",
              "updatedAt": "2024-10-18T18:53:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nybm9",
          "commit": {
            "abbreviatedOid": "ca8c6e4"
          },
          "author": "DavidSchinazi",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-18T19:07:41Z",
          "updatedAt": "2024-10-18T19:07:41Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOEwrMS86Nz8qs",
          "commit": {
            "abbreviatedOid": "ca8c6e4"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:20:34Z",
          "updatedAt": "2024-10-19T03:20:34Z",
          "comments": [
            {
              "originalPosition": 29,
              "body": "```suggestion\r\nTechniques that improve user privacy by hiding original client IP addresses,\r\nsuch as VPNs and proxies, have faced challenges with server that rely on\r\nIP addresses to determine client location. Maintaining a geographically\r\nrelevant user experience requires large pools of IP addresses, which can\r\nbe costly. Additionally, users often receive inaccurate geolocation\r\nresults because servers rely on geo-IP feeds that can be outdated. To\r\naddress these challenges, we can allow clients to actively send their\r\nnetwork geolocation directly to the origin server via an HTTP Client\r\nHint. This approach will not only enhance geolocation accuracy and reduce IP\r\ncosts, but it also gives clients more transparency regarding their perceived\r\ngeolocation.\r\n```",
              "createdAt": "2024-10-19T03:20:34Z",
              "updatedAt": "2024-10-19T03:20:34Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz8sj",
          "commit": {
            "abbreviatedOid": "f6a7dfe"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:21:29Z",
          "updatedAt": "2024-10-19T03:21:29Z",
          "comments": [
            {
              "originalPosition": 75,
              "body": "```suggestion\r\nproviders need to manage egress IPs for each region to maintain\r\n```",
              "createdAt": "2024-10-19T03:21:29Z",
              "updatedAt": "2024-10-19T03:21:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz80w",
          "commit": {
            "abbreviatedOid": "b12a6b9"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:26:23Z",
          "updatedAt": "2024-10-19T03:26:24Z",
          "comments": [
            {
              "originalPosition": 135,
              "body": "```suggestion\r\nor detailed than what can be inferred from the user\u2019s IP address.\r\nWhen the client is routing traffic through a proxy or a VPN, the\r\nIP address used to generate this geolocation hint MUST be an\r\naddress that is presented upstream beyond the proxy or VPN\r\n(in other words, the \"egress IP address\"). The proxy or VPN's\r\nselection of this egress IP address MAY have been based on\r\nthe client's original un-proxied IP address, but any hints that\r\nthe client presents to servers beyond a proxy or VPN MUST NOT\r\nreveal more geolocation information that would be possible to\r\ndetermine from looking up information about the egress IP address\r\nitself.\r\n```",
              "createdAt": "2024-10-19T03:26:23Z",
              "updatedAt": "2024-10-19T03:26:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz855",
          "commit": {
            "abbreviatedOid": "241224a"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:29:28Z",
          "updatedAt": "2024-10-19T03:29:28Z",
          "comments": [
            {
              "originalPosition": 189,
              "body": "```suggestion\r\ngeolocation feeds.\r\n- Recognizing a mismatch between the client hint information and the server's\r\ncurrent result from its IP-based geolocation feed as a reason to schedule an\r\nautomatic refresh of its geolocation feed information. This can help ensure that\r\nchanges to feeds are adopted quickly, improving results for clients that don't\r\nsend the client hint.\r\n```",
              "createdAt": "2024-10-19T03:29:28Z",
              "updatedAt": "2024-10-19T03:29:29Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz87B",
          "commit": {
            "abbreviatedOid": "cec0a87"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:30:09Z",
          "updatedAt": "2024-10-19T03:30:09Z",
          "comments": [
            {
              "originalPosition": 210,
              "body": "```suggestion\r\nadministrative region might already rely on geoIP databases to\r\n```",
              "createdAt": "2024-10-19T03:30:09Z",
              "updatedAt": "2024-10-19T03:30:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz88Q",
          "commit": {
            "abbreviatedOid": "3cd0695"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-10-19T03:30:57Z",
          "updatedAt": "2024-10-19T03:30:57Z",
          "comments": [
            {
              "originalPosition": 231,
              "body": "```suggestion\r\naddress, the combination of designated location and IP can create a\r\n```",
              "createdAt": "2024-10-19T03:30:57Z",
              "updatedAt": "2024-10-19T03:30:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOEwrMS86Nz880",
          "commit": {
            "abbreviatedOid": "ee3eb30"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-19T03:31:11Z",
          "updatedAt": "2024-10-19T03:31:11Z",
          "comments": []
        }
      ]
    },
    {
      "number": 264,
      "id": "PR_kwDOEwrMS85_JdDf",
      "title": "Clarify that exclusions can be specified without any match domains",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/264",
      "state": "MERGED",
      "author": "ddragana",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "Change excludedDomains into excludeDomains to match matchDomains.\r\n\r\nThis should resolve #254 and #255 .",
      "createdAt": "2024-10-18T21:48:32Z",
      "updatedAt": "2024-10-19T03:13:42Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "69c90921d5a2422d48ae6c419f0e2e99e5bb86e1",
      "headRepository": "ddragana/privacy-proxy",
      "headRefName": "issue_254",
      "headRefOid": "2750c965bbd554e9a70bf059964e1411cda7b99f",
      "closedAt": "2024-10-19T03:13:42Z",
      "mergedAt": "2024-10-19T03:13:42Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "5b99726014976b61b64778c13f949f471480f360"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86Nz7pL",
          "commit": {
            "abbreviatedOid": "bdfa9fe"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-19T03:11:28Z",
          "updatedAt": "2024-10-19T03:12:09Z",
          "comments": [
            {
              "originalPosition": 5,
              "body": "```suggestion\r\n| excludeDomains | Yes | An array of DNS zones or subdomains that cannot be accessed over this proxy. If matchDomains is specfied, excludeDomains should list more specific domains within entries in the matchDomains array | Array of Strings | [ \"public.example.com\" ] |\r\n```",
              "createdAt": "2024-10-19T03:11:28Z",
              "updatedAt": "2024-10-19T03:12:09Z"
            },
            {
              "originalPosition": 14,
              "body": "```suggestion\r\naccess it through the proxy. The `excludeDomains` parameter can be present even if `matchDomains`\r\n```",
              "createdAt": "2024-10-19T03:11:47Z",
              "updatedAt": "2024-10-19T03:12:09Z"
            },
            {
              "originalPosition": 15,
              "body": "```suggestion\r\nis omitted. When this is the case, the client assumes that all domains except the domains\r\n```",
              "createdAt": "2024-10-19T03:12:05Z",
              "updatedAt": "2024-10-19T03:12:09Z"
            }
          ]
        }
      ]
    },
    {
      "number": 265,
      "id": "PR_kwDOEwrMS85_Jg95",
      "title": "Describe updating a known HTTP proxy to a secure HTTP proxy.",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/265",
      "state": "MERGED",
      "author": "ddragana",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [
        "Proxy PvDs"
      ],
      "body": "This should resolve #238.",
      "createdAt": "2024-10-18T22:06:49Z",
      "updatedAt": "2024-10-19T03:10:23Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "69c90921d5a2422d48ae6c419f0e2e99e5bb86e1",
      "headRepository": "ddragana/privacy-proxy",
      "headRefName": "issue238",
      "headRefOid": "810fc63c9932599fc05c10c7fff8d8ed65baaed0",
      "closedAt": "2024-10-19T03:10:23Z",
      "mergedAt": "2024-10-19T03:10:23Z",
      "mergedBy": "tfpauly",
      "mergeCommit": {
        "oid": "0d4e4be8fdcb44c4f5614f3a1f14711541d64902"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOEwrMS86Nz7nN",
          "commit": {
            "abbreviatedOid": "810fc63"
          },
          "author": "tfpauly",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-10-19T03:10:18Z",
          "updatedAt": "2024-10-19T03:10:18Z",
          "comments": []
        }
      ]
    },
    {
      "number": 269,
      "id": "PR_kwDOEwrMS86DrOC8",
      "title": "Port matching rework",
      "url": "https://github.com/tfpauly/privacy-proxy/pull/269",
      "state": "OPEN",
      "author": "yaroslavros",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "As discussed at IETF121 I merged matchPorts into other matching criteria. Adjusted examples and wording accordingly.",
      "createdAt": "2024-12-01T21:22:50Z",
      "updatedAt": "2024-12-01T21:22:50Z",
      "baseRepository": "tfpauly/privacy-proxy",
      "baseRefName": "main",
      "baseRefOid": "ac502ec989fa1de41054bd73c27df747e42590d5",
      "headRepository": "yaroslavros/privacy-proxy",
      "headRefName": "destination-port-rework",
      "headRefOid": "69d16e00d8eda548bb5259398e5a0e5cb0fc9216",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    }
  ]
}